{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Marketplace from \"./components/Marketplace/Marketplace\";\nimport AccountDetails from \"./components/AccountDetails/AccountDetails\";\nimport CroskullAdventure from \"./components/CroskullAdventure/CroskullAdventure\";\nimport Merchant from \"./components/Merchant/Merchant\";\nimport Analytics from \"./components/Analytics/Analytics\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Notifier from \"./components/Notifier/Notifier\";\nimport Tavern from \"./components/Tavern/Tavern\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { ethers } from 'ethers';\nimport store from \"./redux/store\";\nimport \"./App.css\";\nvar provider, contract, stakingContract, ethProvider;\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.componentDidMount = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.subscribe();\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.setProvider = function () {\n      var _provider = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (_provider) {\n        provider = _provider;\n      } else if (!provider) {\n        provider = window.ethereum;\n      }\n    };\n\n    _this.getNFTData = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _this$state, croSkullContract, stakingContract, accountAddress, receivedFilter, transferedFilter, inStakeFilter, receivedEvents, transferedEvents, inStakeTokens, received, transfered, final;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$state = _this.state, croSkullContract = _this$state.croSkullContract, stakingContract = _this$state.stakingContract, accountAddress = _this$state.accountAddress;\n              receivedFilter = croSkullContract.filters.Transfer(null, accountAddress);\n              transferedFilter = croSkullContract.filters.Transfer(accountAddress);\n              inStakeFilter = stakingContract.filters.Stake(accountAddress);\n              _context2.next = 6;\n              return croSkullContract.queryFilter(receivedFilter);\n\n            case 6:\n              receivedEvents = _context2.sent;\n              _context2.next = 9;\n              return croSkullContract.queryFilter(transferedFilter);\n\n            case 9:\n              transferedEvents = _context2.sent;\n              _context2.next = 12;\n              return stakingContract.getTokensIds();\n\n            case 12:\n              inStakeTokens = _context2.sent;\n              received = [];\n              transfered = [];\n              receivedEvents.map(function (event) {\n                var topics = event.decode(event.data, event.topics);\n                var tokenId = topics.tokenId.toString();\n                console.log(tokenId); //if( ! received.includes(tokenId) )\n\n                if (received[tokenId]) {\n                  received[tokenId]++;\n                } else {\n                  received[tokenId] = 1;\n                }\n              });\n              transferedEvents.map(function (event) {\n                var topics = event.decode(event.data, event.topics);\n                var tokenId = topics.tokenId.toString();\n\n                if (transfered[tokenId]) {\n                  transfered[tokenId]++;\n                } else {\n                  transfered[tokenId] = 1;\n                }\n              });\n              final = [];\n              received.forEach(function (nTrasfer, tokenId) {\n                if (nTrasfer > transfered[tokenId] || nTrasfer && !transfered[tokenId]) {\n                  final.push(tokenId);\n                }\n              }); //let sfiltred = received.filter( x => ! transfered.includes(x))\n\n              final = final.filter(function (x) {\n                return !inStakeTokens.includes(x);\n              });\n\n              _this.setState({\n                croSkulls: final,\n                croSkullsStaked: inStakeTokens\n              });\n\n            case 21:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    _this.setMetaData = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var croSkulls, traits, traitsTypes, boyLength;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              croSkulls = _this.state.croSkulls;\n\n              if (croSkulls.length !== 0) {\n                traits = [];\n                traitsTypes = [];\n\n                if (croSkulls.length.length !== 0) {\n                  boyLength = croSkulls.length;\n                  croSkulls.forEach(function (cryptoboy, iBoy) {\n                    //loop cryptoboy\n                    if (cryptoboy.metaData) {\n                      var traitsLength = cryptoboy.metaData.attributes.length;\n                      cryptoboy.metaData.attributes.forEach(function (trait, iTraits) {\n                        // loop tratti\n                        var trait_type = trait.trait_type,\n                            value = trait.value;\n                        var type = trait_type.replace(' ', '-');\n                        var uniqueType = true;\n                        traitsTypes.forEach(function (existType, i) {\n                          if (existType === type) uniqueType = false;\n                        });\n                        if (uniqueType) traitsTypes.push(type);\n                        if (traits[type] === undefined) traits[type] = [];\n                        var unique = true;\n                        traits[type].forEach(function (existValue) {\n                          if (existValue === value) unique = false;\n                        });\n                        if (unique) traits[type].push(value);\n\n                        if (boyLength === iBoy + 1 && traitsLength === iTraits + 1) {\n                          _this.setState({\n                            traits: traits\n                          });\n\n                          _this.setState({\n                            traitsTypes: traitsTypes\n                          });\n                        }\n                      });\n                    }\n                  });\n                }\n              }\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    _this.handleStatusNFTFilter = function (ev) {\n      var _this$state2 = _this.state,\n          croSkulls = _this$state2.croSkulls,\n          accountAddress = _this$state2.accountAddress;\n      var value = ev.value;\n      var newMarketplaceView = [];\n\n      switch (value) {\n        case 'all':\n          newMarketplaceView = croSkulls;\n          break;\n\n        case 'inSale':\n          croSkulls.forEach(function (croSkull, i) {\n            if (croSkull.forSale) newMarketplaceView.push(croSkull);\n          });\n          break;\n\n        case 'notInSale':\n          croSkulls.forEach(function (croSkull, i) {\n            if (!croSkull.forSale) newMarketplaceView.push(croSkull);\n          });\n          break;\n\n        case 'owned':\n          croSkulls.forEach(function (croSkull, i) {\n            if (croSkull.currentOwner === accountAddress) newMarketplaceView.push(croSkull);\n          });\n          break;\n      }\n\n      _this.setState({\n        marketplaceView: newMarketplaceView\n      });\n    };\n\n    _this.handleFilterBar = function (ev) {\n      var _this$state3 = _this.state,\n          croSkulls = _this$state3.croSkulls,\n          activeFilters = _this$state3.activeFilters;\n      var value = ev.value.split('_');\n      var trait = value[0];\n      value = value[1].replace('-', ' ');\n      var newFilters = activeFilters;\n\n      if (!newFilters.length > 0) {\n        newFilters.push({\n          trait_type: trait,\n          value: value\n        });\n      } else {\n        var exist = false;\n        newFilters.forEach(function (filter, i) {\n          //controllo i filtri attivi\n          if (exist) return; //se esiste già esco\n\n          if (filter.trait_type === trait) {\n            // tipo tratto uguale \n            if (filter.value != value) {\n              // valore tratto diverso \n              newFilters[i] = {\n                trait_type: trait,\n                value: value\n              };\n              exist = true;\n            }\n\n            if (filter.value === value) {\n              // valoe tratto uguale\n              exist = true;\n            }\n          }\n        });\n        if (!exist) newFilters.push({\n          trait_type: trait,\n          value: value\n        });\n      }\n\n      var newView = [];\n      croSkulls.map(function (croSkull, i) {\n        //crypto boy 1\n        if (croSkull.metaData) {\n          var filterValid = true;\n          newFilters.forEach(function (filter) {\n            //filtro 1\n            if (!filterValid) return;\n            var traitValid = false;\n            croSkull.metaData.attributes.forEach(function (forTrait) {\n              // tratto 1\n              if (traitValid) return;\n\n              if (forTrait.trait_type === filter.trait_type && forTrait.value === filter.value || filter.value === 'none') {\n                //tratto valido\n                traitValid = true;\n                return;\n              }\n            });\n            filterValid = traitValid;\n          });\n          if (filterValid) newView.push(croSkull); // aggiungo il tratto\n        }\n      });\n\n      _this.setState({\n        marketplaceView: newView\n      });\n\n      _this.setState({\n        activeFilters: newFilters\n      });\n    };\n\n    _this.handleOrderChange = function () {\n      var ev = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      var _assertThisInitialize = _assertThisInitialized(_assertThisInitialized(_this)),\n          numToEth = _assertThisInitialize.numToEth;\n\n      var order = ev != null ? ev.value : _this.state.order;\n      var marketplaceView = _this.state.marketplaceView;\n\n      if (order === 'ASC') {\n        marketplaceView.sort(function (a, b) {\n          a = parseInt(numToEth(a.price));\n          b = parseInt(numToEth(b.price));\n          return a - b;\n        });\n      } else {\n        marketplaceView.sort(function (a, b) {\n          a = parseInt(numToEth(a.price));\n          b = parseInt(numToEth(b.price));\n          return a - b;\n        }).reverse();\n      }\n\n      _this.setState({\n        order: order\n      });\n    };\n\n    _this.subscribe = function () {\n      store.subscribe(function () {\n        _this.setState({\n          blockchain: store.getState().blockchain\n        });\n      });\n    };\n\n    _this.state = {\n      blockchain: 0,\n      //reward©\n      traits: [],\n      traitsTypes: [],\n      order: 'ASC',\n      marketplaceView: [],\n      activeFilters: [],\n      activeNFTStatus: 'all'\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Notifier, {\n        data: store.getState().data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HashRouter, {\n        basename: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        render: function render(_ref4) {\n          var location = _ref4.location;\n          return /*#__PURE__*/React.createElement(TransitionGroup, {\n            className: \"container-fluid \".concat(location.pathname.replace('/', '')),\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(CSSTransition, {\n            key: location.pathname,\n            classNames: \"fade\",\n            timeout: 500,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Switch, {\n            location: location,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(Route, {\n            path: \"/\",\n            exact: true,\n            render: function render() {\n              return /*#__PURE__*/React.createElement(AccountDetails, {\n                accountAddress: _this2.state.accountAddress,\n                accountBalance: _this2.state.accountBalance,\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 29\n                }\n              });\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(Route, {\n            path: \"/marketplace\",\n            render: function render() {\n              return /*#__PURE__*/React.createElement(Marketplace, {\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 29\n                }\n              });\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(Route, {\n            path: \"/adventure\",\n            render: function render() {\n              return /*#__PURE__*/React.createElement(CroskullAdventure, {\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 29\n                }\n              });\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(Route, {\n            path: \"/tavern\",\n            render: function render() {\n              return /*#__PURE__*/React.createElement(Tavern, {\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 29\n                }\n              });\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(Route, {\n            path: \"/merchant\",\n            render: function render() {\n              return /*#__PURE__*/React.createElement(Merchant, {\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 29\n                }\n              });\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(Route, {\n            path: \"/analytics\",\n            render: function render() {\n              return /*#__PURE__*/React.createElement(Analytics, {\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 29\n                }\n              });\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(Route, {\n            path: \"/raffle\",\n            render: function render() {\n              return /*#__PURE__*/React.createElement(Raffle, {\n                accountAddress: accountAddress,\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 29\n                }\n              });\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 25\n            }\n          }))));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 15\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; //export default connect(mapStateToProps)(App);\n\nvar formatEther = function formatEther(bn) {\n  return ethers.utils.formatEther(bn);\n};\n\nvar formatUnits = function formatUnits(value, unit) {\n  return ethers.utils.formatUnits(value, unit);\n};\n\nvar getAddress = function getAddress(address) {\n  return ethers.utils.getAddress(address);\n}; //preparing modal","map":{"version":3,"sources":["F:/Mattia/Visual studio/AppCroskull/croskull-nft-marketplace/src/App.js"],"names":["React","Component","HashRouter","Route","Switch","Marketplace","AccountDetails","CroskullAdventure","Merchant","Analytics","Navbar","Notifier","Tavern","TransitionGroup","CSSTransition","ethers","store","provider","contract","stakingContract","ethProvider","App","props","componentDidMount","subscribe","setProvider","_provider","window","ethereum","getNFTData","state","croSkullContract","accountAddress","receivedFilter","filters","Transfer","transferedFilter","inStakeFilter","Stake","queryFilter","receivedEvents","transferedEvents","getTokensIds","inStakeTokens","received","transfered","map","event","topics","decode","data","tokenId","toString","console","log","final","forEach","nTrasfer","push","filter","x","includes","setState","croSkulls","croSkullsStaked","setMetaData","length","traits","traitsTypes","boyLength","cryptoboy","iBoy","metaData","traitsLength","attributes","trait","iTraits","trait_type","value","type","replace","uniqueType","existType","i","undefined","unique","existValue","handleStatusNFTFilter","ev","newMarketplaceView","croSkull","forSale","currentOwner","marketplaceView","handleFilterBar","activeFilters","split","newFilters","exist","newView","filterValid","traitValid","forTrait","handleOrderChange","numToEth","order","sort","a","b","parseInt","price","reverse","blockchain","getState","activeNFTStatus","location","pathname","accountBalance","formatEther","bn","utils","formatUnits","unit","getAddress","address"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport Marketplace from \"./components/Marketplace/Marketplace\";\r\nimport AccountDetails from \"./components/AccountDetails/AccountDetails\";\r\nimport CroskullAdventure from \"./components/CroskullAdventure/CroskullAdventure\";\r\nimport Merchant from \"./components/Merchant/Merchant\";\r\nimport Analytics from \"./components/Analytics/Analytics\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Notifier from \"./components/Notifier/Notifier\";\r\nimport Tavern from \"./components/Tavern/Tavern\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport { ethers } from 'ethers';\r\nimport store from \"./redux/store\";\r\nimport \"./App.css\";\r\n\r\nlet provider, contract, stakingContract, ethProvider;\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      blockchain: 0,\r\n      //reward©\r\n      \r\n      traits: [],\r\n      traitsTypes: [],\r\n      order: 'ASC',\r\n      marketplaceView: [],\r\n      activeFilters: [],\r\n      activeNFTStatus: 'all',\r\n    };\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    this.subscribe()\r\n  };\r\n\r\n  setProvider = (_provider = false ) => {\r\n    if( _provider ){\r\n      provider = _provider;\r\n    }else if( ! provider ) {\r\n      provider = window.ethereum\r\n    }\r\n  }\r\n  \r\n\r\n  getNFTData = async () => {\r\n    let {croSkullContract, stakingContract, accountAddress} = this.state\r\n    let receivedFilter = croSkullContract.filters.Transfer(null,accountAddress)\r\n    let transferedFilter = croSkullContract.filters.Transfer(accountAddress)\r\n    let inStakeFilter = stakingContract.filters.Stake(accountAddress)\r\n\r\n    let receivedEvents = await croSkullContract.queryFilter(receivedFilter)\r\n    let transferedEvents = await croSkullContract.queryFilter(transferedFilter)\r\n\r\n    let inStakeTokens = await stakingContract.getTokensIds()\r\n\r\n    let received = [];\r\n    let transfered = [];\r\n    receivedEvents.map( event => {\r\n      let topics = event.decode( event.data, event.topics)\r\n      let tokenId = topics.tokenId.toString()\r\n      console.log(tokenId)\r\n      //if( ! received.includes(tokenId) )\r\n      if( received[tokenId] ){\r\n        received[tokenId]++\r\n      } else{\r\n        received[tokenId] = 1\r\n      }\r\n    })\r\n    transferedEvents.map( event => {\r\n      let topics = event.decode( event.data, event.topics)\r\n      let tokenId = topics.tokenId.toString()\r\n      if( transfered[tokenId] ){\r\n        transfered[tokenId]++\r\n      } else{\r\n        transfered[tokenId] = 1\r\n      }\r\n    })\r\n    let final = []\r\n    received.forEach( ( nTrasfer, tokenId ) => {\r\n      if(  nTrasfer > transfered[tokenId] || nTrasfer && !transfered[tokenId] ){\r\n        final.push(tokenId)\r\n      }\r\n    })\r\n    //let sfiltred = received.filter( x => ! transfered.includes(x))\r\n    final = final.filter( x => ! inStakeTokens.includes(x))\r\n    this.setState({\r\n      croSkulls: final,\r\n      croSkullsStaked: inStakeTokens\r\n    })\r\n  }\r\n\r\n  setMetaData = async () => {\r\n    const { croSkulls } = this.state\r\n    if (croSkulls.length !== 0) {\r\n      let traits = []\r\n      let traitsTypes = []\r\n      if( croSkulls.length.length !== 0 ){\r\n        let boyLength = croSkulls.length\r\n        croSkulls.forEach( (cryptoboy, iBoy) => { //loop cryptoboy\r\n          if( cryptoboy.metaData ){\r\n            let traitsLength = cryptoboy.metaData.attributes.length\r\n            cryptoboy.metaData.attributes.forEach( (trait, iTraits) => { // loop tratti\r\n              \r\n              let { trait_type, value } = trait\r\n              let type = trait_type.replace(' ', '-')\r\n              let uniqueType = true\r\n\r\n              traitsTypes.forEach( ( existType, i) => {\r\n                if( existType === type )\r\n                  uniqueType = false\r\n              } )\r\n\r\n              if( uniqueType )\r\n                traitsTypes.push( type )\r\n\r\n              if( traits[type] === undefined )\r\n                traits[type] = []\r\n\r\n              let unique = true\r\n              traits[type].forEach( existValue => {\r\n                if (existValue === value )\r\n                  unique = false\r\n              })\r\n\r\n              if( unique )\r\n                traits[type].push( value )\r\n              \r\n\r\n                \r\n                if( boyLength === ( iBoy + 1 ) && traitsLength === ( iTraits + 1 ) ){\r\n                  this.setState({ traits });\r\n                  this.setState( { traitsTypes });\r\n                }\r\n              })\r\n            }\r\n          })\r\n        }\r\n\r\n    }\r\n  };\r\n\r\n  handleStatusNFTFilter = (ev) => {\r\n    let { croSkulls, accountAddress } = this.state;\r\n    let value = ev.value\r\n    let newMarketplaceView = [];\r\n    switch (value){\r\n      case 'all':\r\n        newMarketplaceView = croSkulls\r\n        break;\r\n      case 'inSale':\r\n        croSkulls.forEach( ( croSkull, i ) => {\r\n          if( croSkull.forSale )\r\n            newMarketplaceView.push(croSkull)\r\n        } )\r\n        break;\r\n      case 'notInSale':\r\n        croSkulls.forEach( ( croSkull, i ) => {\r\n          if( ! croSkull.forSale )\r\n            newMarketplaceView.push(croSkull)\r\n        } )\r\n        break;\r\n      case 'owned':\r\n        croSkulls.forEach( ( croSkull, i ) => {\r\n          if( croSkull.currentOwner === accountAddress)\r\n            newMarketplaceView.push(croSkull)\r\n        } )\r\n        break;\r\n      }\r\n      this.setState( { marketplaceView: newMarketplaceView } )\r\n\r\n\r\n  }\r\n\r\n  handleFilterBar = (ev) => {\r\n    const { croSkulls, activeFilters } = this.state;\r\n    let value = ev.value.split('_')\r\n\r\n    let trait = value[0]\r\n\r\n    value = value[1].replace('-', ' ')\r\n\r\n    let newFilters = activeFilters\r\n    if( ! newFilters.length > 0){\r\n      newFilters.push({ trait_type: trait , value: value })\r\n    }else{\r\n      let exist = false\r\n      newFilters.forEach( ( filter, i )=> { //controllo i filtri attivi\r\n        if( exist ) return; //se esiste già esco\r\n        if( filter.trait_type === trait  ){ // tipo tratto uguale \r\n          if( filter.value != value){ // valore tratto diverso \r\n\r\n              newFilters[i] = { trait_type: trait , value: value }\r\n            exist = true\r\n          }\r\n          if( filter.value === value ){ // valoe tratto uguale\r\n            exist = true\r\n          }\r\n        }\r\n      })\r\n        if( ! exist ) \r\n          newFilters.push( { trait_type: trait , value: value } )\r\n    }\r\n\r\n\r\n    let newView = [];\r\n    croSkulls.map( ( croSkull, i ) => { //crypto boy 1\r\n      if( croSkull.metaData ){\r\n        let filterValid = true\r\n        newFilters.forEach( filter => { //filtro 1\r\n          if( ! filterValid ) return\r\n          let traitValid = false\r\n          croSkull.metaData.attributes.forEach(forTrait => { // tratto 1\r\n            if( traitValid ) return\r\n\r\n            if( ( forTrait.trait_type === filter.trait_type ) && ( forTrait.value === filter.value ) || ( filter.value === 'none' ) ){ //tratto valido\r\n              traitValid = true\r\n              return\r\n            }\r\n          })\r\n          filterValid = traitValid\r\n        })\r\n        if(filterValid)\r\n          newView.push(croSkull) // aggiungo il tratto\r\n      }\r\n    })\r\n\r\n\r\n    this.setState( { marketplaceView: newView } )\r\n    this.setState( { activeFilters: newFilters } )\r\n  }\r\n\r\n  handleOrderChange = (ev = null) => {\r\n\r\n    const { numToEth } = this\r\n    let order = ev != null ? ev.value : this.state.order\r\n    const { marketplaceView } = this.state;\r\n    if( order === 'ASC' ){\r\n      marketplaceView.sort( (a, b) => {\r\n        a = parseInt( numToEth(a.price) )\r\n        b = parseInt( numToEth(b.price) )\r\n        return (  a - b  ) \r\n      })\r\n    }else{\r\n      marketplaceView.sort( (a, b) => {\r\n        a = parseInt( numToEth(a.price) )\r\n        b = parseInt( numToEth(b.price) )\r\n        return (  a - b  ) \r\n      }).reverse()\r\n    }\r\n    this.setState({ order })\r\n  }\r\n\r\n  subscribe = () => {\r\n    store.subscribe(() => {\r\n      this.setState({\r\n        blockchain: store.getState().blockchain\r\n      });\r\n    });\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <Notifier data={store.getState().data} />\r\n        {  (\r\n            <>\r\n            <HashRouter \r\n              basename=\"/\">\r\n              <Navbar/>\r\n              <Route\r\n                render={({ location }) => (\r\n                    \r\n                  <TransitionGroup className={`container-fluid ${location.pathname.replace('/','')}`}>\r\n                    <CSSTransition\r\n                      key={location.pathname}\r\n                      classNames=\"fade\"\r\n                      timeout={500}\r\n                    >\r\n                      <Switch \r\n                        location={location}\r\n                      >\r\n                        <Route\r\n                          path=\"/\"\r\n                          exact\r\n                          render={() => (\r\n                            <AccountDetails\r\n                              accountAddress={this.state.accountAddress}\r\n                              accountBalance={this.state.accountBalance}\r\n                            />\r\n                          )}\r\n                        />\r\n                        <Route\r\n                          path=\"/marketplace\"\r\n                          render={() => (\r\n                            <Marketplace></Marketplace>\r\n                          )} \r\n                        />\r\n                        <Route\r\n                          path=\"/adventure\"\r\n                          render={() => (\r\n                            <CroskullAdventure></CroskullAdventure>\r\n                          )}\r\n                        />\r\n                        <Route\r\n                          path=\"/tavern\"\r\n                          render={() => (\r\n                            <Tavern />\r\n                          )}\r\n                        />\r\n                        <Route \r\n                          path=\"/merchant\"\r\n                          render={() => (\r\n                            <Merchant />\r\n                          )}\r\n                        />\r\n                        <Route \r\n                          path=\"/analytics\"\r\n                          render={() => (\r\n                            <Analytics />\r\n                          )}\r\n                        />\r\n                        <Route \r\n                          path=\"/raffle\"\r\n                          render={() => (\r\n                            <Raffle accountAddress={accountAddress} />\r\n                          )}\r\n                        />\r\n                      </Switch>\r\n                    </CSSTransition>\r\n                  </TransitionGroup> \r\n              )}/>\r\n            </HashRouter>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n//export default connect(mapStateToProps)(App);\r\n\r\n\r\nconst formatEther = bn => ethers.utils.formatEther(bn)\r\nconst formatUnits = (value, unit) => ethers.utils.formatUnits(value, unit)\r\nconst getAddress = address => ethers.utils.getAddress(address)\r\n//preparing modal\r\n"]},"metadata":{},"sourceType":"module"}