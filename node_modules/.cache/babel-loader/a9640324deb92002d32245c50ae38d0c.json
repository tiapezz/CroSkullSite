{"ast":null,"code":"\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e3) { throw _e3; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e4) { didErr = true; err = _e4; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Fraction = exports.Header = exports.Misbehaviour = exports.ConsensusState = exports.ClientState = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nvar long_1 = __importDefault(require(\"long\"));\n\nvar minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nvar duration_1 = require(\"../../../../google/protobuf/duration\");\n\nvar client_1 = require(\"../../../../ibc/core/client/v1/client\");\n\nvar commitment_1 = require(\"../../../../ibc/core/commitment/v1/commitment\");\n\nvar types_1 = require(\"../../../../tendermint/types/types\");\n\nvar validator_1 = require(\"../../../../tendermint/types/validator\");\n\nvar timestamp_1 = require(\"../../../../google/protobuf/timestamp\");\n\nvar proofs_1 = require(\"../../../../confio/proofs\");\n\nexports.protobufPackage = \"ibc.lightclients.tendermint.v1\";\nvar baseClientState = {\n  chainId: \"\",\n  upgradePath: \"\",\n  allowUpdateAfterExpiry: false,\n  allowUpdateAfterMisbehaviour: false\n};\nexports.ClientState = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.chainId !== \"\") {\n      writer.uint32(10).string(message.chainId);\n    }\n\n    if (message.trustLevel !== undefined) {\n      exports.Fraction.encode(message.trustLevel, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.trustingPeriod !== undefined) {\n      duration_1.Duration.encode(message.trustingPeriod, writer.uint32(26).fork()).ldelim();\n    }\n\n    if (message.unbondingPeriod !== undefined) {\n      duration_1.Duration.encode(message.unbondingPeriod, writer.uint32(34).fork()).ldelim();\n    }\n\n    if (message.maxClockDrift !== undefined) {\n      duration_1.Duration.encode(message.maxClockDrift, writer.uint32(42).fork()).ldelim();\n    }\n\n    if (message.frozenHeight !== undefined) {\n      client_1.Height.encode(message.frozenHeight, writer.uint32(50).fork()).ldelim();\n    }\n\n    if (message.latestHeight !== undefined) {\n      client_1.Height.encode(message.latestHeight, writer.uint32(58).fork()).ldelim();\n    }\n\n    var _iterator = _createForOfIteratorHelper(message.proofSpecs),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        proofs_1.ProofSpec.encode(v, writer.uint32(66).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    var _iterator2 = _createForOfIteratorHelper(message.upgradePath),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _v = _step2.value;\n        writer.uint32(74).string(_v);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    if (message.allowUpdateAfterExpiry === true) {\n      writer.uint32(80).bool(message.allowUpdateAfterExpiry);\n    }\n\n    if (message.allowUpdateAfterMisbehaviour === true) {\n      writer.uint32(88).bool(message.allowUpdateAfterMisbehaviour);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseClientState);\n    message.proofSpecs = [];\n    message.upgradePath = [];\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.chainId = reader.string();\n          break;\n\n        case 2:\n          message.trustLevel = exports.Fraction.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.trustingPeriod = duration_1.Duration.decode(reader, reader.uint32());\n          break;\n\n        case 4:\n          message.unbondingPeriod = duration_1.Duration.decode(reader, reader.uint32());\n          break;\n\n        case 5:\n          message.maxClockDrift = duration_1.Duration.decode(reader, reader.uint32());\n          break;\n\n        case 6:\n          message.frozenHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n\n        case 7:\n          message.latestHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n\n        case 8:\n          message.proofSpecs.push(proofs_1.ProofSpec.decode(reader, reader.uint32()));\n          break;\n\n        case 9:\n          message.upgradePath.push(reader.string());\n          break;\n\n        case 10:\n          message.allowUpdateAfterExpiry = reader.bool();\n          break;\n\n        case 11:\n          message.allowUpdateAfterMisbehaviour = reader.bool();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseClientState);\n    message.proofSpecs = [];\n    message.upgradePath = [];\n\n    if (object.chainId !== undefined && object.chainId !== null) {\n      message.chainId = String(object.chainId);\n    } else {\n      message.chainId = \"\";\n    }\n\n    if (object.trustLevel !== undefined && object.trustLevel !== null) {\n      message.trustLevel = exports.Fraction.fromJSON(object.trustLevel);\n    } else {\n      message.trustLevel = undefined;\n    }\n\n    if (object.trustingPeriod !== undefined && object.trustingPeriod !== null) {\n      message.trustingPeriod = duration_1.Duration.fromJSON(object.trustingPeriod);\n    } else {\n      message.trustingPeriod = undefined;\n    }\n\n    if (object.unbondingPeriod !== undefined && object.unbondingPeriod !== null) {\n      message.unbondingPeriod = duration_1.Duration.fromJSON(object.unbondingPeriod);\n    } else {\n      message.unbondingPeriod = undefined;\n    }\n\n    if (object.maxClockDrift !== undefined && object.maxClockDrift !== null) {\n      message.maxClockDrift = duration_1.Duration.fromJSON(object.maxClockDrift);\n    } else {\n      message.maxClockDrift = undefined;\n    }\n\n    if (object.frozenHeight !== undefined && object.frozenHeight !== null) {\n      message.frozenHeight = client_1.Height.fromJSON(object.frozenHeight);\n    } else {\n      message.frozenHeight = undefined;\n    }\n\n    if (object.latestHeight !== undefined && object.latestHeight !== null) {\n      message.latestHeight = client_1.Height.fromJSON(object.latestHeight);\n    } else {\n      message.latestHeight = undefined;\n    }\n\n    if (object.proofSpecs !== undefined && object.proofSpecs !== null) {\n      var _iterator3 = _createForOfIteratorHelper(object.proofSpecs),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var e = _step3.value;\n          message.proofSpecs.push(proofs_1.ProofSpec.fromJSON(e));\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n\n    if (object.upgradePath !== undefined && object.upgradePath !== null) {\n      var _iterator4 = _createForOfIteratorHelper(object.upgradePath),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _e = _step4.value;\n          message.upgradePath.push(String(_e));\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n\n    if (object.allowUpdateAfterExpiry !== undefined && object.allowUpdateAfterExpiry !== null) {\n      message.allowUpdateAfterExpiry = Boolean(object.allowUpdateAfterExpiry);\n    } else {\n      message.allowUpdateAfterExpiry = false;\n    }\n\n    if (object.allowUpdateAfterMisbehaviour !== undefined && object.allowUpdateAfterMisbehaviour !== null) {\n      message.allowUpdateAfterMisbehaviour = Boolean(object.allowUpdateAfterMisbehaviour);\n    } else {\n      message.allowUpdateAfterMisbehaviour = false;\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.chainId !== undefined && (obj.chainId = message.chainId);\n    message.trustLevel !== undefined && (obj.trustLevel = message.trustLevel ? exports.Fraction.toJSON(message.trustLevel) : undefined);\n    message.trustingPeriod !== undefined && (obj.trustingPeriod = message.trustingPeriod ? duration_1.Duration.toJSON(message.trustingPeriod) : undefined);\n    message.unbondingPeriod !== undefined && (obj.unbondingPeriod = message.unbondingPeriod ? duration_1.Duration.toJSON(message.unbondingPeriod) : undefined);\n    message.maxClockDrift !== undefined && (obj.maxClockDrift = message.maxClockDrift ? duration_1.Duration.toJSON(message.maxClockDrift) : undefined);\n    message.frozenHeight !== undefined && (obj.frozenHeight = message.frozenHeight ? client_1.Height.toJSON(message.frozenHeight) : undefined);\n    message.latestHeight !== undefined && (obj.latestHeight = message.latestHeight ? client_1.Height.toJSON(message.latestHeight) : undefined);\n\n    if (message.proofSpecs) {\n      obj.proofSpecs = message.proofSpecs.map(function (e) {\n        return e ? proofs_1.ProofSpec.toJSON(e) : undefined;\n      });\n    } else {\n      obj.proofSpecs = [];\n    }\n\n    if (message.upgradePath) {\n      obj.upgradePath = message.upgradePath.map(function (e) {\n        return e;\n      });\n    } else {\n      obj.upgradePath = [];\n    }\n\n    message.allowUpdateAfterExpiry !== undefined && (obj.allowUpdateAfterExpiry = message.allowUpdateAfterExpiry);\n    message.allowUpdateAfterMisbehaviour !== undefined && (obj.allowUpdateAfterMisbehaviour = message.allowUpdateAfterMisbehaviour);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c;\n\n    var message = Object.assign({}, baseClientState);\n    message.chainId = (_a = object.chainId) !== null && _a !== void 0 ? _a : \"\";\n\n    if (object.trustLevel !== undefined && object.trustLevel !== null) {\n      message.trustLevel = exports.Fraction.fromPartial(object.trustLevel);\n    } else {\n      message.trustLevel = undefined;\n    }\n\n    if (object.trustingPeriod !== undefined && object.trustingPeriod !== null) {\n      message.trustingPeriod = duration_1.Duration.fromPartial(object.trustingPeriod);\n    } else {\n      message.trustingPeriod = undefined;\n    }\n\n    if (object.unbondingPeriod !== undefined && object.unbondingPeriod !== null) {\n      message.unbondingPeriod = duration_1.Duration.fromPartial(object.unbondingPeriod);\n    } else {\n      message.unbondingPeriod = undefined;\n    }\n\n    if (object.maxClockDrift !== undefined && object.maxClockDrift !== null) {\n      message.maxClockDrift = duration_1.Duration.fromPartial(object.maxClockDrift);\n    } else {\n      message.maxClockDrift = undefined;\n    }\n\n    if (object.frozenHeight !== undefined && object.frozenHeight !== null) {\n      message.frozenHeight = client_1.Height.fromPartial(object.frozenHeight);\n    } else {\n      message.frozenHeight = undefined;\n    }\n\n    if (object.latestHeight !== undefined && object.latestHeight !== null) {\n      message.latestHeight = client_1.Height.fromPartial(object.latestHeight);\n    } else {\n      message.latestHeight = undefined;\n    }\n\n    message.proofSpecs = [];\n\n    if (object.proofSpecs !== undefined && object.proofSpecs !== null) {\n      var _iterator5 = _createForOfIteratorHelper(object.proofSpecs),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var e = _step5.value;\n          message.proofSpecs.push(proofs_1.ProofSpec.fromPartial(e));\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n\n    message.upgradePath = [];\n\n    if (object.upgradePath !== undefined && object.upgradePath !== null) {\n      var _iterator6 = _createForOfIteratorHelper(object.upgradePath),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var _e2 = _step6.value;\n          message.upgradePath.push(_e2);\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n\n    message.allowUpdateAfterExpiry = (_b = object.allowUpdateAfterExpiry) !== null && _b !== void 0 ? _b : false;\n    message.allowUpdateAfterMisbehaviour = (_c = object.allowUpdateAfterMisbehaviour) !== null && _c !== void 0 ? _c : false;\n    return message;\n  }\n};\nvar baseConsensusState = {};\nexports.ConsensusState = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.timestamp !== undefined) {\n      timestamp_1.Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.root !== undefined) {\n      commitment_1.MerkleRoot.encode(message.root, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.nextValidatorsHash.length !== 0) {\n      writer.uint32(26).bytes(message.nextValidatorsHash);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseConsensusState);\n    message.nextValidatorsHash = new Uint8Array();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.timestamp = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));\n          break;\n\n        case 2:\n          message.root = commitment_1.MerkleRoot.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.nextValidatorsHash = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseConsensusState);\n    message.nextValidatorsHash = new Uint8Array();\n\n    if (object.timestamp !== undefined && object.timestamp !== null) {\n      message.timestamp = fromJsonTimestamp(object.timestamp);\n    } else {\n      message.timestamp = undefined;\n    }\n\n    if (object.root !== undefined && object.root !== null) {\n      message.root = commitment_1.MerkleRoot.fromJSON(object.root);\n    } else {\n      message.root = undefined;\n    }\n\n    if (object.nextValidatorsHash !== undefined && object.nextValidatorsHash !== null) {\n      message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.timestamp !== undefined && (obj.timestamp = message.timestamp.toISOString());\n    message.root !== undefined && (obj.root = message.root ? commitment_1.MerkleRoot.toJSON(message.root) : undefined);\n    message.nextValidatorsHash !== undefined && (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined ? message.nextValidatorsHash : new Uint8Array()));\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n\n    var message = Object.assign({}, baseConsensusState);\n    message.timestamp = (_a = object.timestamp) !== null && _a !== void 0 ? _a : undefined;\n\n    if (object.root !== undefined && object.root !== null) {\n      message.root = commitment_1.MerkleRoot.fromPartial(object.root);\n    } else {\n      message.root = undefined;\n    }\n\n    message.nextValidatorsHash = (_b = object.nextValidatorsHash) !== null && _b !== void 0 ? _b : new Uint8Array();\n    return message;\n  }\n};\nvar baseMisbehaviour = {\n  clientId: \"\"\n};\nexports.Misbehaviour = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n\n    if (message.header1 !== undefined) {\n      exports.Header.encode(message.header1, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.header2 !== undefined) {\n      exports.Header.encode(message.header2, writer.uint32(26).fork()).ldelim();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMisbehaviour);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n\n        case 2:\n          message.header1 = exports.Header.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.header2 = exports.Header.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseMisbehaviour);\n\n    if (object.clientId !== undefined && object.clientId !== null) {\n      message.clientId = String(object.clientId);\n    } else {\n      message.clientId = \"\";\n    }\n\n    if (object.header1 !== undefined && object.header1 !== null) {\n      message.header1 = exports.Header.fromJSON(object.header1);\n    } else {\n      message.header1 = undefined;\n    }\n\n    if (object.header2 !== undefined && object.header2 !== null) {\n      message.header2 = exports.Header.fromJSON(object.header2);\n    } else {\n      message.header2 = undefined;\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    message.header1 !== undefined && (obj.header1 = message.header1 ? exports.Header.toJSON(message.header1) : undefined);\n    message.header2 !== undefined && (obj.header2 = message.header2 ? exports.Header.toJSON(message.header2) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n\n    var message = Object.assign({}, baseMisbehaviour);\n    message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n\n    if (object.header1 !== undefined && object.header1 !== null) {\n      message.header1 = exports.Header.fromPartial(object.header1);\n    } else {\n      message.header1 = undefined;\n    }\n\n    if (object.header2 !== undefined && object.header2 !== null) {\n      message.header2 = exports.Header.fromPartial(object.header2);\n    } else {\n      message.header2 = undefined;\n    }\n\n    return message;\n  }\n};\nvar baseHeader = {};\nexports.Header = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.signedHeader !== undefined) {\n      types_1.SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.validatorSet !== undefined) {\n      validator_1.ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.trustedHeight !== undefined) {\n      client_1.Height.encode(message.trustedHeight, writer.uint32(26).fork()).ldelim();\n    }\n\n    if (message.trustedValidators !== undefined) {\n      validator_1.ValidatorSet.encode(message.trustedValidators, writer.uint32(34).fork()).ldelim();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseHeader);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.signedHeader = types_1.SignedHeader.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.validatorSet = validator_1.ValidatorSet.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.trustedHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n\n        case 4:\n          message.trustedValidators = validator_1.ValidatorSet.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseHeader);\n\n    if (object.signedHeader !== undefined && object.signedHeader !== null) {\n      message.signedHeader = types_1.SignedHeader.fromJSON(object.signedHeader);\n    } else {\n      message.signedHeader = undefined;\n    }\n\n    if (object.validatorSet !== undefined && object.validatorSet !== null) {\n      message.validatorSet = validator_1.ValidatorSet.fromJSON(object.validatorSet);\n    } else {\n      message.validatorSet = undefined;\n    }\n\n    if (object.trustedHeight !== undefined && object.trustedHeight !== null) {\n      message.trustedHeight = client_1.Height.fromJSON(object.trustedHeight);\n    } else {\n      message.trustedHeight = undefined;\n    }\n\n    if (object.trustedValidators !== undefined && object.trustedValidators !== null) {\n      message.trustedValidators = validator_1.ValidatorSet.fromJSON(object.trustedValidators);\n    } else {\n      message.trustedValidators = undefined;\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.signedHeader !== undefined && (obj.signedHeader = message.signedHeader ? types_1.SignedHeader.toJSON(message.signedHeader) : undefined);\n    message.validatorSet !== undefined && (obj.validatorSet = message.validatorSet ? validator_1.ValidatorSet.toJSON(message.validatorSet) : undefined);\n    message.trustedHeight !== undefined && (obj.trustedHeight = message.trustedHeight ? client_1.Height.toJSON(message.trustedHeight) : undefined);\n    message.trustedValidators !== undefined && (obj.trustedValidators = message.trustedValidators ? validator_1.ValidatorSet.toJSON(message.trustedValidators) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseHeader);\n\n    if (object.signedHeader !== undefined && object.signedHeader !== null) {\n      message.signedHeader = types_1.SignedHeader.fromPartial(object.signedHeader);\n    } else {\n      message.signedHeader = undefined;\n    }\n\n    if (object.validatorSet !== undefined && object.validatorSet !== null) {\n      message.validatorSet = validator_1.ValidatorSet.fromPartial(object.validatorSet);\n    } else {\n      message.validatorSet = undefined;\n    }\n\n    if (object.trustedHeight !== undefined && object.trustedHeight !== null) {\n      message.trustedHeight = client_1.Height.fromPartial(object.trustedHeight);\n    } else {\n      message.trustedHeight = undefined;\n    }\n\n    if (object.trustedValidators !== undefined && object.trustedValidators !== null) {\n      message.trustedValidators = validator_1.ValidatorSet.fromPartial(object.trustedValidators);\n    } else {\n      message.trustedValidators = undefined;\n    }\n\n    return message;\n  }\n};\nvar baseFraction = {\n  numerator: long_1.default.UZERO,\n  denominator: long_1.default.UZERO\n};\nexports.Fraction = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (!message.numerator.isZero()) {\n      writer.uint32(8).uint64(message.numerator);\n    }\n\n    if (!message.denominator.isZero()) {\n      writer.uint32(16).uint64(message.denominator);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseFraction);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.numerator = reader.uint64();\n          break;\n\n        case 2:\n          message.denominator = reader.uint64();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseFraction);\n\n    if (object.numerator !== undefined && object.numerator !== null) {\n      message.numerator = long_1.default.fromString(object.numerator);\n    } else {\n      message.numerator = long_1.default.UZERO;\n    }\n\n    if (object.denominator !== undefined && object.denominator !== null) {\n      message.denominator = long_1.default.fromString(object.denominator);\n    } else {\n      message.denominator = long_1.default.UZERO;\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.numerator !== undefined && (obj.numerator = (message.numerator || long_1.default.UZERO).toString());\n    message.denominator !== undefined && (obj.denominator = (message.denominator || long_1.default.UZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseFraction);\n\n    if (object.numerator !== undefined && object.numerator !== null) {\n      message.numerator = object.numerator;\n    } else {\n      message.numerator = long_1.default.UZERO;\n    }\n\n    if (object.denominator !== undefined && object.denominator !== null) {\n      message.denominator = object.denominator;\n    } else {\n      message.denominator = long_1.default.UZERO;\n    }\n\n    return message;\n  }\n};\n\nvar globalThis = function () {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n}();\n\nvar atob = globalThis.atob || function (b64) {\n  return globalThis.Buffer.from(b64, \"base64\").toString(\"binary\");\n};\n\nfunction bytesFromBase64(b64) {\n  var bin = atob(b64);\n  var arr = new Uint8Array(bin.length);\n\n  for (var i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return arr;\n}\n\nvar btoa = globalThis.btoa || function (bin) {\n  return globalThis.Buffer.from(bin, \"binary\").toString(\"base64\");\n};\n\nfunction base64FromBytes(arr) {\n  var bin = [];\n\n  var _iterator7 = _createForOfIteratorHelper(arr),\n      _step7;\n\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var byte = _step7.value;\n      bin.push(String.fromCharCode(byte));\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n\n  return btoa(bin.join(\"\"));\n}\n\nfunction toTimestamp(date) {\n  var seconds = numberToLong(date.getTime() / 1000);\n  var nanos = date.getTime() % 1000 * 1000000;\n  return {\n    seconds: seconds,\n    nanos: nanos\n  };\n}\n\nfunction fromTimestamp(t) {\n  var millis = t.seconds.toNumber() * 1000;\n  millis += t.nanos / 1000000;\n  return new Date(millis);\n}\n\nfunction fromJsonTimestamp(o) {\n  if (o instanceof Date) {\n    return o;\n  } else if (typeof o === \"string\") {\n    return new Date(o);\n  } else {\n    return fromTimestamp(timestamp_1.Timestamp.fromJSON(o));\n  }\n}\n\nfunction numberToLong(number) {\n  return long_1.default.fromNumber(number);\n}\n\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":null,"metadata":{},"sourceType":"script"}