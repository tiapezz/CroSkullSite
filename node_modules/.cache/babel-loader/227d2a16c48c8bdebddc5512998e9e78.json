{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\src\\\\components\\\\CroskullAdventure\\\\CroskullAdventure.jsx\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from 'ethers';\nimport { getSkullsData, sendNotification, getStakingData, toTavern } from \"../../redux/data/dataActions\";\nimport store from \"../../redux/store\";\nimport { useDispatch } from \"react-redux\";\nimport MetricContainer from \"../MetricContainer/MetricContainer\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport Grave from \"../Navbar/grave.png\";\nimport GraveBurn from \"../Navbar/grave-burn.png\";\nimport Skull from \"../Navbar/skull.png\";\nimport GraveMined from \"../Navbar/grave-mined.png\";\nimport GraveAvailable from \"../Navbar/grave-available.png\";\nimport SkullAdventure from '../Navbar/skull-adventure.png';\nimport Soul from \"../Navbar/soul.png\";\nimport { faDungeon, faFireAlt, faRunning } from '@fortawesome/free-solid-svg-icons';\nimport './adventure.css';\nimport season1Banner from './season-1-banner.png';\nvar ipfsUri = \"https://bafybeifax734esbihweq543p5jldhwj4djszkrevo6u7tig4xlorihx53m.ipfs.infura-ipfs.io/\";\nvar ipfsUri480 = \"https://croskull.mypinata.cloud/ipfs/QmWu9bKunKbv8Kkq8wEWGpCaW47oMBbH6ep4ZWBzAxHtgj/\";\nvar ipfsUri128 = \"https://croskull.mypinata.cloud/ipfs/QmZn1HvYE1o1J8LhNpxFTj5k8LQb2bWT49YvbrhB3r19Xx/\";\n\nvar CroskullAdventure = function CroskullAdventure() {\n  var _store$getState = store.getState(),\n      blockchain = _store$getState.blockchain,\n      data = _store$getState.data;\n\n  var _useState = useState({\n    selectedSkulls: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      viewState = _useState2[0],\n      setViewState = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      detailsView = _useState4[0],\n      setDetailsView = _useState4[1];\n\n  var dispatch = useDispatch();\n  var ipfsUri = \"\" || \"https://bafybeifax734esbihweq543p5jldhwj4djszkrevo6u7tig4xlorihx53m.ipfs.infura-ipfs.io/\";\n  useEffect(function () {\n    if (blockchain.contractDetected) return; //dispatch(getSkullsData())\n  }, [blockchain.contractDetected]);\n\n  var selectSkull = function selectSkull(e) {\n    //handle stake selects\n    var selectedSkulls = viewState.selectedSkulls;\n    console.log(selectedSkulls);\n\n    if (selectedSkulls && selectedSkulls.includes(e)) {\n      for (var i = 0; i < selectedSkulls.length; i++) {\n        if (selectedSkulls[i] == e) {\n          selectedSkulls.splice(i, 1);\n        }\n      }\n    } else {\n      selectedSkulls.push(e);\n    }\n\n    setViewState(_objectSpread({}, viewState, {\n      selectedSkulls: selectedSkulls\n    }));\n  }; //to be moved inside reducer \n\n\n  var withdrawRewards = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var croSkullsStaking, withDrawTx;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              croSkullsStaking = blockchain.croSkullsStaking;\n              withDrawTx = croSkullsStaking.withdraw();\n              _context2.next = 4;\n              return withDrawTx.then( /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(tx) {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          dispatch(sendNotification({\n                            title: \"Transaction Sent\",\n                            message: 'Waiting for confirmation...',\n                            tx: tx,\n                            type: \"info\"\n                          }));\n                          _context.next = 3;\n                          return tx.wait(2);\n\n                        case 3:\n                          dispatch(sendNotification({\n                            title: \"Success!\",\n                            message: \"Withdraw succesful\",\n                            tx: tx,\n                            type: \"success\"\n                          }));\n                          dispatch(getSkullsData());\n\n                        case 5:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x) {\n                  return _ref2.apply(this, arguments);\n                };\n              }());\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function withdrawRewards() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var setApprovalforAll = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var croSkullsStaking, croSkullsContract, approvalTx;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              croSkullsStaking = blockchain.croSkullsStaking, croSkullsContract = blockchain.croSkullsContract;\n              approvalTx = croSkullsContract.setApprovalForAll(croSkullsStaking.address, true);\n              _context4.next = 4;\n              return approvalTx.then( /*#__PURE__*/function () {\n                var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(tx) {\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          console.log(tx);\n                          dispatch(sendNotification({\n                            title: \"Transaction Sent\",\n                            message: 'Waiting for confirmation...',\n                            tx: tx,\n                            type: \"default\"\n                          }));\n                          _context3.next = 4;\n                          return tx.wait(2);\n\n                        case 4:\n                          dispatch(sendNotification({\n                            title: \"Approved!\",\n                            message: \"Approved Succesful\",\n                            tx: tx,\n                            type: \"success\"\n                          }));\n                          dispatch(getStakingData());\n\n                        case 6:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function (_x2) {\n                  return _ref4.apply(this, arguments);\n                };\n              }());\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function setApprovalforAll() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var DAY_IN_SEC = 60 * 60 * 24;\n  var HUNDRED_DAYS_IN_SEC = 100 * DAY_IN_SEC; //100 * DAY_IN_SEC;\n\n  var formatDate = function formatDate(timestamp) {\n    var tsHours = timestamp / 60 / 60;\n    var days = parseInt(timestamp / DAY_IN_SEC);\n    var hoursDiff = tsHours - days * 24;\n    var hours = parseInt(hoursDiff);\n    var tsMinutes = hoursDiff * 60;\n    var minutes = parseInt(tsMinutes - hours * 60);\n    return {\n      days: days,\n      hours: hours,\n      minutes: minutes\n    };\n  };\n\n  var approval = data.approval,\n      blockTimestamp = data.blockTimestamp,\n      rewardPlusMalus = data.rewardPlusMalus,\n      malusFee = data.malusFee,\n      startStakeTimestamp = data.startStakeTimestamp,\n      rewards = data.rewards,\n      advancedMetadata = data.advancedMetadata,\n      croSkullsStaked = data.croSkullsStaked,\n      croSkulls = data.croSkulls,\n      cyclesLastWithdraw = data.cyclesLastWithdraw,\n      alreadyClaimed = data.alreadyClaimed,\n      soulsGenerated = data.soulsGenerated,\n      totalSkullsStaked = data.totalSkullsStaked,\n      totalWithdrawedGraves = data.totalWithdrawedGraves,\n      totalWithdrawedSouls = data.totalWithdrawedSouls,\n      daysLastWithdraw = data.daysLastWithdraw,\n      burnedGraves = data.burnedGraves;\n  var totalSkulls = croSkullsStaked.length > 0 ? croSkullsStaked.length + croSkulls.length : 0;\n  var globalStartTimestamp = startStakeTimestamp;\n  var finishStake = parseInt(globalStartTimestamp) + HUNDRED_DAYS_IN_SEC;\n  var diffStake = finishStake - blockTimestamp;\n  var malusPercent = (800 - 25 * daysLastWithdraw) / 10;\n  var userStakeDate = formatDate(cyclesLastWithdraw * 10);\n  var seasonRemainingDate = formatDate(diffStake);\n  var seasonDurationDate = formatDate(blockTimestamp - globalStartTimestamp);\n  var seasonProgress = parseInt(100 / HUNDRED_DAYS_IN_SEC * (blockTimestamp - globalStartTimestamp));\n  burnedGraves = burnedGraves ? burnedGraves : 0;\n  var burnedPercent = burnedGraves ? parseFloat(100 / 45990000 * formatEther(burnedGraves)).toFixed(3) : 0;\n  var malusAmount = rewards > 0 ? parseFloat(formatEther(rewards, true) - formatEther(rewardPlusMalus, true)).toFixed(2) : 0;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-flex sk-row h100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-container wd-66 h100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-head\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, \"Skulls in Adventure \", totalSkulls > 0 ? \"(\".concat(croSkullsStaked.length, \"/\").concat(totalSkulls, \")\") : \"Loading\", \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box-content sk-column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"skulls-list in-adventure h100 active\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-head\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"div-button\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }\n  }, croSkullsStaked.length > 0 ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"skull-button retire-button\",\n    onClick: function onClick() {\n      return dispatch(toTavern(croSkullsStaked));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 23\n    }\n  }, \"Retire All (\", croSkullsStaked.length, \")\") : '', /*#__PURE__*/React.createElement(\"button\", {\n    className: \"skull-button retire-button\",\n    hidden: viewState.selectedSkulls.length > 0 ? false : true,\n    onClick: function onClick() {\n      return dispatch(toTavern(viewState.selectedSkulls));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }, \"Retire Selected \", viewState.selectedSkulls.length))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-row skull-grid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, croSkullsStaked.map(function (cr, index) {\n    var data = advancedMetadata[cr - 1];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: cr,\n      className: \"skull-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: viewState.selectedSkulls.includes(cr) ? 'selected card' : 'card',\n      onClick: function onClick() {\n        return selectSkull(cr);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(LazyLoadImage, {\n      src: \"\".concat(ipfsUri480).concat(cr, \".webp\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"floating-badges-container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge id\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 27\n      }\n    }, cr), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge rank\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 27\n      }\n    }, \"Rank \", data ? data.rank : '')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bottom-actions\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"skull-button retire-button\",\n      onClick: function onClick() {\n        dispatch(toTavern(cr));\n        setViewState(_objectSpread({}, viewState, {\n          selectedSkulls: []\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faRunning,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 29\n      }\n    }), \"Retire\"))));\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-container wd-33 h100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-flex sk-column details \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: season1Banner,\n    className: \"adventure-image\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box sk-flex sk-column h100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-info season-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faDungeon,\n    id: \"dungeon-icon\",\n    size: \"2x\",\n    className: \"icon-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  }, \"Season Progress\", /*#__PURE__*/React.createElement(\"small\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }\n  }, seasonProgress < 50 ? \" \".concat(seasonDurationDate.days, \"d \").concat(seasonDurationDate.hours, \"h \").concat(seasonDurationDate.minutes, \"m\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar bg-success\",\n    role: \"progressbar\",\n    style: {\n      width: seasonProgress + '%'\n    }\n    /*sostituire con timeElapsed in % */\n    ,\n    \"aria-valuenow\": \"10\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 21\n    }\n  }, seasonProgress >= 50 ? \"\".concat(seasonProgress, \"% - \").concat(seasonDurationDate.days, \"d \").concat(seasonDurationDate.hours, \"h \").concat(seasonDurationDate.minutes, \"m\") : \"\".concat(seasonProgress, \"%\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-info malus-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faFireAlt,\n    id: \"burn-icon\",\n    size: \"2x\",\n    className: \"icon-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 17\n    }\n  }, \"Burn Malus\", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar bg-danger\",\n    role: \"progressbar\",\n    style: {\n      width: malusPercent + '%'\n    }\n    /*sostituire con timeElapsed in % */\n    ,\n    \"aria-valuenow\": \"10\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"80\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 21\n    }\n  }, malusPercent, \"%\")))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"switcher-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \" switcher-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"switcher-button view-button \".concat(detailsView ? '' : 'active'),\n    onClick: function onClick() {\n      return setDetailsView(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 21\n    }\n  }, \"Your Stats\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"switcher-button view-button \".concat(!detailsView ? '' : 'active'),\n    onClick: function onClick() {\n      return setDetailsView(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 21\n    }\n  }, \"Global Stats\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box-content sk-column first \".concat(!detailsView ? 'show' : 'hide'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MetricContainer, {\n    label: \"Skulls in Adventure\",\n    value: croSkullsStaked.length,\n    icon: SkullAdventure,\n    tooltip: \"Amount of your CroSkulls currently in Adventure.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(MetricContainer, {\n    label: \"Mined Grave\",\n    value: formatEther(rewards),\n    icon: Grave,\n    tooltip: \"Amount of Grave you've generated since the start. This is used as main metric to calculate the actual rewards minus actual Malus Fee.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(MetricContainer, {\n    label: \"Current Malus\",\n    addClass: \"negative\",\n    value: malusAmount,\n    icon: GraveBurn,\n    tooltip: \"Amount of Grave you'll burn based on Mined Grave and current Malus Burn Fee.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(MetricContainer, {\n    label: \"Available to Withdraw\",\n    addClass: \"positive\",\n    value: formatEther(rewardPlusMalus),\n    icon: GraveAvailable,\n    tooltip: \"Amount of Grave you'll recieve based on Mined Grave and current Malus Burn Fee.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(MetricContainer, {\n    label: \"Claimed Grave\",\n    value: formatEther(alreadyClaimed),\n    icon: Grave,\n    tooltip: \"Amount of Grave you've already harvested from the Adventure.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(MetricContainer, {\n    label: \"Mined Soul\",\n    value: soulsGenerated,\n    icon: Soul,\n    tooltip: \"Total amount of Soul mined since the adventure start. It actually reflect the amount of Soul you'll recieve once claim done.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box-content sk-column \".concat(detailsView ? 'show' : 'hide'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MetricContainer, {\n    label: \"Skulls Staked\",\n    value: totalSkullsStaked,\n    icon: SkullAdventure,\n    tooltip: \"Keep track of all the CroSkulls actually in adventure.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(MetricContainer, {\n    label: \"Mined Grave\",\n    value: formatEther(totalWithdrawedGraves),\n    icon: GraveMined,\n    tooltip: \"Total amount of all the Grave withdrawed since the start. Don't reflect total generated rewards, but just withdrawed.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(MetricContainer, {\n    label: \"Burned Grave\",\n    value: \"\".concat(formatEther(burnedGraves), \" (\").concat(burnedPercent, \"%)\"),\n    icon: GraveBurn,\n    tooltip: \"Total Burned Grave amount base on the total supply, not only Adventure burn. ( total percent of burn ).\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(MetricContainer, {\n    label: \"Mined Soul\",\n    value: totalWithdrawedSouls,\n    icon: Soul,\n    tooltip: \"Total amount of all the Soul withdrawed since the start. Don't reflect total generated Soul, but just withdrawed.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 19\n    }\n  }))), !approval ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"sk-claim-btn \".concat(blockchain.accountAddress ? '' : 'disabled'),\n    disabled: blockchain.accountAddress ? false : true,\n    onClick: function onClick() {\n      setApprovalforAll();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 17\n    }\n  }, \"Approve Adventure\") : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"sk-claim-btn\",\n    onClick: function onClick() {\n      withdrawRewards();\n    },\n    disabled: rewardPlusMalus > 0 ? false : true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 17\n    }\n  }, rewardPlusMalus > 0 ? \"Claim GRAVE\" : 'Generate GRAVE First'))))));\n};\n\nvar formatEther = function formatEther(bn) {\n  return parseFloat(ethers.utils.formatEther(bn)).toFixed(2);\n};\n\nexport default CroskullAdventure;","map":{"version":3,"sources":["F:/Mattia/Visual studio/AppCroskull/croskull-nft-marketplace/src/components/CroskullAdventure/CroskullAdventure.jsx"],"names":["React","useEffect","useState","ethers","getSkullsData","sendNotification","getStakingData","toTavern","store","useDispatch","MetricContainer","FontAwesomeIcon","LazyLoadImage","Grave","GraveBurn","Skull","GraveMined","GraveAvailable","SkullAdventure","Soul","faDungeon","faFireAlt","faRunning","season1Banner","ipfsUri","ipfsUri480","ipfsUri128","CroskullAdventure","getState","blockchain","data","selectedSkulls","viewState","setViewState","detailsView","setDetailsView","dispatch","contractDetected","selectSkull","e","console","log","includes","i","length","splice","push","withdrawRewards","croSkullsStaking","withDrawTx","withdraw","then","tx","title","message","type","wait","setApprovalforAll","croSkullsContract","approvalTx","setApprovalForAll","address","DAY_IN_SEC","HUNDRED_DAYS_IN_SEC","formatDate","timestamp","tsHours","days","parseInt","hoursDiff","hours","tsMinutes","minutes","approval","blockTimestamp","rewardPlusMalus","malusFee","startStakeTimestamp","rewards","advancedMetadata","croSkullsStaked","croSkulls","cyclesLastWithdraw","alreadyClaimed","soulsGenerated","totalSkullsStaked","totalWithdrawedGraves","totalWithdrawedSouls","daysLastWithdraw","burnedGraves","totalSkulls","globalStartTimestamp","finishStake","diffStake","malusPercent","userStakeDate","seasonRemainingDate","seasonDurationDate","seasonProgress","burnedPercent","parseFloat","formatEther","toFixed","malusAmount","map","cr","index","rank","width","accountAddress","bn","utils"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { ethers } from 'ethers';\r\nimport { getSkullsData, sendNotification, getStakingData, toTavern } from \"../../redux/data/dataActions\";\r\nimport store from \"../../redux/store\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport MetricContainer from \"../MetricContainer/MetricContainer\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport Grave from \"../Navbar/grave.png\";\r\nimport GraveBurn from \"../Navbar/grave-burn.png\";\r\nimport Skull from \"../Navbar/skull.png\";\r\nimport GraveMined from \"../Navbar/grave-mined.png\";\r\nimport GraveAvailable from \"../Navbar/grave-available.png\";\r\nimport SkullAdventure from '../Navbar/skull-adventure.png';\r\nimport Soul from \"../Navbar/soul.png\";\r\nimport { faDungeon, faFireAlt, faRunning } from '@fortawesome/free-solid-svg-icons';\r\nimport './adventure.css';\r\nimport season1Banner from './season-1-banner.png';\r\n\r\n\r\nconst ipfsUri =  \"https://bafybeifax734esbihweq543p5jldhwj4djszkrevo6u7tig4xlorihx53m.ipfs.infura-ipfs.io/\"\r\nconst ipfsUri480 = \"https://croskull.mypinata.cloud/ipfs/QmWu9bKunKbv8Kkq8wEWGpCaW47oMBbH6ep4ZWBzAxHtgj/\"\r\nconst ipfsUri128 = \"https://croskull.mypinata.cloud/ipfs/QmZn1HvYE1o1J8LhNpxFTj5k8LQb2bWT49YvbrhB3r19Xx/\"\r\n\r\nconst CroskullAdventure = () => {\r\n  let { blockchain, data } = store.getState()\r\n\r\n  const [viewState, setViewState] = useState( {\r\n    selectedSkulls: []\r\n  })\r\n\r\n  const [detailsView, setDetailsView] = useState(false)\r\n\r\n  let dispatch = useDispatch()\r\n  const ipfsUri =  \"\"  || \"https://bafybeifax734esbihweq543p5jldhwj4djszkrevo6u7tig4xlorihx53m.ipfs.infura-ipfs.io/\"\r\n\r\n  useEffect(() => {\r\n    if( blockchain.contractDetected )\r\n      return //dispatch(getSkullsData())\r\n  }, [blockchain.contractDetected])\r\n  \r\n  const selectSkull = e => { //handle stake selects\r\n    let {selectedSkulls} = viewState;\r\n    console.log(selectedSkulls )\r\n    if ( selectedSkulls && selectedSkulls.includes(e)) {\r\n      for( let i = 0; i < selectedSkulls.length; i++){\r\n        if (selectedSkulls[i] == e) {\r\n          selectedSkulls.splice(i, 1);\r\n        }\r\n      }\r\n    } else {\r\n      selectedSkulls.push(e);\r\n    }\r\n    setViewState({\r\n      ...viewState,\r\n      selectedSkulls: selectedSkulls\r\n    })\r\n  };\r\n\r\n  //to be moved inside reducer \r\n\r\n  const withdrawRewards = async () => {\r\n    let { croSkullsStaking } = blockchain\r\n\r\n    let withDrawTx = croSkullsStaking.withdraw()\r\n    await withDrawTx.then(\r\n      async (tx) => {\r\n        dispatch(sendNotification({\r\n          title: `Transaction Sent`,\r\n          message: 'Waiting for confirmation...',\r\n          tx,\r\n          type: \"info\"\r\n        }))\r\n        await tx.wait(2)\r\n        dispatch(sendNotification({\r\n          title: `Success!`,\r\n          message: `Withdraw succesful`,\r\n          tx,\r\n          type: \"success\"\r\n        }))\r\n        dispatch(getSkullsData())\r\n      }\r\n    )\r\n  }\r\n\r\n  const setApprovalforAll = async () => {\r\n    let { croSkullsStaking, croSkullsContract } = blockchain\r\n    let approvalTx = croSkullsContract.setApprovalForAll(\r\n      croSkullsStaking.address,\r\n      true\r\n    )\r\n    await approvalTx.then( async ( tx ) => {\r\n      console.log( tx )\r\n        dispatch(sendNotification({\r\n          title: `Transaction Sent`,\r\n          message: 'Waiting for confirmation...',\r\n          tx,\r\n          type: \"default\"\r\n        }))\r\n        await tx.wait(2)\r\n        dispatch(sendNotification({\r\n          title: `Approved!`,\r\n          message: `Approved Succesful`,\r\n          tx,\r\n          type: \"success\"\r\n        }))\r\n        dispatch(getStakingData())\r\n    })\r\n  }\r\n\r\n\r\n  const DAY_IN_SEC = 60 * 60 * 24;\r\n  const HUNDRED_DAYS_IN_SEC = 100 * DAY_IN_SEC//100 * DAY_IN_SEC;\r\n\r\n  const formatDate = ( timestamp ) => {\r\n    let tsHours = timestamp / 60 / 60\r\n    let days =  parseInt( timestamp / DAY_IN_SEC )\r\n    let hoursDiff = tsHours - ( days * 24 )\r\n    let hours = parseInt(hoursDiff)\r\n    let tsMinutes = hoursDiff * 60\r\n    let minutes = parseInt( tsMinutes - ( hours * 60 ) )\r\n    return {\r\n      days,\r\n      hours,\r\n      minutes\r\n    }\r\n  }\r\n\r\n  let { \r\n    approval, \r\n    blockTimestamp, \r\n    rewardPlusMalus, \r\n    malusFee, \r\n    startStakeTimestamp, \r\n    rewards, \r\n    advancedMetadata, \r\n    croSkullsStaked, \r\n    croSkulls, \r\n    cyclesLastWithdraw, \r\n    alreadyClaimed, \r\n    soulsGenerated,\r\n    totalSkullsStaked,\r\n    totalWithdrawedGraves,\r\n    totalWithdrawedSouls,\r\n    daysLastWithdraw,\r\n    burnedGraves\r\n  } = data\r\n\r\n  let totalSkulls = croSkullsStaked.length > 0 ? croSkullsStaked.length + croSkulls.length : 0\r\n  let globalStartTimestamp = startStakeTimestamp;\r\n  let finishStake = parseInt(globalStartTimestamp) + HUNDRED_DAYS_IN_SEC;\r\n  let diffStake = finishStake - blockTimestamp;\r\n  let malusPercent = ( 800 - ( 25 * daysLastWithdraw ) ) / 10\r\n  let userStakeDate = formatDate( cyclesLastWithdraw * 10 )\r\n  let seasonRemainingDate = formatDate( diffStake )\r\n  let seasonDurationDate = formatDate( blockTimestamp - globalStartTimestamp )\r\n  let seasonProgress = parseInt( 100 / HUNDRED_DAYS_IN_SEC *  (blockTimestamp - globalStartTimestamp ) )\r\n  burnedGraves = burnedGraves ?  burnedGraves : 0\r\n  let burnedPercent = burnedGraves ? parseFloat(100 / 45990000 * formatEther(burnedGraves)).toFixed(3) : 0\r\n  let malusAmount = rewards > 0 ? parseFloat(formatEther( rewards , true) - formatEther( rewardPlusMalus, true)).toFixed(2) : 0\r\n  return (\r\n    <>\r\n      <div className=\"sk-flex sk-row h100\">\r\n        <div className=\"sk-container wd-66 h100\">\r\n          <div className=\"sk-box\">\r\n            <div className=\"tab-head\">\r\n              <h2>Skulls in Adventure {  totalSkulls > 0 ?  `(${croSkullsStaked.length}/${totalSkulls})` : `Loading` } </h2>\r\n            </div>\r\n            <div className=\"sk-box-content sk-column\">\r\n              <div className={`skulls-list in-adventure h100 active`}>\r\n                <div className=\"list-head\">\r\n                  <div className=\"div-button\">\r\n                    {\r\n                      croSkullsStaked.length > 0 ? \r\n                      (\r\n                      <button className=\"skull-button retire-button\" \r\n                        onClick={() => dispatch(toTavern( croSkullsStaked ))}\r\n                      >\r\n                        Retire All ({ croSkullsStaked.length })\r\n                      </button> \r\n                      ) : ('')\r\n                    }\r\n                    <button \r\n                      className=\"skull-button retire-button\" \r\n                      hidden={(viewState.selectedSkulls.length > 0 ? false : true)} \r\n                      onClick={() => dispatch(toTavern(viewState.selectedSkulls))}\r\n                    >\r\n                      Retire Selected { viewState.selectedSkulls.length }\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"sk-row skull-grid\">\r\n                  {\r\n                  (croSkullsStaked).map((cr, index) => {\r\n                    let data = advancedMetadata[cr-1]\r\n                    return (\r\n                    <div key={cr} className=\"skull-item\" >\r\n                      <div \r\n                        className={viewState.selectedSkulls.includes(cr) ? 'selected card' : 'card'} \r\n                        onClick={() => selectSkull(cr)}\r\n                      >\r\n                        <LazyLoadImage\r\n                          src={`${ipfsUri480}${cr}.webp`}\r\n                        />\r\n                        <div className=\"floating-badges-container\">\r\n                          <span className=\"badge id\">{cr}</span>\r\n                          <span className=\"badge rank\">Rank {data ? data.rank : ''}</span>\r\n                        </div>\r\n                        <div className=\"bottom-actions\">\r\n                          <button \r\n                            className=\"skull-button retire-button\"\r\n                            onClick={ () => {\r\n                              dispatch(toTavern(cr))\r\n                              setViewState({\r\n                                ...viewState,\r\n                                selectedSkulls: []\r\n                              })\r\n                            }}\r\n                          > \r\n                            <FontAwesomeIcon icon={faRunning} /> \r\n                            Retire\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    );\r\n                  })\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"sk-container wd-33 h100\">\r\n          <div className=\"sk-flex sk-column details \">\r\n            <img \r\n              src={season1Banner}  \r\n              className=\"adventure-image\"\r\n            />\r\n            <div className=\"sk-box sk-flex sk-column h100\">\r\n              <div className=\"progress-info season-container\">\r\n                <FontAwesomeIcon \r\n                  icon={faDungeon} \r\n                  id=\"dungeon-icon\" \r\n                  size=\"2x\"\r\n                  className=\"icon-container\"\r\n                />\r\n                <div className=\"progress-container\">\r\n                Season Progress\r\n                <small>{seasonProgress < 50 ? ` ${seasonDurationDate.days}d ${seasonDurationDate.hours}h ${seasonDurationDate.minutes}m` : ``}</small>\r\n                  <div className=\"progress\">\r\n                    <div \r\n                      className=\"progress-bar bg-success\" \r\n                      role=\"progressbar\" \r\n                      style={{ width: seasonProgress + '%' } /*sostituire con timeElapsed in % */} \r\n                      aria-valuenow=\"10\" \r\n                      aria-valuemin=\"0\" \r\n                      aria-valuemax=\"100\"\r\n                    > \r\n                      { seasonProgress >= 50 ? `${seasonProgress}% - ${seasonDurationDate.days}d ${seasonDurationDate.hours}h ${seasonDurationDate.minutes}m` : `${seasonProgress}%` }\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"progress-info malus-container\">\r\n                <FontAwesomeIcon \r\n                  icon={faFireAlt} \r\n                  id=\"burn-icon\" \r\n                  size=\"2x\"\r\n                  className=\"icon-container\"\r\n                />\r\n                <div className=\"progress-container\">\r\n                  Burn Malus\r\n                  <div className=\"progress\">\r\n                    <div \r\n                      className=\"progress-bar bg-danger\" \r\n                      role=\"progressbar\" \r\n                      style={{ width: malusPercent + '%' } /*sostituire con timeElapsed in % */} \r\n                      aria-valuenow=\"10\"\r\n                      aria-valuemin=\"0\"\r\n                      aria-valuemax=\"80\"\r\n                    > \r\n                      { malusPercent }%\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"switcher-container\">\r\n                <div className=\" switcher-wrapper\">\r\n                    <button\r\n                      className={`switcher-button view-button ${ detailsView ? '' : 'active'}`}\r\n                      onClick={\r\n                        () => setDetailsView(false)\r\n                      }\r\n                    >\r\n                      Your Stats\r\n                    </button>\r\n                    <button\r\n                      className={`switcher-button view-button ${ ! detailsView ? '' : 'active'}`}\r\n                      onClick={\r\n                        () => setDetailsView(true)\r\n                      }\r\n                    >\r\n                      Global Stats\r\n                    </button>\r\n                </div>\r\n                <div className={`sk-box-content sk-column first ${ ! detailsView ? 'show' : 'hide'}`}>\r\n                  <MetricContainer \r\n                    label=\"Skulls in Adventure\"\r\n                    value={croSkullsStaked.length}\r\n                    icon={SkullAdventure}\r\n                    tooltip=\"Amount of your CroSkulls currently in Adventure.\"\r\n                  />\r\n                  <MetricContainer \r\n                    label=\"Mined Grave\"\r\n                    value={formatEther(rewards)}\r\n                    icon={Grave}\r\n                    tooltip=\"Amount of Grave you've generated since the start. This is used as main metric to calculate the actual rewards minus actual Malus Fee.\"\r\n                  />\r\n                  <MetricContainer \r\n                    label=\"Current Malus\"\r\n                    addClass=\"negative\"\r\n                    value={malusAmount}\r\n                    icon={GraveBurn}\r\n                    tooltip=\"Amount of Grave you'll burn based on Mined Grave and current Malus Burn Fee.\"\r\n                  />\r\n                  <MetricContainer \r\n                    label=\"Available to Withdraw\"\r\n                    addClass=\"positive\"\r\n                    value={formatEther(rewardPlusMalus)}\r\n                    icon={GraveAvailable}\r\n                    tooltip=\"Amount of Grave you'll recieve based on Mined Grave and current Malus Burn Fee.\"\r\n                  />\r\n                  <MetricContainer \r\n                    label=\"Claimed Grave\"\r\n                    value={formatEther(alreadyClaimed)}\r\n                    icon={Grave}\r\n                    tooltip=\"Amount of Grave you've already harvested from the Adventure.\"\r\n                  />\r\n                  <MetricContainer \r\n                    label=\"Mined Soul\"\r\n                    value={soulsGenerated}\r\n                    icon={Soul}\r\n                    tooltip=\"Total amount of Soul mined since the adventure start. It actually reflect the amount of Soul you'll recieve once claim done.\"\r\n                  />\r\n                </div>\r\n                <div className={`sk-box-content sk-column ${ detailsView ? 'show' : 'hide'}`}>\r\n                  <MetricContainer \r\n                    label=\"Skulls Staked\"\r\n                    value={totalSkullsStaked}\r\n                    icon={SkullAdventure}\r\n                    tooltip=\"Keep track of all the CroSkulls actually in adventure.\"\r\n                  />\r\n                  <MetricContainer \r\n                    label=\"Mined Grave\"\r\n                    value={formatEther(totalWithdrawedGraves)}\r\n                    icon={GraveMined}\r\n                    tooltip=\"Total amount of all the Grave withdrawed since the start. Don't reflect total generated rewards, but just withdrawed.\"\r\n                  />\r\n                  <MetricContainer \r\n                    label=\"Burned Grave\"\r\n                    value={`${formatEther(burnedGraves) } (${burnedPercent}%)`}\r\n                    icon={GraveBurn}\r\n                    tooltip=\"Total Burned Grave amount base on the total supply, not only Adventure burn. ( total percent of burn ).\"\r\n                  />\r\n                  <MetricContainer \r\n                    label=\"Mined Soul\"\r\n                    value={totalWithdrawedSouls}\r\n                    icon={Soul}\r\n                    tooltip=\"Total amount of all the Soul withdrawed since the start. Don't reflect total generated Soul, but just withdrawed.\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              {\r\n                ! approval ?\r\n                (\r\n                <button \r\n                  className={`sk-claim-btn ${ blockchain.accountAddress ? '' : 'disabled'}`}\r\n                  disabled={ blockchain.accountAddress ? false : true}\r\n                  onClick={ () => {\r\n                    setApprovalforAll()\r\n                  }}\r\n                >\r\n                  Approve Adventure\r\n                </button>\r\n                ):(\r\n                <button \r\n                  className=\"sk-claim-btn\"\r\n                  onClick={ () => {\r\n                    withdrawRewards()\r\n                  }}\r\n                  disabled={ rewardPlusMalus > 0 ? false : true }\r\n                >\r\n                  {rewardPlusMalus > 0 ? `Claim GRAVE` : 'Generate GRAVE First'}\r\n                </button>\r\n                )\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst formatEther = bn => parseFloat(ethers.utils.formatEther(bn)).toFixed(2)\r\n\r\nexport default CroskullAdventure;\r\n"]},"metadata":{},"sourceType":"module"}