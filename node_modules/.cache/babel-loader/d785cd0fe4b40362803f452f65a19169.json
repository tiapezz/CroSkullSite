{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\src\\\\components\\\\Analytics\\\\Analytics.jsx\";\n\nimport React, { useEffect, useState } from \"react\";\nimport './analytics.css';\nimport CROIcon from \"../Navbar/crypto-com.svg\";\nimport Skull from '../Navbar/skull.png';\nimport MetricContainer from '../MetricContainer/MetricContainer';\nimport store from \"../../redux/store\";\n\nvar Analytics = function Analytics() {\n  var _store$getState = store.getState(),\n      blockchain = _store$getState.blockchain,\n      data = _store$getState.data;\n\n  var totalSkullsStaked = data.totalSkullsStaked,\n      ebisusData = data.ebisusData;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-flex sk-row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-container wd-66\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-head\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 29\n    }\n  }, \"Analytics\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box-content sk-row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MetricContainer, {\n    label: \"SLiq\",\n    value: \"\".concat(totalSkullsStaked),\n    icon: Skull,\n    vertical: true,\n    tooltip: \"Stake Liquidity: amout of CroSkulls NFT staked in Adventures.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(MetricContainer, {\n    label: \"Stake Percent\",\n    value: \"\".concat(totalSkullsStaked ? parseFloat(100 / 6666 * totalSkullsStaked).toFixed(1) : 0, \"%\"),\n    icon: Skull,\n    vertical: true,\n    tooltip: \"Stake Percent: Percent of Staked skull based on the Total Supply (\".concat(totalSkullsStaked, \"/6666).\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(MetricContainer, {\n    label: \"FDV\",\n    value: totalSkullsStaked && ebisusData ? totalSkullsStaked * ebisusData.floorPrice : 0,\n    vertical: true,\n    icon: CROIcon,\n    tooltip: \"Fully Diluted Value: Total diluted market cap of the Adventure pool equal to ( SLiq * Current Floor Price).\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(MetricContainer, {\n    label: \"ADV\",\n    value: totalSkullsStaked && ebisusData ? parseInt(totalSkullsStaked * ebisusData.averageSalePrice) : 0,\n    vertical: true,\n    icon: CROIcon,\n    tooltip: \"Average Diluted Value: Diluted market cap of the Adventure pool equal to ( SLiq * Current Avg Sale Price).\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box-content sk-row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-container wd-33\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-head\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }, \"CroSkull Stats\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box-content sk-column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MetricContainer, {\n    label: \"Total Volume\",\n    value: ebisusData && ebisusData.totalVolume ? parseInt(ebisusData.totalVolume) : 0,\n    icon: CROIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(MetricContainer, {\n    label: \"Floor Price\",\n    value: ebisusData && ebisusData.floorPrice ? parseInt(ebisusData.floorPrice) : 0,\n    icon: CROIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(MetricContainer, {\n    label: \"Avg. Sale Price\",\n    value: ebisusData && ebisusData.averageSalePrice ? parseFloat(ebisusData.averageSalePrice).toFixed(2) : 0,\n    icon: CROIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(MetricContainer, {\n    label: \"Skull Sales\",\n    value: ebisusData ? ebisusData.numberOfSales : 0,\n    icon: Skull,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(MetricContainer, {\n    label: \"Skull for Sales\",\n    value: ebisusData ? ebisusData.numberActive : 0,\n    icon: Skull,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nexport default Analytics;","map":{"version":3,"sources":["F:/Mattia/Visual studio/AppCroskull/croskull-nft-marketplace/src/components/Analytics/Analytics.jsx"],"names":["React","useEffect","useState","Skull","MetricContainer","store","Analytics","getState","blockchain","data","totalSkullsStaked","ebisusData","parseFloat","toFixed","floorPrice","CROIcon","parseInt","averageSalePrice","totalVolume","numberOfSales","numberActive"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport './analytics.css'\r\nimport CROIcon from '../Navbar/crypto-com.svg';\r\nimport Skull from '../Navbar/skull.png';\r\nimport MetricContainer from '../MetricContainer/MetricContainer';\r\nimport store from \"../../redux/store\";\r\n\r\nconst Analytics = () => {\r\n    let { blockchain, data } = store.getState()\r\n    \r\n    let {\r\n        totalSkullsStaked,\r\n        ebisusData\r\n    } = data\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div className=\"sk-flex sk-row\">\r\n                <div className=\"sk-container wd-66\">\r\n                    <div className=\"sk-box\">\r\n                        <div className=\"tab-head\">\r\n                            <h2>Analytics</h2>\r\n                        </div>\r\n                        <div className=\"sk-box-content sk-row\">\r\n                            <MetricContainer \r\n                                label=\"SLiq\"\r\n                                value={`${ totalSkullsStaked }`}\r\n                                icon={Skull}\r\n                                vertical={true}\r\n                                tooltip=\"Stake Liquidity: amout of CroSkulls NFT staked in Adventures.\"\r\n                            />\r\n                            <MetricContainer \r\n                                label=\"Stake Percent\"\r\n                                value={`${ totalSkullsStaked ? parseFloat(100 / 6666 * totalSkullsStaked).toFixed(1) : 0 }%`}\r\n                                icon={Skull}\r\n                                vertical={true}\r\n                                tooltip={`Stake Percent: Percent of Staked skull based on the Total Supply (${totalSkullsStaked}/6666).`}\r\n                            />\r\n                            <MetricContainer \r\n                                label=\"FDV\"\r\n                                value={totalSkullsStaked && ebisusData ? totalSkullsStaked * ebisusData.floorPrice : 0}\r\n                                vertical={true}\r\n                                icon={CROIcon}\r\n                                tooltip=\"Fully Diluted Value: Total diluted market cap of the Adventure pool equal to ( SLiq * Current Floor Price).\"\r\n                            />\r\n                            <MetricContainer \r\n                                label=\"ADV\"\r\n                                value={totalSkullsStaked && ebisusData ? parseInt(totalSkullsStaked * ebisusData.averageSalePrice) : 0}\r\n                                vertical={true}\r\n                                icon={CROIcon}\r\n                                tooltip=\"Average Diluted Value: Diluted market cap of the Adventure pool equal to ( SLiq * Current Avg Sale Price).\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"sk-box-content sk-row\">\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"sk-container wd-33\">\r\n                    <div className=\"sk-box\">\r\n                        <div className=\"tab-head\">\r\n                            <h2>CroSkull Stats</h2>\r\n                        </div>\r\n                        <div className=\"sk-box-content sk-column\">\r\n                            <MetricContainer \r\n                                label=\"Total Volume\"\r\n                                value={ebisusData && ebisusData.totalVolume ? parseInt(ebisusData.totalVolume) : 0}\r\n                                icon={CROIcon}\r\n                            />\r\n                            <MetricContainer \r\n                                label=\"Floor Price\"\r\n                                value={ebisusData && ebisusData.floorPrice ? parseInt(ebisusData.floorPrice) : 0}\r\n                                icon={CROIcon}\r\n                            />\r\n                            <MetricContainer \r\n                                label=\"Avg. Sale Price\"\r\n                                value={ebisusData && ebisusData.averageSalePrice ? parseFloat(ebisusData.averageSalePrice).toFixed(2) : 0 }\r\n                                icon={CROIcon}\r\n                            />\r\n                            <MetricContainer \r\n                                label=\"Skull Sales\"\r\n                                value={ebisusData ? ebisusData.numberOfSales : 0 }\r\n                                icon={Skull}\r\n                            />\r\n                            <MetricContainer \r\n                                label=\"Skull for Sales\"\r\n                                value={ebisusData ? ebisusData.numberActive : 0}\r\n                                icon={Skull}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Analytics;"]},"metadata":{},"sourceType":"module"}