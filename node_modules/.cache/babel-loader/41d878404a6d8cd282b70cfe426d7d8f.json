{"ast":null,"code":"\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Pool = exports.RedelegationResponse = exports.RedelegationEntryResponse = exports.DelegationResponse = exports.Params = exports.Redelegation = exports.RedelegationEntry = exports.UnbondingDelegationEntry = exports.UnbondingDelegation = exports.Delegation = exports.DVVTriplets = exports.DVVTriplet = exports.DVPairs = exports.DVPair = exports.ValAddresses = exports.Validator = exports.Description = exports.Commission = exports.CommissionRates = exports.HistoricalInfo = exports.bondStatusToJSON = exports.bondStatusFromJSON = exports.BondStatus = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nvar long_1 = __importDefault(require(\"long\"));\n\nvar minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nvar types_1 = require(\"../../../tendermint/types/types\");\n\nvar any_1 = require(\"../../../google/protobuf/any\");\n\nvar duration_1 = require(\"../../../google/protobuf/duration\");\n\nvar coin_1 = require(\"../../../cosmos/base/v1beta1/coin\");\n\nvar timestamp_1 = require(\"../../../google/protobuf/timestamp\");\n\nexports.protobufPackage = \"cosmos.staking.v1beta1\";\n/** BondStatus is the status of a validator. */\n\nvar BondStatus;\n\n(function (BondStatus) {\n  /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n  BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n  /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n\n  BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n  /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n\n  BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n  /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n\n  BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n  BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus = exports.BondStatus || (exports.BondStatus = {}));\n\nfunction bondStatusFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"BOND_STATUS_UNSPECIFIED\":\n      return BondStatus.BOND_STATUS_UNSPECIFIED;\n\n    case 1:\n    case \"BOND_STATUS_UNBONDED\":\n      return BondStatus.BOND_STATUS_UNBONDED;\n\n    case 2:\n    case \"BOND_STATUS_UNBONDING\":\n      return BondStatus.BOND_STATUS_UNBONDING;\n\n    case 3:\n    case \"BOND_STATUS_BONDED\":\n      return BondStatus.BOND_STATUS_BONDED;\n\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return BondStatus.UNRECOGNIZED;\n  }\n}\n\nexports.bondStatusFromJSON = bondStatusFromJSON;\n\nfunction bondStatusToJSON(object) {\n  switch (object) {\n    case BondStatus.BOND_STATUS_UNSPECIFIED:\n      return \"BOND_STATUS_UNSPECIFIED\";\n\n    case BondStatus.BOND_STATUS_UNBONDED:\n      return \"BOND_STATUS_UNBONDED\";\n\n    case BondStatus.BOND_STATUS_UNBONDING:\n      return \"BOND_STATUS_UNBONDING\";\n\n    case BondStatus.BOND_STATUS_BONDED:\n      return \"BOND_STATUS_BONDED\";\n\n    default:\n      return \"UNKNOWN\";\n  }\n}\n\nexports.bondStatusToJSON = bondStatusToJSON;\nvar baseHistoricalInfo = {};\nexports.HistoricalInfo = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.header !== undefined) {\n      types_1.Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n    }\n\n    var _iterator = _createForOfIteratorHelper(message.valset),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        exports.Validator.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseHistoricalInfo);\n    message.valset = [];\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.header = types_1.Header.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.valset.push(exports.Validator.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseHistoricalInfo);\n    message.valset = [];\n\n    if (object.header !== undefined && object.header !== null) {\n      message.header = types_1.Header.fromJSON(object.header);\n    } else {\n      message.header = undefined;\n    }\n\n    if (object.valset !== undefined && object.valset !== null) {\n      var _iterator2 = _createForOfIteratorHelper(object.valset),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var e = _step2.value;\n          message.valset.push(exports.Validator.fromJSON(e));\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.header !== undefined && (obj.header = message.header ? types_1.Header.toJSON(message.header) : undefined);\n\n    if (message.valset) {\n      obj.valset = message.valset.map(function (e) {\n        return e ? exports.Validator.toJSON(e) : undefined;\n      });\n    } else {\n      obj.valset = [];\n    }\n\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseHistoricalInfo);\n\n    if (object.header !== undefined && object.header !== null) {\n      message.header = types_1.Header.fromPartial(object.header);\n    } else {\n      message.header = undefined;\n    }\n\n    message.valset = [];\n\n    if (object.valset !== undefined && object.valset !== null) {\n      var _iterator3 = _createForOfIteratorHelper(object.valset),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var e = _step3.value;\n          message.valset.push(exports.Validator.fromPartial(e));\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n\n    return message;\n  }\n};\nvar baseCommissionRates = {\n  rate: \"\",\n  maxRate: \"\",\n  maxChangeRate: \"\"\n};\nexports.CommissionRates = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.rate !== \"\") {\n      writer.uint32(10).string(message.rate);\n    }\n\n    if (message.maxRate !== \"\") {\n      writer.uint32(18).string(message.maxRate);\n    }\n\n    if (message.maxChangeRate !== \"\") {\n      writer.uint32(26).string(message.maxChangeRate);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseCommissionRates);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.rate = reader.string();\n          break;\n\n        case 2:\n          message.maxRate = reader.string();\n          break;\n\n        case 3:\n          message.maxChangeRate = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseCommissionRates);\n\n    if (object.rate !== undefined && object.rate !== null) {\n      message.rate = String(object.rate);\n    } else {\n      message.rate = \"\";\n    }\n\n    if (object.maxRate !== undefined && object.maxRate !== null) {\n      message.maxRate = String(object.maxRate);\n    } else {\n      message.maxRate = \"\";\n    }\n\n    if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n      message.maxChangeRate = String(object.maxChangeRate);\n    } else {\n      message.maxChangeRate = \"\";\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.rate !== undefined && (obj.rate = message.rate);\n    message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n    message.maxChangeRate !== undefined && (obj.maxChangeRate = message.maxChangeRate);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c;\n\n    var message = Object.assign({}, baseCommissionRates);\n    message.rate = (_a = object.rate) !== null && _a !== void 0 ? _a : \"\";\n    message.maxRate = (_b = object.maxRate) !== null && _b !== void 0 ? _b : \"\";\n    message.maxChangeRate = (_c = object.maxChangeRate) !== null && _c !== void 0 ? _c : \"\";\n    return message;\n  }\n};\nvar baseCommission = {};\nexports.Commission = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.commissionRates !== undefined) {\n      exports.CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.updateTime !== undefined) {\n      timestamp_1.Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseCommission);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.commissionRates = exports.CommissionRates.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.updateTime = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseCommission);\n\n    if (object.commissionRates !== undefined && object.commissionRates !== null) {\n      message.commissionRates = exports.CommissionRates.fromJSON(object.commissionRates);\n    } else {\n      message.commissionRates = undefined;\n    }\n\n    if (object.updateTime !== undefined && object.updateTime !== null) {\n      message.updateTime = fromJsonTimestamp(object.updateTime);\n    } else {\n      message.updateTime = undefined;\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.commissionRates !== undefined && (obj.commissionRates = message.commissionRates ? exports.CommissionRates.toJSON(message.commissionRates) : undefined);\n    message.updateTime !== undefined && (obj.updateTime = message.updateTime.toISOString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n\n    var message = Object.assign({}, baseCommission);\n\n    if (object.commissionRates !== undefined && object.commissionRates !== null) {\n      message.commissionRates = exports.CommissionRates.fromPartial(object.commissionRates);\n    } else {\n      message.commissionRates = undefined;\n    }\n\n    message.updateTime = (_a = object.updateTime) !== null && _a !== void 0 ? _a : undefined;\n    return message;\n  }\n};\nvar baseDescription = {\n  moniker: \"\",\n  identity: \"\",\n  website: \"\",\n  securityContact: \"\",\n  details: \"\"\n};\nexports.Description = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.moniker !== \"\") {\n      writer.uint32(10).string(message.moniker);\n    }\n\n    if (message.identity !== \"\") {\n      writer.uint32(18).string(message.identity);\n    }\n\n    if (message.website !== \"\") {\n      writer.uint32(26).string(message.website);\n    }\n\n    if (message.securityContact !== \"\") {\n      writer.uint32(34).string(message.securityContact);\n    }\n\n    if (message.details !== \"\") {\n      writer.uint32(42).string(message.details);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseDescription);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.moniker = reader.string();\n          break;\n\n        case 2:\n          message.identity = reader.string();\n          break;\n\n        case 3:\n          message.website = reader.string();\n          break;\n\n        case 4:\n          message.securityContact = reader.string();\n          break;\n\n        case 5:\n          message.details = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseDescription);\n\n    if (object.moniker !== undefined && object.moniker !== null) {\n      message.moniker = String(object.moniker);\n    } else {\n      message.moniker = \"\";\n    }\n\n    if (object.identity !== undefined && object.identity !== null) {\n      message.identity = String(object.identity);\n    } else {\n      message.identity = \"\";\n    }\n\n    if (object.website !== undefined && object.website !== null) {\n      message.website = String(object.website);\n    } else {\n      message.website = \"\";\n    }\n\n    if (object.securityContact !== undefined && object.securityContact !== null) {\n      message.securityContact = String(object.securityContact);\n    } else {\n      message.securityContact = \"\";\n    }\n\n    if (object.details !== undefined && object.details !== null) {\n      message.details = String(object.details);\n    } else {\n      message.details = \"\";\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.moniker !== undefined && (obj.moniker = message.moniker);\n    message.identity !== undefined && (obj.identity = message.identity);\n    message.website !== undefined && (obj.website = message.website);\n    message.securityContact !== undefined && (obj.securityContact = message.securityContact);\n    message.details !== undefined && (obj.details = message.details);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c, _d, _e;\n\n    var message = Object.assign({}, baseDescription);\n    message.moniker = (_a = object.moniker) !== null && _a !== void 0 ? _a : \"\";\n    message.identity = (_b = object.identity) !== null && _b !== void 0 ? _b : \"\";\n    message.website = (_c = object.website) !== null && _c !== void 0 ? _c : \"\";\n    message.securityContact = (_d = object.securityContact) !== null && _d !== void 0 ? _d : \"\";\n    message.details = (_e = object.details) !== null && _e !== void 0 ? _e : \"\";\n    return message;\n  }\n};\nvar baseValidator = {\n  operatorAddress: \"\",\n  jailed: false,\n  status: 0,\n  tokens: \"\",\n  delegatorShares: \"\",\n  unbondingHeight: long_1.default.ZERO,\n  minSelfDelegation: \"\"\n};\nexports.Validator = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.operatorAddress !== \"\") {\n      writer.uint32(10).string(message.operatorAddress);\n    }\n\n    if (message.consensusPubkey !== undefined) {\n      any_1.Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.jailed === true) {\n      writer.uint32(24).bool(message.jailed);\n    }\n\n    if (message.status !== 0) {\n      writer.uint32(32).int32(message.status);\n    }\n\n    if (message.tokens !== \"\") {\n      writer.uint32(42).string(message.tokens);\n    }\n\n    if (message.delegatorShares !== \"\") {\n      writer.uint32(50).string(message.delegatorShares);\n    }\n\n    if (message.description !== undefined) {\n      exports.Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n    }\n\n    if (!message.unbondingHeight.isZero()) {\n      writer.uint32(64).int64(message.unbondingHeight);\n    }\n\n    if (message.unbondingTime !== undefined) {\n      timestamp_1.Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n    }\n\n    if (message.commission !== undefined) {\n      exports.Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n    }\n\n    if (message.minSelfDelegation !== \"\") {\n      writer.uint32(90).string(message.minSelfDelegation);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseValidator);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.operatorAddress = reader.string();\n          break;\n\n        case 2:\n          message.consensusPubkey = any_1.Any.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.jailed = reader.bool();\n          break;\n\n        case 4:\n          message.status = reader.int32();\n          break;\n\n        case 5:\n          message.tokens = reader.string();\n          break;\n\n        case 6:\n          message.delegatorShares = reader.string();\n          break;\n\n        case 7:\n          message.description = exports.Description.decode(reader, reader.uint32());\n          break;\n\n        case 8:\n          message.unbondingHeight = reader.int64();\n          break;\n\n        case 9:\n          message.unbondingTime = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));\n          break;\n\n        case 10:\n          message.commission = exports.Commission.decode(reader, reader.uint32());\n          break;\n\n        case 11:\n          message.minSelfDelegation = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseValidator);\n\n    if (object.operatorAddress !== undefined && object.operatorAddress !== null) {\n      message.operatorAddress = String(object.operatorAddress);\n    } else {\n      message.operatorAddress = \"\";\n    }\n\n    if (object.consensusPubkey !== undefined && object.consensusPubkey !== null) {\n      message.consensusPubkey = any_1.Any.fromJSON(object.consensusPubkey);\n    } else {\n      message.consensusPubkey = undefined;\n    }\n\n    if (object.jailed !== undefined && object.jailed !== null) {\n      message.jailed = Boolean(object.jailed);\n    } else {\n      message.jailed = false;\n    }\n\n    if (object.status !== undefined && object.status !== null) {\n      message.status = bondStatusFromJSON(object.status);\n    } else {\n      message.status = 0;\n    }\n\n    if (object.tokens !== undefined && object.tokens !== null) {\n      message.tokens = String(object.tokens);\n    } else {\n      message.tokens = \"\";\n    }\n\n    if (object.delegatorShares !== undefined && object.delegatorShares !== null) {\n      message.delegatorShares = String(object.delegatorShares);\n    } else {\n      message.delegatorShares = \"\";\n    }\n\n    if (object.description !== undefined && object.description !== null) {\n      message.description = exports.Description.fromJSON(object.description);\n    } else {\n      message.description = undefined;\n    }\n\n    if (object.unbondingHeight !== undefined && object.unbondingHeight !== null) {\n      message.unbondingHeight = long_1.default.fromString(object.unbondingHeight);\n    } else {\n      message.unbondingHeight = long_1.default.ZERO;\n    }\n\n    if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n      message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n    } else {\n      message.unbondingTime = undefined;\n    }\n\n    if (object.commission !== undefined && object.commission !== null) {\n      message.commission = exports.Commission.fromJSON(object.commission);\n    } else {\n      message.commission = undefined;\n    }\n\n    if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n      message.minSelfDelegation = String(object.minSelfDelegation);\n    } else {\n      message.minSelfDelegation = \"\";\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.operatorAddress !== undefined && (obj.operatorAddress = message.operatorAddress);\n    message.consensusPubkey !== undefined && (obj.consensusPubkey = message.consensusPubkey ? any_1.Any.toJSON(message.consensusPubkey) : undefined);\n    message.jailed !== undefined && (obj.jailed = message.jailed);\n    message.status !== undefined && (obj.status = bondStatusToJSON(message.status));\n    message.tokens !== undefined && (obj.tokens = message.tokens);\n    message.delegatorShares !== undefined && (obj.delegatorShares = message.delegatorShares);\n    message.description !== undefined && (obj.description = message.description ? exports.Description.toJSON(message.description) : undefined);\n    message.unbondingHeight !== undefined && (obj.unbondingHeight = (message.unbondingHeight || long_1.default.ZERO).toString());\n    message.unbondingTime !== undefined && (obj.unbondingTime = message.unbondingTime.toISOString());\n    message.commission !== undefined && (obj.commission = message.commission ? exports.Commission.toJSON(message.commission) : undefined);\n    message.minSelfDelegation !== undefined && (obj.minSelfDelegation = message.minSelfDelegation);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c, _d, _e, _f, _g;\n\n    var message = Object.assign({}, baseValidator);\n    message.operatorAddress = (_a = object.operatorAddress) !== null && _a !== void 0 ? _a : \"\";\n\n    if (object.consensusPubkey !== undefined && object.consensusPubkey !== null) {\n      message.consensusPubkey = any_1.Any.fromPartial(object.consensusPubkey);\n    } else {\n      message.consensusPubkey = undefined;\n    }\n\n    message.jailed = (_b = object.jailed) !== null && _b !== void 0 ? _b : false;\n    message.status = (_c = object.status) !== null && _c !== void 0 ? _c : 0;\n    message.tokens = (_d = object.tokens) !== null && _d !== void 0 ? _d : \"\";\n    message.delegatorShares = (_e = object.delegatorShares) !== null && _e !== void 0 ? _e : \"\";\n\n    if (object.description !== undefined && object.description !== null) {\n      message.description = exports.Description.fromPartial(object.description);\n    } else {\n      message.description = undefined;\n    }\n\n    if (object.unbondingHeight !== undefined && object.unbondingHeight !== null) {\n      message.unbondingHeight = object.unbondingHeight;\n    } else {\n      message.unbondingHeight = long_1.default.ZERO;\n    }\n\n    message.unbondingTime = (_f = object.unbondingTime) !== null && _f !== void 0 ? _f : undefined;\n\n    if (object.commission !== undefined && object.commission !== null) {\n      message.commission = exports.Commission.fromPartial(object.commission);\n    } else {\n      message.commission = undefined;\n    }\n\n    message.minSelfDelegation = (_g = object.minSelfDelegation) !== null && _g !== void 0 ? _g : \"\";\n    return message;\n  }\n};\nvar baseValAddresses = {\n  addresses: \"\"\n};\nexports.ValAddresses = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    var _iterator4 = _createForOfIteratorHelper(message.addresses),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var v = _step4.value;\n        writer.uint32(10).string(v);\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseValAddresses);\n    message.addresses = [];\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.addresses.push(reader.string());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseValAddresses);\n    message.addresses = [];\n\n    if (object.addresses !== undefined && object.addresses !== null) {\n      var _iterator5 = _createForOfIteratorHelper(object.addresses),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var e = _step5.value;\n          message.addresses.push(String(e));\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n\n    if (message.addresses) {\n      obj.addresses = message.addresses.map(function (e) {\n        return e;\n      });\n    } else {\n      obj.addresses = [];\n    }\n\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseValAddresses);\n    message.addresses = [];\n\n    if (object.addresses !== undefined && object.addresses !== null) {\n      var _iterator6 = _createForOfIteratorHelper(object.addresses),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var e = _step6.value;\n          message.addresses.push(e);\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n\n    return message;\n  }\n};\nvar baseDVPair = {\n  delegatorAddress: \"\",\n  validatorAddress: \"\"\n};\nexports.DVPair = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.delegatorAddress !== \"\") {\n      writer.uint32(10).string(message.delegatorAddress);\n    }\n\n    if (message.validatorAddress !== \"\") {\n      writer.uint32(18).string(message.validatorAddress);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseDVPair);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.delegatorAddress = reader.string();\n          break;\n\n        case 2:\n          message.validatorAddress = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseDVPair);\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = String(object.delegatorAddress);\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = String(object.validatorAddress);\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n    message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n\n    var message = Object.assign({}, baseDVPair);\n    message.delegatorAddress = (_a = object.delegatorAddress) !== null && _a !== void 0 ? _a : \"\";\n    message.validatorAddress = (_b = object.validatorAddress) !== null && _b !== void 0 ? _b : \"\";\n    return message;\n  }\n};\nvar baseDVPairs = {};\nexports.DVPairs = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    var _iterator7 = _createForOfIteratorHelper(message.pairs),\n        _step7;\n\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var v = _step7.value;\n        exports.DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseDVPairs);\n    message.pairs = [];\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.pairs.push(exports.DVPair.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseDVPairs);\n    message.pairs = [];\n\n    if (object.pairs !== undefined && object.pairs !== null) {\n      var _iterator8 = _createForOfIteratorHelper(object.pairs),\n          _step8;\n\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var e = _step8.value;\n          message.pairs.push(exports.DVPair.fromJSON(e));\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n\n    if (message.pairs) {\n      obj.pairs = message.pairs.map(function (e) {\n        return e ? exports.DVPair.toJSON(e) : undefined;\n      });\n    } else {\n      obj.pairs = [];\n    }\n\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseDVPairs);\n    message.pairs = [];\n\n    if (object.pairs !== undefined && object.pairs !== null) {\n      var _iterator9 = _createForOfIteratorHelper(object.pairs),\n          _step9;\n\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var e = _step9.value;\n          message.pairs.push(exports.DVPair.fromPartial(e));\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n    }\n\n    return message;\n  }\n};\nvar baseDVVTriplet = {\n  delegatorAddress: \"\",\n  validatorSrcAddress: \"\",\n  validatorDstAddress: \"\"\n};\nexports.DVVTriplet = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.delegatorAddress !== \"\") {\n      writer.uint32(10).string(message.delegatorAddress);\n    }\n\n    if (message.validatorSrcAddress !== \"\") {\n      writer.uint32(18).string(message.validatorSrcAddress);\n    }\n\n    if (message.validatorDstAddress !== \"\") {\n      writer.uint32(26).string(message.validatorDstAddress);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseDVVTriplet);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.delegatorAddress = reader.string();\n          break;\n\n        case 2:\n          message.validatorSrcAddress = reader.string();\n          break;\n\n        case 3:\n          message.validatorDstAddress = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseDVVTriplet);\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = String(object.delegatorAddress);\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n      message.validatorSrcAddress = String(object.validatorSrcAddress);\n    } else {\n      message.validatorSrcAddress = \"\";\n    }\n\n    if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n      message.validatorDstAddress = String(object.validatorDstAddress);\n    } else {\n      message.validatorDstAddress = \"\";\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n    message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n    message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c;\n\n    var message = Object.assign({}, baseDVVTriplet);\n    message.delegatorAddress = (_a = object.delegatorAddress) !== null && _a !== void 0 ? _a : \"\";\n    message.validatorSrcAddress = (_b = object.validatorSrcAddress) !== null && _b !== void 0 ? _b : \"\";\n    message.validatorDstAddress = (_c = object.validatorDstAddress) !== null && _c !== void 0 ? _c : \"\";\n    return message;\n  }\n};\nvar baseDVVTriplets = {};\nexports.DVVTriplets = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    var _iterator10 = _createForOfIteratorHelper(message.triplets),\n        _step10;\n\n    try {\n      for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n        var v = _step10.value;\n        exports.DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator10.e(err);\n    } finally {\n      _iterator10.f();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseDVVTriplets);\n    message.triplets = [];\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.triplets.push(exports.DVVTriplet.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseDVVTriplets);\n    message.triplets = [];\n\n    if (object.triplets !== undefined && object.triplets !== null) {\n      var _iterator11 = _createForOfIteratorHelper(object.triplets),\n          _step11;\n\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var e = _step11.value;\n          message.triplets.push(exports.DVVTriplet.fromJSON(e));\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n\n    if (message.triplets) {\n      obj.triplets = message.triplets.map(function (e) {\n        return e ? exports.DVVTriplet.toJSON(e) : undefined;\n      });\n    } else {\n      obj.triplets = [];\n    }\n\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseDVVTriplets);\n    message.triplets = [];\n\n    if (object.triplets !== undefined && object.triplets !== null) {\n      var _iterator12 = _createForOfIteratorHelper(object.triplets),\n          _step12;\n\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var e = _step12.value;\n          message.triplets.push(exports.DVVTriplet.fromPartial(e));\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n    }\n\n    return message;\n  }\n};\nvar baseDelegation = {\n  delegatorAddress: \"\",\n  validatorAddress: \"\",\n  shares: \"\"\n};\nexports.Delegation = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.delegatorAddress !== \"\") {\n      writer.uint32(10).string(message.delegatorAddress);\n    }\n\n    if (message.validatorAddress !== \"\") {\n      writer.uint32(18).string(message.validatorAddress);\n    }\n\n    if (message.shares !== \"\") {\n      writer.uint32(26).string(message.shares);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseDelegation);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.delegatorAddress = reader.string();\n          break;\n\n        case 2:\n          message.validatorAddress = reader.string();\n          break;\n\n        case 3:\n          message.shares = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseDelegation);\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = String(object.delegatorAddress);\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = String(object.validatorAddress);\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    if (object.shares !== undefined && object.shares !== null) {\n      message.shares = String(object.shares);\n    } else {\n      message.shares = \"\";\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n    message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n    message.shares !== undefined && (obj.shares = message.shares);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c;\n\n    var message = Object.assign({}, baseDelegation);\n    message.delegatorAddress = (_a = object.delegatorAddress) !== null && _a !== void 0 ? _a : \"\";\n    message.validatorAddress = (_b = object.validatorAddress) !== null && _b !== void 0 ? _b : \"\";\n    message.shares = (_c = object.shares) !== null && _c !== void 0 ? _c : \"\";\n    return message;\n  }\n};\nvar baseUnbondingDelegation = {\n  delegatorAddress: \"\",\n  validatorAddress: \"\"\n};\nexports.UnbondingDelegation = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.delegatorAddress !== \"\") {\n      writer.uint32(10).string(message.delegatorAddress);\n    }\n\n    if (message.validatorAddress !== \"\") {\n      writer.uint32(18).string(message.validatorAddress);\n    }\n\n    var _iterator13 = _createForOfIteratorHelper(message.entries),\n        _step13;\n\n    try {\n      for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n        var v = _step13.value;\n        exports.UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator13.e(err);\n    } finally {\n      _iterator13.f();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseUnbondingDelegation);\n    message.entries = [];\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.delegatorAddress = reader.string();\n          break;\n\n        case 2:\n          message.validatorAddress = reader.string();\n          break;\n\n        case 3:\n          message.entries.push(exports.UnbondingDelegationEntry.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseUnbondingDelegation);\n    message.entries = [];\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = String(object.delegatorAddress);\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = String(object.validatorAddress);\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    if (object.entries !== undefined && object.entries !== null) {\n      var _iterator14 = _createForOfIteratorHelper(object.entries),\n          _step14;\n\n      try {\n        for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n          var e = _step14.value;\n          message.entries.push(exports.UnbondingDelegationEntry.fromJSON(e));\n        }\n      } catch (err) {\n        _iterator14.e(err);\n      } finally {\n        _iterator14.f();\n      }\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n    message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n\n    if (message.entries) {\n      obj.entries = message.entries.map(function (e) {\n        return e ? exports.UnbondingDelegationEntry.toJSON(e) : undefined;\n      });\n    } else {\n      obj.entries = [];\n    }\n\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n\n    var message = Object.assign({}, baseUnbondingDelegation);\n    message.delegatorAddress = (_a = object.delegatorAddress) !== null && _a !== void 0 ? _a : \"\";\n    message.validatorAddress = (_b = object.validatorAddress) !== null && _b !== void 0 ? _b : \"\";\n    message.entries = [];\n\n    if (object.entries !== undefined && object.entries !== null) {\n      var _iterator15 = _createForOfIteratorHelper(object.entries),\n          _step15;\n\n      try {\n        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n          var e = _step15.value;\n          message.entries.push(exports.UnbondingDelegationEntry.fromPartial(e));\n        }\n      } catch (err) {\n        _iterator15.e(err);\n      } finally {\n        _iterator15.f();\n      }\n    }\n\n    return message;\n  }\n};\nvar baseUnbondingDelegationEntry = {\n  creationHeight: long_1.default.ZERO,\n  initialBalance: \"\",\n  balance: \"\"\n};\nexports.UnbondingDelegationEntry = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (!message.creationHeight.isZero()) {\n      writer.uint32(8).int64(message.creationHeight);\n    }\n\n    if (message.completionTime !== undefined) {\n      timestamp_1.Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.initialBalance !== \"\") {\n      writer.uint32(26).string(message.initialBalance);\n    }\n\n    if (message.balance !== \"\") {\n      writer.uint32(34).string(message.balance);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseUnbondingDelegationEntry);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.creationHeight = reader.int64();\n          break;\n\n        case 2:\n          message.completionTime = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));\n          break;\n\n        case 3:\n          message.initialBalance = reader.string();\n          break;\n\n        case 4:\n          message.balance = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseUnbondingDelegationEntry);\n\n    if (object.creationHeight !== undefined && object.creationHeight !== null) {\n      message.creationHeight = long_1.default.fromString(object.creationHeight);\n    } else {\n      message.creationHeight = long_1.default.ZERO;\n    }\n\n    if (object.completionTime !== undefined && object.completionTime !== null) {\n      message.completionTime = fromJsonTimestamp(object.completionTime);\n    } else {\n      message.completionTime = undefined;\n    }\n\n    if (object.initialBalance !== undefined && object.initialBalance !== null) {\n      message.initialBalance = String(object.initialBalance);\n    } else {\n      message.initialBalance = \"\";\n    }\n\n    if (object.balance !== undefined && object.balance !== null) {\n      message.balance = String(object.balance);\n    } else {\n      message.balance = \"\";\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.creationHeight !== undefined && (obj.creationHeight = (message.creationHeight || long_1.default.ZERO).toString());\n    message.completionTime !== undefined && (obj.completionTime = message.completionTime.toISOString());\n    message.initialBalance !== undefined && (obj.initialBalance = message.initialBalance);\n    message.balance !== undefined && (obj.balance = message.balance);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c;\n\n    var message = Object.assign({}, baseUnbondingDelegationEntry);\n\n    if (object.creationHeight !== undefined && object.creationHeight !== null) {\n      message.creationHeight = object.creationHeight;\n    } else {\n      message.creationHeight = long_1.default.ZERO;\n    }\n\n    message.completionTime = (_a = object.completionTime) !== null && _a !== void 0 ? _a : undefined;\n    message.initialBalance = (_b = object.initialBalance) !== null && _b !== void 0 ? _b : \"\";\n    message.balance = (_c = object.balance) !== null && _c !== void 0 ? _c : \"\";\n    return message;\n  }\n};\nvar baseRedelegationEntry = {\n  creationHeight: long_1.default.ZERO,\n  initialBalance: \"\",\n  sharesDst: \"\"\n};\nexports.RedelegationEntry = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (!message.creationHeight.isZero()) {\n      writer.uint32(8).int64(message.creationHeight);\n    }\n\n    if (message.completionTime !== undefined) {\n      timestamp_1.Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.initialBalance !== \"\") {\n      writer.uint32(26).string(message.initialBalance);\n    }\n\n    if (message.sharesDst !== \"\") {\n      writer.uint32(34).string(message.sharesDst);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseRedelegationEntry);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.creationHeight = reader.int64();\n          break;\n\n        case 2:\n          message.completionTime = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));\n          break;\n\n        case 3:\n          message.initialBalance = reader.string();\n          break;\n\n        case 4:\n          message.sharesDst = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseRedelegationEntry);\n\n    if (object.creationHeight !== undefined && object.creationHeight !== null) {\n      message.creationHeight = long_1.default.fromString(object.creationHeight);\n    } else {\n      message.creationHeight = long_1.default.ZERO;\n    }\n\n    if (object.completionTime !== undefined && object.completionTime !== null) {\n      message.completionTime = fromJsonTimestamp(object.completionTime);\n    } else {\n      message.completionTime = undefined;\n    }\n\n    if (object.initialBalance !== undefined && object.initialBalance !== null) {\n      message.initialBalance = String(object.initialBalance);\n    } else {\n      message.initialBalance = \"\";\n    }\n\n    if (object.sharesDst !== undefined && object.sharesDst !== null) {\n      message.sharesDst = String(object.sharesDst);\n    } else {\n      message.sharesDst = \"\";\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.creationHeight !== undefined && (obj.creationHeight = (message.creationHeight || long_1.default.ZERO).toString());\n    message.completionTime !== undefined && (obj.completionTime = message.completionTime.toISOString());\n    message.initialBalance !== undefined && (obj.initialBalance = message.initialBalance);\n    message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c;\n\n    var message = Object.assign({}, baseRedelegationEntry);\n\n    if (object.creationHeight !== undefined && object.creationHeight !== null) {\n      message.creationHeight = object.creationHeight;\n    } else {\n      message.creationHeight = long_1.default.ZERO;\n    }\n\n    message.completionTime = (_a = object.completionTime) !== null && _a !== void 0 ? _a : undefined;\n    message.initialBalance = (_b = object.initialBalance) !== null && _b !== void 0 ? _b : \"\";\n    message.sharesDst = (_c = object.sharesDst) !== null && _c !== void 0 ? _c : \"\";\n    return message;\n  }\n};\nvar baseRedelegation = {\n  delegatorAddress: \"\",\n  validatorSrcAddress: \"\",\n  validatorDstAddress: \"\"\n};\nexports.Redelegation = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.delegatorAddress !== \"\") {\n      writer.uint32(10).string(message.delegatorAddress);\n    }\n\n    if (message.validatorSrcAddress !== \"\") {\n      writer.uint32(18).string(message.validatorSrcAddress);\n    }\n\n    if (message.validatorDstAddress !== \"\") {\n      writer.uint32(26).string(message.validatorDstAddress);\n    }\n\n    var _iterator16 = _createForOfIteratorHelper(message.entries),\n        _step16;\n\n    try {\n      for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n        var v = _step16.value;\n        exports.RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator16.e(err);\n    } finally {\n      _iterator16.f();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseRedelegation);\n    message.entries = [];\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.delegatorAddress = reader.string();\n          break;\n\n        case 2:\n          message.validatorSrcAddress = reader.string();\n          break;\n\n        case 3:\n          message.validatorDstAddress = reader.string();\n          break;\n\n        case 4:\n          message.entries.push(exports.RedelegationEntry.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseRedelegation);\n    message.entries = [];\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = String(object.delegatorAddress);\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n      message.validatorSrcAddress = String(object.validatorSrcAddress);\n    } else {\n      message.validatorSrcAddress = \"\";\n    }\n\n    if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n      message.validatorDstAddress = String(object.validatorDstAddress);\n    } else {\n      message.validatorDstAddress = \"\";\n    }\n\n    if (object.entries !== undefined && object.entries !== null) {\n      var _iterator17 = _createForOfIteratorHelper(object.entries),\n          _step17;\n\n      try {\n        for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n          var e = _step17.value;\n          message.entries.push(exports.RedelegationEntry.fromJSON(e));\n        }\n      } catch (err) {\n        _iterator17.e(err);\n      } finally {\n        _iterator17.f();\n      }\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n    message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n    message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n\n    if (message.entries) {\n      obj.entries = message.entries.map(function (e) {\n        return e ? exports.RedelegationEntry.toJSON(e) : undefined;\n      });\n    } else {\n      obj.entries = [];\n    }\n\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c;\n\n    var message = Object.assign({}, baseRedelegation);\n    message.delegatorAddress = (_a = object.delegatorAddress) !== null && _a !== void 0 ? _a : \"\";\n    message.validatorSrcAddress = (_b = object.validatorSrcAddress) !== null && _b !== void 0 ? _b : \"\";\n    message.validatorDstAddress = (_c = object.validatorDstAddress) !== null && _c !== void 0 ? _c : \"\";\n    message.entries = [];\n\n    if (object.entries !== undefined && object.entries !== null) {\n      var _iterator18 = _createForOfIteratorHelper(object.entries),\n          _step18;\n\n      try {\n        for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n          var e = _step18.value;\n          message.entries.push(exports.RedelegationEntry.fromPartial(e));\n        }\n      } catch (err) {\n        _iterator18.e(err);\n      } finally {\n        _iterator18.f();\n      }\n    }\n\n    return message;\n  }\n};\nvar baseParams = {\n  maxValidators: 0,\n  maxEntries: 0,\n  historicalEntries: 0,\n  bondDenom: \"\"\n};\nexports.Params = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.unbondingTime !== undefined) {\n      duration_1.Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.maxValidators !== 0) {\n      writer.uint32(16).uint32(message.maxValidators);\n    }\n\n    if (message.maxEntries !== 0) {\n      writer.uint32(24).uint32(message.maxEntries);\n    }\n\n    if (message.historicalEntries !== 0) {\n      writer.uint32(32).uint32(message.historicalEntries);\n    }\n\n    if (message.bondDenom !== \"\") {\n      writer.uint32(42).string(message.bondDenom);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseParams);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.unbondingTime = duration_1.Duration.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.maxValidators = reader.uint32();\n          break;\n\n        case 3:\n          message.maxEntries = reader.uint32();\n          break;\n\n        case 4:\n          message.historicalEntries = reader.uint32();\n          break;\n\n        case 5:\n          message.bondDenom = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseParams);\n\n    if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n      message.unbondingTime = duration_1.Duration.fromJSON(object.unbondingTime);\n    } else {\n      message.unbondingTime = undefined;\n    }\n\n    if (object.maxValidators !== undefined && object.maxValidators !== null) {\n      message.maxValidators = Number(object.maxValidators);\n    } else {\n      message.maxValidators = 0;\n    }\n\n    if (object.maxEntries !== undefined && object.maxEntries !== null) {\n      message.maxEntries = Number(object.maxEntries);\n    } else {\n      message.maxEntries = 0;\n    }\n\n    if (object.historicalEntries !== undefined && object.historicalEntries !== null) {\n      message.historicalEntries = Number(object.historicalEntries);\n    } else {\n      message.historicalEntries = 0;\n    }\n\n    if (object.bondDenom !== undefined && object.bondDenom !== null) {\n      message.bondDenom = String(object.bondDenom);\n    } else {\n      message.bondDenom = \"\";\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.unbondingTime !== undefined && (obj.unbondingTime = message.unbondingTime ? duration_1.Duration.toJSON(message.unbondingTime) : undefined);\n    message.maxValidators !== undefined && (obj.maxValidators = message.maxValidators);\n    message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n    message.historicalEntries !== undefined && (obj.historicalEntries = message.historicalEntries);\n    message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c, _d;\n\n    var message = Object.assign({}, baseParams);\n\n    if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n      message.unbondingTime = duration_1.Duration.fromPartial(object.unbondingTime);\n    } else {\n      message.unbondingTime = undefined;\n    }\n\n    message.maxValidators = (_a = object.maxValidators) !== null && _a !== void 0 ? _a : 0;\n    message.maxEntries = (_b = object.maxEntries) !== null && _b !== void 0 ? _b : 0;\n    message.historicalEntries = (_c = object.historicalEntries) !== null && _c !== void 0 ? _c : 0;\n    message.bondDenom = (_d = object.bondDenom) !== null && _d !== void 0 ? _d : \"\";\n    return message;\n  }\n};\nvar baseDelegationResponse = {};\nexports.DelegationResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.delegation !== undefined) {\n      exports.Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.balance !== undefined) {\n      coin_1.Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseDelegationResponse);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.delegation = exports.Delegation.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.balance = coin_1.Coin.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseDelegationResponse);\n\n    if (object.delegation !== undefined && object.delegation !== null) {\n      message.delegation = exports.Delegation.fromJSON(object.delegation);\n    } else {\n      message.delegation = undefined;\n    }\n\n    if (object.balance !== undefined && object.balance !== null) {\n      message.balance = coin_1.Coin.fromJSON(object.balance);\n    } else {\n      message.balance = undefined;\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.delegation !== undefined && (obj.delegation = message.delegation ? exports.Delegation.toJSON(message.delegation) : undefined);\n    message.balance !== undefined && (obj.balance = message.balance ? coin_1.Coin.toJSON(message.balance) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseDelegationResponse);\n\n    if (object.delegation !== undefined && object.delegation !== null) {\n      message.delegation = exports.Delegation.fromPartial(object.delegation);\n    } else {\n      message.delegation = undefined;\n    }\n\n    if (object.balance !== undefined && object.balance !== null) {\n      message.balance = coin_1.Coin.fromPartial(object.balance);\n    } else {\n      message.balance = undefined;\n    }\n\n    return message;\n  }\n};\nvar baseRedelegationEntryResponse = {\n  balance: \"\"\n};\nexports.RedelegationEntryResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.redelegationEntry !== undefined) {\n      exports.RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.balance !== \"\") {\n      writer.uint32(34).string(message.balance);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseRedelegationEntryResponse);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.redelegationEntry = exports.RedelegationEntry.decode(reader, reader.uint32());\n          break;\n\n        case 4:\n          message.balance = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseRedelegationEntryResponse);\n\n    if (object.redelegationEntry !== undefined && object.redelegationEntry !== null) {\n      message.redelegationEntry = exports.RedelegationEntry.fromJSON(object.redelegationEntry);\n    } else {\n      message.redelegationEntry = undefined;\n    }\n\n    if (object.balance !== undefined && object.balance !== null) {\n      message.balance = String(object.balance);\n    } else {\n      message.balance = \"\";\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.redelegationEntry !== undefined && (obj.redelegationEntry = message.redelegationEntry ? exports.RedelegationEntry.toJSON(message.redelegationEntry) : undefined);\n    message.balance !== undefined && (obj.balance = message.balance);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n\n    var message = Object.assign({}, baseRedelegationEntryResponse);\n\n    if (object.redelegationEntry !== undefined && object.redelegationEntry !== null) {\n      message.redelegationEntry = exports.RedelegationEntry.fromPartial(object.redelegationEntry);\n    } else {\n      message.redelegationEntry = undefined;\n    }\n\n    message.balance = (_a = object.balance) !== null && _a !== void 0 ? _a : \"\";\n    return message;\n  }\n};\nvar baseRedelegationResponse = {};\nexports.RedelegationResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.redelegation !== undefined) {\n      exports.Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n    }\n\n    var _iterator19 = _createForOfIteratorHelper(message.entries),\n        _step19;\n\n    try {\n      for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n        var v = _step19.value;\n        exports.RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator19.e(err);\n    } finally {\n      _iterator19.f();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseRedelegationResponse);\n    message.entries = [];\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.redelegation = exports.Redelegation.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.entries.push(exports.RedelegationEntryResponse.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseRedelegationResponse);\n    message.entries = [];\n\n    if (object.redelegation !== undefined && object.redelegation !== null) {\n      message.redelegation = exports.Redelegation.fromJSON(object.redelegation);\n    } else {\n      message.redelegation = undefined;\n    }\n\n    if (object.entries !== undefined && object.entries !== null) {\n      var _iterator20 = _createForOfIteratorHelper(object.entries),\n          _step20;\n\n      try {\n        for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n          var e = _step20.value;\n          message.entries.push(exports.RedelegationEntryResponse.fromJSON(e));\n        }\n      } catch (err) {\n        _iterator20.e(err);\n      } finally {\n        _iterator20.f();\n      }\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.redelegation !== undefined && (obj.redelegation = message.redelegation ? exports.Redelegation.toJSON(message.redelegation) : undefined);\n\n    if (message.entries) {\n      obj.entries = message.entries.map(function (e) {\n        return e ? exports.RedelegationEntryResponse.toJSON(e) : undefined;\n      });\n    } else {\n      obj.entries = [];\n    }\n\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseRedelegationResponse);\n\n    if (object.redelegation !== undefined && object.redelegation !== null) {\n      message.redelegation = exports.Redelegation.fromPartial(object.redelegation);\n    } else {\n      message.redelegation = undefined;\n    }\n\n    message.entries = [];\n\n    if (object.entries !== undefined && object.entries !== null) {\n      var _iterator21 = _createForOfIteratorHelper(object.entries),\n          _step21;\n\n      try {\n        for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n          var e = _step21.value;\n          message.entries.push(exports.RedelegationEntryResponse.fromPartial(e));\n        }\n      } catch (err) {\n        _iterator21.e(err);\n      } finally {\n        _iterator21.f();\n      }\n    }\n\n    return message;\n  }\n};\nvar basePool = {\n  notBondedTokens: \"\",\n  bondedTokens: \"\"\n};\nexports.Pool = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.notBondedTokens !== \"\") {\n      writer.uint32(10).string(message.notBondedTokens);\n    }\n\n    if (message.bondedTokens !== \"\") {\n      writer.uint32(18).string(message.bondedTokens);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, basePool);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.notBondedTokens = reader.string();\n          break;\n\n        case 2:\n          message.bondedTokens = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, basePool);\n\n    if (object.notBondedTokens !== undefined && object.notBondedTokens !== null) {\n      message.notBondedTokens = String(object.notBondedTokens);\n    } else {\n      message.notBondedTokens = \"\";\n    }\n\n    if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n      message.bondedTokens = String(object.bondedTokens);\n    } else {\n      message.bondedTokens = \"\";\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.notBondedTokens !== undefined && (obj.notBondedTokens = message.notBondedTokens);\n    message.bondedTokens !== undefined && (obj.bondedTokens = message.bondedTokens);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n\n    var message = Object.assign({}, basePool);\n    message.notBondedTokens = (_a = object.notBondedTokens) !== null && _a !== void 0 ? _a : \"\";\n    message.bondedTokens = (_b = object.bondedTokens) !== null && _b !== void 0 ? _b : \"\";\n    return message;\n  }\n};\n\nfunction toTimestamp(date) {\n  var seconds = numberToLong(date.getTime() / 1000);\n  var nanos = date.getTime() % 1000 * 1000000;\n  return {\n    seconds: seconds,\n    nanos: nanos\n  };\n}\n\nfunction fromTimestamp(t) {\n  var millis = t.seconds.toNumber() * 1000;\n  millis += t.nanos / 1000000;\n  return new Date(millis);\n}\n\nfunction fromJsonTimestamp(o) {\n  if (o instanceof Date) {\n    return o;\n  } else if (typeof o === \"string\") {\n    return new Date(o);\n  } else {\n    return fromTimestamp(timestamp_1.Timestamp.fromJSON(o));\n  }\n}\n\nfunction numberToLong(number) {\n  return long_1.default.fromNumber(number);\n}\n\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":null,"metadata":{},"sourceType":"script"}