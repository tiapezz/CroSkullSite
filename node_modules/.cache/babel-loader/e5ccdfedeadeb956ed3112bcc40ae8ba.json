{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"F:\\\\Mattia\\\\Visual studio\\\\ProjectCroSkull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"F:\\\\Mattia\\\\Visual studio\\\\ProjectCroSkull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sha512 = exports.Sha512 = exports.sha256 = exports.Sha256 = exports.sha1 = exports.Sha1 = void 0;\n\nvar sha_js_1 = __importDefault(require(\"sha.js\"));\n\nvar Sha1 = /*#__PURE__*/function () {\n  function Sha1(firstData) {\n    _classCallCheck(this, Sha1);\n\n    this.blockSize = 512 / 8;\n    this.impl = sha_js_1.default(\"sha1\");\n\n    if (firstData) {\n      this.update(firstData);\n    }\n  }\n\n  _createClass(Sha1, [{\n    key: \"update\",\n    value: function update(data) {\n      this.impl.update(data);\n      return this;\n    }\n  }, {\n    key: \"digest\",\n    value: function digest() {\n      return new Uint8Array(this.impl.digest());\n    }\n  }]);\n\n  return Sha1;\n}();\n\nexports.Sha1 = Sha1;\n/** Convenience function equivalent to `new Sha1(data).digest()` */\n\nfunction sha1(data) {\n  return new Sha1(data).digest();\n}\n\nexports.sha1 = sha1;\n\nvar Sha256 = /*#__PURE__*/function () {\n  function Sha256(firstData) {\n    _classCallCheck(this, Sha256);\n\n    this.blockSize = 512 / 8;\n    this.impl = sha_js_1.default(\"sha256\");\n\n    if (firstData) {\n      this.update(firstData);\n    }\n  }\n\n  _createClass(Sha256, [{\n    key: \"update\",\n    value: function update(data) {\n      this.impl.update(data);\n      return this;\n    }\n  }, {\n    key: \"digest\",\n    value: function digest() {\n      return new Uint8Array(this.impl.digest());\n    }\n  }]);\n\n  return Sha256;\n}();\n\nexports.Sha256 = Sha256;\n/** Convenience function equivalent to `new Sha256(data).digest()` */\n\nfunction sha256(data) {\n  return new Sha256(data).digest();\n}\n\nexports.sha256 = sha256;\n\nvar Sha512 = /*#__PURE__*/function () {\n  function Sha512(firstData) {\n    _classCallCheck(this, Sha512);\n\n    this.blockSize = 1024 / 8;\n    this.impl = sha_js_1.default(\"sha512\");\n\n    if (firstData) {\n      this.update(firstData);\n    }\n  }\n\n  _createClass(Sha512, [{\n    key: \"update\",\n    value: function update(data) {\n      this.impl.update(data);\n      return this;\n    }\n  }, {\n    key: \"digest\",\n    value: function digest() {\n      return new Uint8Array(this.impl.digest());\n    }\n  }]);\n\n  return Sha512;\n}();\n\nexports.Sha512 = Sha512;\n/** Convenience function equivalent to `new Sha512(data).digest()` */\n\nfunction sha512(data) {\n  return new Sha512(data).digest();\n}\n\nexports.sha512 = sha512;","map":null,"metadata":{},"sourceType":"script"}