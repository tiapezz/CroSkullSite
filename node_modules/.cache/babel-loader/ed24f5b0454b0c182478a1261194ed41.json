{"ast":null,"code":"import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\nimport marketplaceReducer from \"./marketplace/marketplaceReducer\";\nimport raffleReducer from \"./raffle/raffleReducer\";\nvar rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n  marketplace: marketplaceReducer,\n  raffle: raffleReducer\n});\nvar middleware = [thunk];\nvar composeEnhancers = compose(applyMiddleware.apply(void 0, middleware));\n\nvar configureStore = function configureStore() {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nvar store = configureStore();\nexport default store;","map":{"version":3,"sources":["F:/Mattia/Visual studio/AppCroskull/croskull-nft-marketplace/src/redux/store.js"],"names":["applyMiddleware","compose","createStore","combineReducers","thunk","blockchainReducer","dataReducer","marketplaceReducer","raffleReducer","rootReducer","blockchain","data","marketplace","raffle","middleware","composeEnhancers","configureStore","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AAEA,IAAMC,WAAW,GAAGN,eAAe,CAAC;AAClCO,EAAAA,UAAU,EAAEL,iBADsB;AAElCM,EAAAA,IAAI,EAAEL,WAF4B;AAGlCM,EAAAA,WAAW,EAAEL,kBAHqB;AAIlCM,EAAAA,MAAM,EAAEL;AAJ0B,CAAD,CAAnC;AAOA,IAAMM,UAAU,GAAG,CAACV,KAAD,CAAnB;AACA,IAAMW,gBAAgB,GAAGd,OAAO,CAACD,eAAe,MAAf,SAAmBc,UAAnB,CAAD,CAAhC;;AAEA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,SAAOd,WAAW,CAACO,WAAD,EAAcM,gBAAd,CAAlB;AACD,CAFD;;AAIA,IAAME,KAAK,GAAGD,cAAc,EAA5B;AAEA,eAAeC,KAAf","sourcesContent":["import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\nimport marketplaceReducer from \"./marketplace/marketplaceReducer\";\r\nimport raffleReducer from \"./raffle/raffleReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n  marketplace: marketplaceReducer,\r\n  raffle: raffleReducer\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}