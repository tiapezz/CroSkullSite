{"ast":null,"code":"import _defineProperty from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\src\\\\components\\\\Story\\\\Story.jsx\";\n\nimport { ethers } from 'ethers';\nimport React, { useEffect, useState } from \"react\";\nimport { getSkullsData, toTavern, toMission, sendNotification, getStakingData, approveStories, refreshSkullsStories } from \"../../redux/data/dataActions\";\nimport store from \"../../redux/store\";\nimport { useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDungeon, faRunning, faCoins, faSkullCrossbones, faSpinner, faRedoAlt } from '@fortawesome/free-solid-svg-icons';\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport ReactQuill from \"react-quill\";\nimport IpfsHttpClient from \"ipfs-http-client\";\nimport hexagon from \"./hexagon.svg\";\nimport inventoryIcon from \"./inventory.svg\";\nimport eggImage from './egg.png';\nimport bluePotionImage from './bluePotionImage.png';\nimport redPotionImage from './redPotionImage.png';\nimport \"react-quill/dist/quill.snow.css\";\nimport './Story.css';\nvar ipfsUri480 = \"https://croskull.mypinata.cloud/ipfs/QmWu9bKunKbv8Kkq8wEWGpCaW47oMBbH6ep4ZWBzAxHtgj/\";\nvar ipfsUri128 = \"https://croskull.mypinata.cloud/ipfs/QmZn1HvYE1o1J8LhNpxFTj5k8LQb2bWT49YvbrhB3r19Xx/\";\n\nvar Story = function Story() {\n  var dispatch = useDispatch();\n\n  var _store$getState = store.getState(),\n      blockchain = _store$getState.blockchain,\n      data = _store$getState.data;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      viewStories = _useState2[0],\n      toggleStories = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      viewInventory = _useState4[0],\n      toggleInventory = _useState4[1];\n\n  var _useState5 = useState({\n    currentView: 'tavern',\n    //tavern or adventure\n    selectedSkulls: [],\n    selectedStakeSkulls: []\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      viewState = _useState6[0],\n      setViewState = _useState6[1];\n\n  var _useState7 = useState({\n    display: false,\n    tokenId: 0,\n    title: \"\",\n    description: \"\",\n    birthDate: 0,\n    deathDate: 0,\n    hobby: \"\",\n    twitter: \"\",\n    faction: \"\",\n    ownerOf: \"\",\n    x: 0,\n    y: 0\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      storyState = _useState8[0],\n      setStoryState = _useState8[1];\n\n  var _useState9 = useState({\n    display: false,\n    tokenId: 0,\n    title: \"\",\n    description: \"\",\n    birthDate: 0,\n    deathDate: 0,\n    hobby: \"\",\n    twitter: \"\",\n    faction: \"\"\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      editorStory = _useState10[0],\n      setEditorStory = _useState10[1];\n\n  var _useState11 = useState({\n    x: 0,\n    y: 0\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      mousePos = _useState12[0],\n      setMousePos = _useState12[1];\n\n  useEffect(function () {\n    if (viewStories) toggleStories(false);\n    if (viewInventory) toggleInventory(false);\n  }, [viewState]);\n  useEffect(function () {\n    if (viewInventory && viewStories) toggleInventory(false);\n  }, [viewStories]);\n  useEffect(function () {\n    if (viewStories && viewInventory) toggleStories(false);\n  }, [viewInventory]);\n  useEffect(function () {\n    setEditorStory(_objectSpread({}, editorStory, {\n      tokenId: storyState.tokenId\n    }));\n  }, [storyState.tokenId]);\n\n  var fetchSkullDescription = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n      var tokenId, ownerOf, croSkullsDescription, accountAddress, ipfsHash, hashMetadata, _yield$hashMetadata$j, _name, _description, _birthDate, _deathDate, _hobby, _twitter, _faction;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              tokenId = _ref.tokenId, ownerOf = _ref.ownerOf;\n              croSkullsDescription = blockchain.croSkullsDescription, accountAddress = blockchain.accountAddress;\n              _context.next = 4;\n              return croSkullsDescription.descriptionHashes(tokenId);\n\n            case 4:\n              ipfsHash = _context.sent;\n              ipfsHash = ipfsHash.toString();\n\n              if (!ipfsHash) {\n                _context.next = 25;\n                break;\n              }\n\n              ipfsHash = ipfsHash.replace('ipfs://', 'https://ipfs.infura.io/ipfs/');\n              _context.next = 10;\n              return fetch(ipfsHash);\n\n            case 10:\n              hashMetadata = _context.sent;\n              _context.next = 13;\n              return hashMetadata.json();\n\n            case 13:\n              _yield$hashMetadata$j = _context.sent;\n              _name = _yield$hashMetadata$j.name;\n              _description = _yield$hashMetadata$j.description;\n              _birthDate = _yield$hashMetadata$j.birthDate;\n              _deathDate = _yield$hashMetadata$j.deathDate;\n              _hobby = _yield$hashMetadata$j.hobby;\n              _twitter = _yield$hashMetadata$j.twitter;\n              _faction = _yield$hashMetadata$j.faction;\n              setStoryState(_objectSpread({}, storyState, {\n                name: _name,\n                description: _description,\n                birthDate: _birthDate,\n                deathDate: _deathDate,\n                hobby: _hobby,\n                twitter: _twitter,\n                faction: _faction,\n                display: true,\n                tokenId: tokenId,\n                ownerOf: ownerOf ? ownerOf : storyState.ownerOf,\n                x: mousePos.x,\n                y: mousePos.y\n              }));\n              setEditorStory(_objectSpread({}, editorStory, {\n                name: _name,\n                description: _description,\n                birthDate: _birthDate,\n                deathDate: _deathDate,\n                hobby: _hobby,\n                twitter: _twitter,\n                faction: _faction,\n                display: false,\n                tokenId: tokenId,\n                ownerOf: ownerOf ? ownerOf : storyState.ownerOf\n              }));\n              _context.next = 26;\n              break;\n\n            case 25:\n              setStoryState({\n                tokenId: tokenId,\n                ownerOf: ownerOf ? ownerOf : accountAddress,\n                display: true\n              });\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchSkullDescription(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  function StoryDet() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 5\n      }\n    }, \"AcquaRagia\");\n  }\n\n  var fetchSkullDescription2 = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref3) {\n      var tokenId, ownerOf, croSkullsDescription, accountAddress, ipfsHash, hashMetadata, _yield$hashMetadata$j2, _name2, _description2, _birthDate2, _deathDate2, _hobby2, _twitter2, _faction2;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              tokenId = _ref3.tokenId, ownerOf = _ref3.ownerOf;\n              croSkullsDescription = blockchain.croSkullsDescription, accountAddress = blockchain.accountAddress;\n              _context2.next = 4;\n              return croSkullsDescription.descriptionHashes(tokenId);\n\n            case 4:\n              ipfsHash = _context2.sent;\n              ipfsHash = ipfsHash.toString();\n\n              if (!ipfsHash) {\n                _context2.next = 21;\n                break;\n              }\n\n              ipfsHash = ipfsHash.replace('ipfs://', 'https://ipfs.infura.io/ipfs/');\n              _context2.next = 10;\n              return fetch(ipfsHash);\n\n            case 10:\n              hashMetadata = _context2.sent;\n              _context2.next = 13;\n              return hashMetadata.json();\n\n            case 13:\n              _yield$hashMetadata$j2 = _context2.sent;\n              _name2 = _yield$hashMetadata$j2.name;\n              _description2 = _yield$hashMetadata$j2.description;\n              _birthDate2 = _yield$hashMetadata$j2.birthDate;\n              _deathDate2 = _yield$hashMetadata$j2.deathDate;\n              _hobby2 = _yield$hashMetadata$j2.hobby;\n              _twitter2 = _yield$hashMetadata$j2.twitter;\n              _faction2 = _yield$hashMetadata$j2.faction;\n\n            case 21:\n              console.log(\"name: \" + name);\n\n            case 22:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function fetchSkullDescription2(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var saveSkullStory = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var croSkullsDescription, storyfied, descriptionBuffer, client, ipfsResponse, path, skullStoryTx;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              croSkullsDescription = blockchain.croSkullsDescription;\n              storyfied = JSON.stringify(editorStory);\n              descriptionBuffer = Buffer.from(storyfied);\n              _context4.prev = 3;\n              client = IpfsHttpClient(new URL('https://ipfs.infura.io:5001/api/v0'));\n              _context4.next = 7;\n              return client.add(descriptionBuffer);\n\n            case 7:\n              ipfsResponse = _context4.sent;\n\n              if (!(ipfsResponse.path !== \"\")) {\n                _context4.next = 13;\n                break;\n              }\n\n              path = \"ipfs://\".concat(ipfsResponse.path);\n              skullStoryTx = croSkullsDescription.updateUsingGrave(editorStory.tokenId.toString(), //tokenId\n              path // ipfs string hash with prefix\n              );\n              _context4.next = 13;\n              return skullStoryTx.then( /*#__PURE__*/function () {\n                var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(tx) {\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          console.log(tx);\n                          dispatch(sendNotification({\n                            title: \"Transaction Sent\",\n                            message: 'Waiting for confirmation...',\n                            tx: tx,\n                            type: \"info\"\n                          }));\n                          _context3.next = 4;\n                          return tx.wait(2);\n\n                        case 4:\n                          dispatch(sendNotification({\n                            title: \"Story Updated!\",\n                            message: \"Skull #\".concat(editorStory.tokenId, \"'s story updated succesful\"),\n                            tx: tx,\n                            type: \"success\"\n                          }));\n                          fetchSkullDescription({\n                            tokenId: editorStory.tokenId\n                          });\n                          setEditorStory(_objectSpread({}, editorStory, {\n                            display: false\n                          }));\n                          dispatch(getSkullsData());\n\n                        case 8:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function (_x3) {\n                  return _ref6.apply(this, arguments);\n                };\n              }());\n\n            case 13:\n              _context4.next = 18;\n              break;\n\n            case 15:\n              _context4.prev = 15;\n              _context4.t0 = _context4[\"catch\"](3);\n              console.log(_context4.t0.message);\n\n            case 18:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[3, 15]]);\n    }));\n\n    return function saveSkullStory() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var handleFieldChange = function handleFieldChange(event) {\n    var value = event.target ? event.target.value.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\") : event;\n    var name = event.target ? event.target.id : \"description\";\n    var type = event.target ? event.target.type : \"description\";\n    console.log(value, name, type);\n\n    if (type === 'date') {\n      value = parseInt(new Date(value).getTime() / 1000);\n    }\n\n    setEditorStory(_objectSpread({}, editorStory, _defineProperty({}, name, value)));\n  }; //quill description editor setting\n\n\n  var storiesLoading = data.storiesLoading,\n      redCount = data.redCount,\n      blueCount = data.blueCount,\n      croSkullsStaked = data.croSkullsStaked,\n      croSkulls = data.croSkulls,\n      skullsStories = data.skullsStories,\n      approval = data.approval,\n      advancedMetadata = data.advancedMetadata,\n      loading = data.loading,\n      croSkullsContractOwner = data.croSkullsContractOwner,\n      petEggsMintedByUser = data.petEggsMintedByUser,\n      storyAllowance = data.storyAllowance;\n  var accountAddress = blockchain.accountAddress,\n      contractDetected = blockchain.contractDetected;\n  var tokenId = storyState.tokenId,\n      name = storyState.name,\n      description = storyState.description,\n      birthDate = storyState.birthDate,\n      deathDate = storyState.deathDate,\n      hobby = storyState.hobby,\n      twitter = storyState.twitter,\n      faction = storyState.faction,\n      display = storyState.display;\n  var modules = {\n    toolbar: [[{\n      'header': [1, 2, false]\n    }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n      'list': 'ordered'\n    }, {\n      'list': 'bullet'\n    }, {\n      'indent': '-1'\n    }, {\n      'indent': '+1'\n    }], ['clean']]\n  };\n  var formats = ['header', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent'];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \" sk-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-row skull-grid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box-content sk-column skull-story-item\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"\".concat(ipfsUri480, \"287.webp\"),\n    style: {\n      width: '80%',\n      margin: 'auto'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-skull-desc\",\n    style: {\n      margin: 'auto'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 15\n    }\n  }, \"Name: Alfredo\"), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 15\n    }\n  }, \"Hobby: Basket\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box-content sk-column skull-story-item\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"\".concat(ipfsUri480, \"287.webp\"),\n    style: {\n      width: '80%',\n      margin: 'auto'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-skull-desc\",\n    style: {\n      margin: 'auto'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 15\n    }\n  }, \"Name: Alfredo\"), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 15\n    }\n  }, \"Hobby: Basket\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box-content sk-column skull-story-item\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"\".concat(ipfsUri480, \"287.webp\"),\n    style: {\n      width: '80%',\n      margin: 'auto'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-skull-desc\",\n    style: {\n      margin: 'auto'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 15\n    }\n  }, \"Name: Alfredo\"), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 15\n    }\n  }, \"Hobby: Basket\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box-content sk-column skull-story-item\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"\".concat(ipfsUri480, \"287.webp\"),\n    style: {\n      width: '80%',\n      margin: 'auto'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-skull-desc\",\n    style: {\n      margin: 'auto'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 15\n    }\n  }, \"Name: Alfredo\"), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, \"Hobby: Basket\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box-content sk-column skull-story-item\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"\".concat(ipfsUri480, \"287.webp\"),\n    style: {\n      width: '80%',\n      margin: 'auto'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-skull-desc\",\n    style: {\n      margin: 'auto'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 15\n    }\n  }, \"Name: Alfredo\"), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 15\n    }\n  }, \"Hobby: Basket\"))), skullsStories.length > 0 ? skullsStories.map(function (story, i) {\n    var ownerOf = story.ownerOf,\n        tokenId = story.tokenId;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sk-box-content sk-column skull-story-item\",\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"\".concat(ipfsUri480).concat(tokenId, \".webp\"),\n      style: {\n        width: '80%',\n        margin: 'auto'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sk-skull-desc\",\n      style: {\n        margin: 'auto'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 25\n      }\n    }, \"Token: \", story.tokenId), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 25\n      }\n    }, \"Owner: \", story.ownerOf.substr(0, 4), \"...\", story.ownerOf.substr(39, 41)), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 25\n      }\n    }, \"Name: \", /*#__PURE__*/React.createElement(\"fetchSkullDescription2\", {\n      ownerof: stoky.ownerOf,\n      tokenId: story.tokenId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 36\n      }\n    }))));\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null))), display ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"story-modal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }\n  }, editorStory.display ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box container\",\n    style: {\n      left: \"\".concat(storyState.x, \"px\"),\n      top: \"\".concat(storyState.y, \"px\")\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(LazyLoadImage, {\n    src: \"\".concat(ipfsUri480).concat(tokenId, \".webp\"),\n    className: \"selected div-skull\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"birthDate\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }\n  }, \"Birth date\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"birthDate\",\n    type: \"date\",\n    name: \"birthDate\",\n    onChange: handleFieldChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"deathDate\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 17\n    }\n  }, \"Death date\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"deathDate\",\n    type: \"date\",\n    name: \"deathDate\",\n    onChange: handleFieldChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"faction\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 17\n    }\n  }, \"Faction\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"faction\",\n    id: \"faction\",\n    onChange: handleFieldChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 19\n    }\n  }, \"None\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"lowlights\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 19\n    }\n  }, \"Lowlight\\u2019s\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"shadowrats\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 19\n    }\n  }, \"ShadowRats\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"acquafall\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 19\n    }\n  }, \"Acquafall\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"solarcry\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 19\n    }\n  }, \"Solarcry\")), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"twitter\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 17\n    }\n  }, \"Twitter Handle ( with @ )\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"twitter\",\n    type: \"text\",\n    name: \"twitter\",\n    onChange: handleFieldChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metadata\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"close-icon\",\n    onClick: function onClick() {\n      setEditorStory(_objectSpread({}, editorStory, {\n        display: false\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 17\n    }\n  }, \"Back to Skull\"), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      fontSize: '18px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 17\n    }\n  }, \"Edit your Skull Details\"), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 17\n    }\n  }, \"Skull Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    type: \"text\",\n    name: \"name\",\n    onChange: handleFieldChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"hobby\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 17\n    }\n  }, \"Hobbies/Motto\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"hobby\",\n    type: \"text\",\n    name: \"hobby\",\n    onChange: handleFieldChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"description\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 17\n    }\n  }, \"Skull's Story\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      overflowY: 'scroll'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ReactQuill, {\n    className: \"description-editor\",\n    modules: modules,\n    formats: formats,\n    value: editorStory.description,\n    onChange: handleFieldChange,\n    placeholder: \"Write something awesome...\",\n    name: \"description\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pay-action\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 17\n    }\n  }, storyAllowance > 0 ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"skull-button save-grave\",\n    onClick: function onClick() {\n      return saveSkullStory();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 23\n    }\n  }, \"Update using (10) Grave\") : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"skull-button save-grave\",\n    onClick: function onClick() {\n      return dispatch(approveStories());\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 23\n    }\n  }, \"Approve Story\")))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LazyLoadImage, {\n    src: \"\".concat(ipfsUri480).concat(tokenId, \".webp\"),\n    className: \"card div-skull\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 19\n    }\n  }, \"Birth Date: \", birthDate > 0 ? new Date(birthDate * 1000).toISOString().slice(0, 10) : ''), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 19\n    }\n  }, \"Death Date: \", deathDate > 0 ? new Date(deathDate * 1000).toISOString().slice(0, 10) : ''), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 19\n    }\n  }, \"Faction: \", faction), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 19\n    }\n  }, \"Twitter: \", twitter !== '' ? /*#__PURE__*/React.createElement(\"a\", {\n    href: twitter ? \"https://twitter.com/\".concat(twitter.replace('@', '')) : '',\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 21\n    }\n  }, twitter) : ''), storyState.ownerOf && ethers.utils.getAddress(storyState.ownerOf) === ethers.utils.getAddress(accountAddress) ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"skull-button edit-button\",\n    onClick: function onClick() {\n      setEditorStory(_objectSpread({}, editorStory, {\n        display: true\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 23\n    }\n  }, \"Edit Story\") : /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 23\n    }\n  }, \"Owner: \", storyState.ownerOf ? \"\".concat(storyState.ownerOf.substr(0, 5), \"...\").concat(storyState.ownerOf.substr(38, 41)) : '')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metadata\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"close-icon\",\n    onClick: function onClick() {\n      setStoryState(_objectSpread({}, storyState, {\n        display: false\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 17\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 17\n    }\n  }, name), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 17\n    }\n  }, \"Hobby: \", hobby), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"description\",\n    dangerouslySetInnerHTML: {\n      __html: description\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 17\n    }\n  })))) : '');\n};\n\nexport default Story;","map":{"version":3,"sources":["F:/Mattia/Visual studio/AppCroskull/croskull-nft-marketplace/src/components/Story/Story.jsx"],"names":["ethers","React","useEffect","useState","getSkullsData","toTavern","toMission","sendNotification","getStakingData","approveStories","refreshSkullsStories","store","useDispatch","FontAwesomeIcon","faDungeon","faRunning","faCoins","faSkullCrossbones","faSpinner","faRedoAlt","LazyLoadImage","ReactQuill","IpfsHttpClient","eggImage","bluePotionImage","redPotionImage","ipfsUri480","ipfsUri128","Story","dispatch","getState","blockchain","data","viewStories","toggleStories","viewInventory","toggleInventory","currentView","selectedSkulls","selectedStakeSkulls","viewState","setViewState","display","tokenId","title","description","birthDate","deathDate","hobby","twitter","faction","ownerOf","x","y","storyState","setStoryState","editorStory","setEditorStory","mousePos","setMousePos","fetchSkullDescription","croSkullsDescription","accountAddress","descriptionHashes","ipfsHash","toString","replace","fetch","hashMetadata","json","name","StoryDet","fetchSkullDescription2","console","log","saveSkullStory","storyfied","JSON","stringify","descriptionBuffer","Buffer","from","client","URL","add","ipfsResponse","path","skullStoryTx","updateUsingGrave","then","tx","message","type","wait","handleFieldChange","event","value","target","id","parseInt","Date","getTime","storiesLoading","redCount","blueCount","croSkullsStaked","croSkulls","skullsStories","approval","advancedMetadata","loading","croSkullsContractOwner","petEggsMintedByUser","storyAllowance","contractDetected","modules","toolbar","formats","width","margin","length","map","story","i","substr","stoky","left","top","fontSize","overflowY","toISOString","slice","utils","getAddress","__html"],"mappings":"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","sourcesContent":["import {\r\n  ethers\r\n} from 'ethers';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { getSkullsData, toTavern, toMission, sendNotification, getStakingData, approveStories, refreshSkullsStories } from \"../../redux/data/dataActions\";\r\nimport store from \"../../redux/store\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faDungeon, faRunning, faCoins, faSkullCrossbones, faSpinner, faRedoAlt  } from '@fortawesome/free-solid-svg-icons';\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport ReactQuill from \"react-quill\";\r\nimport IpfsHttpClient from \"ipfs-http-client\";\r\nimport hexagon from './hexagon.svg';\r\nimport inventoryIcon from './inventory.svg';\r\nimport eggImage from './egg.png';\r\nimport bluePotionImage from './bluePotionImage.png';\r\nimport redPotionImage from './redPotionImage.png';\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport './Story.css';\r\n\r\nconst ipfsUri480 = \"https://croskull.mypinata.cloud/ipfs/QmWu9bKunKbv8Kkq8wEWGpCaW47oMBbH6ep4ZWBzAxHtgj/\";\r\nconst ipfsUri128 = \"https://croskull.mypinata.cloud/ipfs/QmZn1HvYE1o1J8LhNpxFTj5k8LQb2bWT49YvbrhB3r19Xx/\";\r\nconst Story = () => {\r\n  let dispatch = useDispatch()\r\n  let { blockchain, data } = store.getState()\r\n\r\n  const [viewStories, toggleStories] = useState( false )\r\n  const [viewInventory, toggleInventory] = useState( false )\r\n\r\n  const [viewState, setViewState] = useState( {\r\n    currentView: 'tavern', //tavern or adventure\r\n    selectedSkulls: [],\r\n    selectedStakeSkulls: []\r\n  })\r\n\r\n  const [storyState, setStoryState] = useState( {\r\n    display: false,\r\n    tokenId: 0,\r\n    title: \"\",\r\n    description: \"\",\r\n    birthDate: 0,\r\n    deathDate: 0,\r\n    hobby: \"\",\r\n    twitter: \"\",\r\n    faction: \"\",\r\n    ownerOf: \"\",\r\n    x: 0,\r\n    y: 0\r\n  })\r\n\r\n  const [editorStory, setEditorStory] = useState( {\r\n    display: false,\r\n    tokenId: 0,\r\n    title: \"\",\r\n    description: \"\",\r\n    birthDate: 0,\r\n    deathDate: 0,\r\n    hobby: \"\",\r\n    twitter: \"\",\r\n    faction: \"\"\r\n  } )\r\n\r\n  const [mousePos, setMousePos] = useState({ \r\n    x: 0, \r\n    y: 0 \r\n  })\r\n  \r\n\r\n\r\n  useEffect(() => {\r\n    if( viewStories )\r\n      toggleStories( false )\r\n    if( viewInventory )\r\n      toggleInventory( false )\r\n  }, [viewState])\r\n\r\n  useEffect(() => {\r\n    if( viewInventory && viewStories )\r\n      toggleInventory( false )\r\n  }, [viewStories])\r\n\r\n  useEffect(() => {\r\n    if( viewStories  && viewInventory )\r\n      toggleStories( false )\r\n  }, [viewInventory])\r\n\r\n  useEffect( () => {\r\n    setEditorStory( { \r\n      ...editorStory,\r\n      tokenId: storyState.tokenId\r\n    })\r\n  }, [storyState.tokenId])\r\n  \r\n  const fetchSkullDescription = async ( { tokenId, ownerOf } ) => {\r\n    let { croSkullsDescription, accountAddress } = blockchain\r\n    let ipfsHash = await croSkullsDescription.descriptionHashes( tokenId )\r\n    ipfsHash = ipfsHash.toString()\r\n    if( ipfsHash) {\r\n      ipfsHash = ipfsHash.replace('ipfs://', 'https://ipfs.infura.io/ipfs/')\r\n      let hashMetadata = await fetch( ipfsHash );\r\n      let { name, description, birthDate, deathDate, hobby, twitter, faction} = await hashMetadata.json();\r\n      \r\n      setStoryState( {\r\n        ...storyState,\r\n        name,\r\n        description,\r\n        birthDate,\r\n        deathDate,\r\n        hobby,\r\n        twitter,\r\n        faction,\r\n        display: true,\r\n        tokenId,\r\n        ownerOf: ownerOf ? ownerOf : storyState.ownerOf,\r\n        x: mousePos.x,\r\n        y: mousePos.y\r\n      } )\r\n      setEditorStory( {\r\n        ...editorStory,\r\n        name,\r\n        description,\r\n        birthDate,\r\n        deathDate,\r\n        hobby,\r\n        twitter,\r\n        faction,\r\n        display: false,\r\n        tokenId,\r\n        ownerOf: ownerOf ? ownerOf : storyState.ownerOf,\r\n      } )\r\n    } else {\r\n      setStoryState( {\r\n        tokenId,\r\n        ownerOf: ownerOf ? ownerOf : accountAddress,\r\n        display: true\r\n      })\r\n    }\r\n  }\r\nfunction StoryDet (){\r\n  return(\r\n    <div>\r\n      AcquaRagia\r\n    </div>\r\n  )\r\n}\r\n  const fetchSkullDescription2 = async ( { tokenId, ownerOf } ) => {\r\n    let { croSkullsDescription, accountAddress } = blockchain\r\n    let ipfsHash = await croSkullsDescription.descriptionHashes( tokenId )\r\n    ipfsHash = ipfsHash.toString()\r\n    if( ipfsHash) {\r\n      ipfsHash = ipfsHash.replace('ipfs://', 'https://ipfs.infura.io/ipfs/')\r\n      let hashMetadata = await fetch( ipfsHash );\r\n      let { name, description, birthDate, deathDate, hobby, twitter, faction} = await hashMetadata.json();\r\n    }\r\n    console.log(\"name: \"+name);\r\n  }\r\n\r\n  const saveSkullStory = async ( ) => {\r\n    let { croSkullsDescription } = blockchain\r\n    let storyfied = JSON.stringify(editorStory)\r\n    let descriptionBuffer = Buffer.from(storyfied)\r\n    try {\r\n      const client = IpfsHttpClient(new URL('https://ipfs.infura.io:5001/api/v0'));\r\n      const ipfsResponse = await client.add(descriptionBuffer);\r\n      if( ipfsResponse.path !== \"\" ){\r\n          let path = `ipfs://${ipfsResponse.path}`\r\n          let skullStoryTx = croSkullsDescription.updateUsingGrave( \r\n            editorStory.tokenId.toString(), //tokenId\r\n            path, // ipfs string hash with prefix\r\n          )\r\n\r\n           await skullStoryTx.then(\r\n            async (tx) => {\r\n              console.log( tx )\r\n              dispatch(sendNotification({\r\n                title: `Transaction Sent`,\r\n                message: 'Waiting for confirmation...',\r\n                tx,\r\n                type: \"info\"\r\n              }))\r\n              await tx.wait(2)\r\n              dispatch(sendNotification({\r\n                title: `Story Updated!`,\r\n                message: `Skull #${editorStory.tokenId}'s story updated succesful`,\r\n                tx,\r\n                type: \"success\"\r\n              }))\r\n              fetchSkullDescription( { tokenId: editorStory.tokenId })\r\n              setEditorStory({\r\n                ...editorStory,\r\n                display: false\r\n              })\r\n              dispatch(getSkullsData())\r\n            }\r\n          )\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  const handleFieldChange = ( event ) => {\r\n    let value = event.target ? event.target.value.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\") : event\r\n    let name = event.target ? event.target.id : \"description\"\r\n    let type = event.target ? event.target.type : \"description\"\r\n    console.log( value, name, type )\r\n    if( type === 'date' ){\r\n      value = parseInt( new Date( value ).getTime() / 1000 )\r\n    }\r\n    setEditorStory( {\r\n      ...editorStory,\r\n      [name]: value\r\n    } )\r\n  }\r\n\r\n    //quill description editor setting\r\n\r\n    let { storiesLoading, redCount, blueCount, croSkullsStaked, croSkulls, skullsStories, approval, advancedMetadata, loading, croSkullsContractOwner, petEggsMintedByUser, storyAllowance } = data;\r\n    let { accountAddress, contractDetected } = blockchain\r\n    let { \r\n      tokenId,\r\n      name,\r\n      description,\r\n      birthDate,\r\n      deathDate,\r\n      hobby,\r\n      twitter,\r\n      faction,\r\n      display\r\n    } = storyState;\r\n\r\n    let modules = {\r\n      toolbar: [\r\n        [{ 'header': [1, 2, false] }],\r\n        ['bold', 'italic', 'underline','strike', 'blockquote'],\r\n        [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\r\n        ['clean']\r\n      ],\r\n    };\r\n  \r\n    let formats = [\r\n      'header',\r\n      'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n      'list', 'bullet', 'indent',\r\n    ];\r\n\r\n  return (\r\n    <>\r\n      <div className=\" sk-box\">\r\n        <div className=\"sk-row skull-grid\">\r\n        \r\n        <div className=\"sk-box-content sk-column skull-story-item\">\r\n            <img src={`${ipfsUri480}287.webp`} style={{ width: '80%', margin: 'auto' }} />\r\n            <div className='sk-skull-desc' style={{ margin: 'auto' }}>\r\n              <h3>Name: Alfredo</h3>\r\n              <h5>Hobby: Basket</h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"sk-box-content sk-column skull-story-item\">\r\n            <img src={`${ipfsUri480}287.webp`} style={{ width: '80%', margin: 'auto' }} />\r\n            <div className='sk-skull-desc' style={{ margin: 'auto' }}>\r\n              <h3>Name: Alfredo</h3>\r\n              <h5>Hobby: Basket</h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"sk-box-content sk-column skull-story-item\">\r\n            <img src={`${ipfsUri480}287.webp`} style={{ width: '80%', margin: 'auto' }} />\r\n            <div className='sk-skull-desc' style={{ margin: 'auto' }}>\r\n              <h3>Name: Alfredo</h3>\r\n              <h5>Hobby: Basket</h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"sk-box-content sk-column skull-story-item\">\r\n            <img src={`${ipfsUri480}287.webp`} style={{ width: '80%', margin: 'auto' }} />\r\n            <div className='sk-skull-desc' style={{ margin: 'auto' }}>\r\n              <h3>Name: Alfredo</h3>\r\n              <h5>Hobby: Basket</h5>\r\n            </div>\r\n            </div>\r\n          <div className=\"sk-box-content sk-column skull-story-item\">\r\n            <img src={`${ipfsUri480}287.webp`} style={{ width: '80%', margin: 'auto' }} />\r\n            <div className='sk-skull-desc' style={{ margin: 'auto' }}>\r\n              <h3>Name: Alfredo</h3>\r\n              <h5>Hobby: Basket</h5>\r\n            </div>\r\n          </div>\r\n          \r\n          { skullsStories.length > 0 ?\r\n              skullsStories.map( (story, i ) => {\r\n                let { ownerOf, tokenId } = story;\r\n                return (\r\n                    <div className=\"sk-box-content sk-column skull-story-item\" key={i}>\r\n                      <img src={`${ipfsUri480}${tokenId}.webp`} style={{ width: '80%', margin: 'auto' }} />\r\n                      <div className='sk-skull-desc' style={{ margin: 'auto' }}>\r\n                        <h3 >Token: {story.tokenId}</h3>\r\n                        <h3>Owner: {story.ownerOf.substr(0, 4)}...{story.ownerOf.substr(39, 41)}</h3>\r\n                        <h3>Name: {<fetchSkullDescription2 ownerof={stoky.ownerOf} tokenId={story.tokenId} />}</h3>\r\n                      </div>\r\n                    </div>\r\n                )\r\n              })\r\n              :\r\n              (\r\n                <></>\r\n              )\r\n            }\r\n\r\n        </div>\r\n        \r\n      </div>\r\n      { display ? (\r\n        <div className=\"story-modal\">\r\n            { editorStory.display ? (\r\n              <div \r\n                className=\"sk-box container\" \r\n                style={{ left: `${storyState.x}px`, top: `${storyState.y}px` }}\r\n              >\r\n              <div className=\"image\">\r\n                <LazyLoadImage \r\n                  src={`${ipfsUri480}${tokenId}.webp`}\r\n                  className='selected div-skull'\r\n                />\r\n                <label for=\"birthDate\">Birth date</label>\r\n                <input\r\n                  id=\"birthDate\"\r\n                  type=\"date\"\r\n                  name=\"birthDate\"\r\n                  onChange={handleFieldChange}\r\n                />\r\n                <label for=\"deathDate\">Death date</label>\r\n                <input\r\n                  id=\"deathDate\"\r\n                  type=\"date\"\r\n                  name=\"deathDate\"\r\n                  onChange={handleFieldChange}\r\n                />\r\n                <label for=\"faction\">Faction</label>\r\n                <select\r\n                  name=\"faction\"\r\n                  id=\"faction\"\r\n                  onChange={handleFieldChange}\r\n                >\r\n                  <option value=\"none\">None</option>\r\n                  <option value=\"lowlights\">Lowlight’s</option>\r\n                  <option value=\"shadowrats\">ShadowRats</option>\r\n                  <option value=\"acquafall\">Acquafall</option>\r\n                  <option value=\"solarcry\">Solarcry</option>\r\n                </select>\r\n                <label htmlFor=\"twitter\">Twitter Handle ( with @ )</label>\r\n                <input\r\n                  id=\"twitter\"\r\n                  type=\"text\"\r\n                  name=\"twitter\"\r\n                  onChange={handleFieldChange}\r\n                />\r\n              </div>\r\n              <div className=\"metadata\">\r\n                <div\r\n                  className=\"close-icon\"\r\n                  onClick={ () => {\r\n                    setEditorStory({\r\n                      ...editorStory,\r\n                      display: false\r\n                    })\r\n                  }}\r\n                >\r\n                  Back to Skull\r\n                </div>\r\n                <h2 style={{ fontSize: '18px' }}>Edit your Skull Details</h2>\r\n                <label for=\"name\">Skull Name</label>\r\n                <input\r\n                  id=\"name\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  onChange={handleFieldChange}\r\n                />\r\n                <label for=\"hobby\">Hobbies/Motto</label>\r\n                <input\r\n                  id=\"hobby\"\r\n                  type=\"text\"\r\n                  name=\"hobby\"\r\n                  onChange={handleFieldChange}\r\n                />\r\n                <label for=\"description\">Skull's Story</label>\r\n                <div\r\n                  style={{ overflowY: 'scroll'}}\r\n                >\r\n                  <ReactQuill\r\n                    className=\"description-editor\"\r\n                    modules={modules}\r\n                    formats={formats}\r\n                    value={editorStory.description}\r\n                    onChange={handleFieldChange}\r\n                    placeholder={\"Write something awesome...\"}\r\n                    name=\"description\"\r\n                  />\r\n                </div>\r\n                <div\r\n                  className=\"pay-action\"\r\n                >\r\n                  {\r\n                    storyAllowance > 0 ? (\r\n                      <button\r\n                        className=\"skull-button save-grave\"\r\n                        onClick={ () => saveSkullStory() }\r\n                      >\r\n                        Update using (10) Grave\r\n                      </button>\r\n                    ) : (\r\n                      <button\r\n                        className=\"skull-button save-grave\"\r\n                        onClick={ () => dispatch( approveStories() ) }\r\n                      >\r\n                        Approve Story\r\n                      </button>\r\n                    )\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n            ) : (\r\n              <div className=\"sk-box container\">\r\n                <div className=\"image\">\r\n                  <LazyLoadImage \r\n                    src={`${ipfsUri480}${tokenId}.webp`}\r\n                    className='card div-skull'\r\n                  />\r\n                  <span>Birth Date: {  birthDate > 0 ?  new Date(birthDate * 1000).toISOString().slice(0, 10) : '' }</span>\r\n                  <span>Death Date: {  deathDate > 0 ? new Date(deathDate * 1000).toISOString().slice(0, 10) : '' }</span>\r\n                  <span>Faction: { faction }</span>\r\n                  <span>Twitter: { twitter !== '' ? (\r\n                    <a href={ twitter ? `https://twitter.com/${twitter.replace('@', '')}` : ''} target=\"_blank\" rel=\"noopener noreferrer\">{twitter}</a>\r\n                  ) : ('') }</span>\r\n                  {\r\n                    storyState.ownerOf && ethers.utils.getAddress(storyState.ownerOf) === ethers.utils.getAddress(accountAddress) ? (\r\n                      <button \r\n                        className=\"skull-button edit-button\"\r\n                        onClick={ () => {\r\n                          setEditorStory( {\r\n                            ...editorStory,\r\n                            display: true\r\n                          })\r\n                        }}\r\n                      >\r\n                        Edit Story\r\n                      </button> \r\n                    ) : (\r\n                      <span>\r\n                        Owner: { storyState.ownerOf ? `${storyState.ownerOf.substr(0, 5)}...${storyState.ownerOf.substr(38, 41)}` : '' }\r\n                      </span>\r\n                    )\r\n                  }\r\n                  \r\n                </div>\r\n              <div className=\"metadata\">\r\n                <div\r\n                    className=\"close-icon\"\r\n                    onClick={ () => {\r\n                      setStoryState({\r\n                        ...storyState,\r\n                        display: false\r\n                      })\r\n                    }}\r\n                  >\r\n                  Close\r\n                </div>\r\n                <h2>{ name }</h2>\r\n                <span>Hobby: { hobby }</span>\r\n                <div \r\n                  className=\"description\"\r\n                  dangerouslySetInnerHTML={{ __html: description }\r\n                }\r\n                >\r\n                </div>\r\n              </div>\r\n            </div>\r\n            ) }\r\n        </div>\r\n      ) : ('')}\r\n  </>\r\n  )}\r\n\r\n\r\n\r\nexport default Story;\r\n"]},"metadata":{},"sourceType":"module"}