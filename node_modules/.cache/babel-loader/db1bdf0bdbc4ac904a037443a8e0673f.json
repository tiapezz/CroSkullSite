{"ast":null,"code":"import _defineProperty from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  loading: false,\n  //croskull\n  croSkullsContractOwner: null,\n  croSkulls: [],\n  croSkullsCount: 0,\n  croSkullsMaxSupply: 0,\n  advancedMetadata: [],\n  rarities: [],\n  //grave\n  userGraveBalance: 0,\n  //soul\n  soulsBalance: 0,\n  //staking\n  approval: false,\n  alreadyClaimed: 0,\n  blockTimestamp: false,\n  cyclesLastWithdraw: 0,\n  croSkullsStaked: [],\n  lastBlock: false,\n  malusFee: 0,\n  daysLastWithdraw: 0,\n  owner: \"\",\n  rewards: 0,\n  rewardPlusMalus: 0,\n  soulsGenerated: 0,\n  startStakeTimestamp: 0,\n  stakingStarted: false,\n  totalSkullsStaked: 0,\n  totalWithdrawedGraves: 0,\n  totalWithdrawedSouls: 0,\n  lastWithdrawTimestamp: 0,\n  //pets\n  petEggsLimit: 0,\n  petEggsMintedByUser: 0,\n  petEggsSupply: 0,\n  petEggsMaxSupply: 0,\n  petEggsCost: 0,\n  approvedEggs: false,\n  //blue potion\n  blueCount: 0,\n  //red potion\n  redCount: 0,\n  //stories\n  storyAllowance: false,\n  skullsStories: [],\n  //notifier\n  title: \"\",\n  message: \"\",\n  type: \"info\",\n  // success, danger, info, warning\n  tx: \"\",\n  error: false,\n  errorMsg: \"\"\n};\n\nvar dataReducer = function dataReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var payload = action.payload;\n\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return _objectSpread({}, state, {\n        loading: true,\n        error: false,\n        errorMsg: \"\"\n      });\n\n    case \"CHECK_DATA_SUCCESS\":\n      return _objectSpread({}, state, {\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\"\n      });\n\n    case \"SET_STORY_ALLOWANCE\":\n      {\n        return _objectSpread({}, state, {\n          loading: false,\n          storyAllowance: payload.storyAllowance\n        });\n      }\n\n    case \"CHECK_DATA_FAILED\":\n      return _objectSpread({}, initialState, {\n        loading: false,\n        error: true,\n        errorMsg: action.payload\n      });\n\n    case \"SKULLS_REQUEST\":\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case \"SKULLS_SUCCESS\":\n      return _objectSpread({}, state, {\n        loading: false,\n        croSkulls: payload.croSkulls,\n        croSkullsStaked: payload.croSkullsStaked,\n        advancedMetadata: payload.advancedMetadata\n      });\n\n    case \"FETCH_STAKING_SUCCESS\":\n      return _objectSpread({}, state, {\n        loading: false,\n        approval: true,\n        stakingStarted: true,\n        owner: payload.owner,\n        malusFee: payload.malusFee,\n        rewardPlusMalus: payload.rewardPlusMalus,\n        rewards: payload.rewards,\n        startStakeTimestamp: payload.startStakeTimestamp,\n        cyclesLastWithdraw: payload.cyclesLastWithdraw,\n        lastBlock: payload.lastBlock,\n        blockTimestamp: payload.blockTimestamp,\n        alreadyClaimed: payload.alreadyClaimed,\n        soulsGenerated: payload.soulsGenerated,\n        rarityIndex: payload.rarityIndex,\n        rarities: payload.rarities,\n        totalSkullsStaked: payload.totalSkullsStaked,\n        totalWithdrawedGraves: payload.totalWithdrawedGraves,\n        totalWithdrawedSouls: payload.totalWithdrawedSouls,\n        lastWithdrawTimestamp: payload.lastWithdrawTimestamp,\n        soulsBalance: payload.soulsBalance,\n        daysLastWithdraw: payload.daysLastWithdraw,\n        burnedGraves: payload.burnedGraves\n      });\n\n    case \"UPDATE_STATE\":\n      console.log(payload);\n      return _objectSpread({}, state, _defineProperty({}, payload.key, payload.value));\n\n    case \"STAKING_DISABLED\":\n      return _objectSpread({}, state, {\n        loading: false,\n        approval: false,\n        stakingStarted: false\n      });\n\n    case \"NOTIFICATION_REQUEST\":\n      return _objectSpread({}, state, {\n        message: payload.message,\n        title: payload.title,\n        tx: payload.tx,\n        type: payload.type\n      });\n\n    case \"SET_SKULLS_STORIES\":\n      return _objectSpread({}, state, {\n        skullsStories: payload.skullsStories\n      });\n\n    case \"SET_POTIONS\":\n      return _objectSpread({}, state, {\n        redCount: payload.redCount,\n        blueCount: payload.blueCount\n      });\n\n    case \"CLEAN_DATA\":\n      return {\n        loading: false,\n        croSkullsContractOwner: null,\n        croSkulls: [],\n        croSkullsStaked: [],\n        croSkullsCount: 0,\n        croSkullsMaxSupply: 0,\n        approval: false,\n        stakingStarted: false,\n        startStakeTimestamp: 0,\n        lastBlock: false,\n        blockTimestamp: false,\n        alreadyClaimed: 0,\n        owner: \"\",\n        malusFee: 0,\n        rewardPlusMalus: 0,\n        rewards: 0,\n        cyclesLastWithdraw: 0,\n        soulsGenerated: 0,\n        userGraveBalance: 0,\n        rarities: [],\n        title: \"\",\n        message: \"\",\n        type: \"info\",\n        // success, danger, info, warning\n        tx: \"\",\n        skullsStories: [],\n        error: false,\n        errorMsg: \"\",\n        petEggsLimit: 0,\n        petEggsMintedByUser: 0,\n        petEggsSupply: 0,\n        petEggsMaxSupply: 0,\n        petEggsCost: 0,\n        approvedEggs: false,\n        totalSkullsStaked: 0,\n        totalWithdrawedGraves: 0,\n        totalWithdrawedSouls: 0,\n        lastWithdrawTimestamp: 0,\n        soulsBalance: 0,\n        redCount: 0,\n        blueCount: 0,\n        storyAllowance: false,\n        daysLastWithdraw: 0\n      };\n\n    case \"UPDATE_MERCHANT\":\n      return _objectSpread({}, state, {\n        petEggsLimit: payload.petEggsLimit,\n        petEggsMintedByUser: payload.petEggsMintedByUser,\n        petEggsSupply: payload.petEggsSupply,\n        petEggsMaxSupply: payload.petEggsMaxSupply,\n        petEggsCost: payload.petEggsCost,\n        approvedEggs: payload.approvedEggs,\n        userGraveBalance: payload.userGraveBalance\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;","map":{"version":3,"sources":["F:/Mattia/Visual studio/AppCroskull/croskull-nft-marketplace/src/redux/data/dataReducer.js"],"names":["initialState","loading","croSkullsContractOwner","croSkulls","croSkullsCount","croSkullsMaxSupply","advancedMetadata","rarities","userGraveBalance","soulsBalance","approval","alreadyClaimed","blockTimestamp","cyclesLastWithdraw","croSkullsStaked","lastBlock","malusFee","daysLastWithdraw","owner","rewards","rewardPlusMalus","soulsGenerated","startStakeTimestamp","stakingStarted","totalSkullsStaked","totalWithdrawedGraves","totalWithdrawedSouls","lastWithdrawTimestamp","petEggsLimit","petEggsMintedByUser","petEggsSupply","petEggsMaxSupply","petEggsCost","approvedEggs","blueCount","redCount","storyAllowance","skullsStories","title","message","type","tx","error","errorMsg","dataReducer","state","action","payload","totalSupply","rarityIndex","burnedGraves","console","log","key","value"],"mappings":"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","sourcesContent":["const initialState = {\r\n    loading: false,\r\n    //croskull\r\n    croSkullsContractOwner: null,\r\n    croSkulls: [],\r\n    croSkullsCount: 0,\r\n    croSkullsMaxSupply: 0,\r\n    advancedMetadata: [],\r\n    rarities: [],\r\n    //grave\r\n    userGraveBalance: 0,\r\n    //soul\r\n    soulsBalance: 0,\r\n    //staking\r\n    approval: false,\r\n    alreadyClaimed: 0,\r\n    blockTimestamp: false,\r\n    cyclesLastWithdraw: 0,\r\n    croSkullsStaked: [],\r\n    lastBlock: false,\r\n    malusFee: 0,\r\n    daysLastWithdraw: 0,\r\n    owner: \"\",\r\n    rewards: 0,\r\n    rewardPlusMalus: 0,\r\n    soulsGenerated: 0,\r\n    startStakeTimestamp: 0,\r\n    stakingStarted: false,\r\n    totalSkullsStaked: 0,\r\n    totalWithdrawedGraves: 0,\r\n    totalWithdrawedSouls: 0,\r\n    lastWithdrawTimestamp: 0,\r\n    //pets\r\n    petEggsLimit: 0,\r\n    petEggsMintedByUser: 0,\r\n    petEggsSupply: 0,\r\n    petEggsMaxSupply: 0,\r\n    petEggsCost: 0,\r\n    approvedEggs: false,\r\n    //blue potion\r\n    blueCount: 0,\r\n    //red potion\r\n    redCount: 0,\r\n    //stories\r\n    storyAllowance: false,\r\n    skullsStories: [],\r\n    //notifier\r\n    title: \"\",\r\n    message: \"\",\r\n    type: \"info\", // success, danger, info, warning\r\n    tx: \"\",\r\n    error: false,\r\n    errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n    let payload = action.payload\r\n    switch (action.type) {\r\n        case \"CHECK_DATA_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: false,\r\n                errorMsg: \"\",\r\n            };\r\n        case \"CHECK_DATA_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                totalSupply: action.payload.totalSupply,\r\n                // cost: action.payload.cost,\r\n                error: false,\r\n                errorMsg: \"\",\r\n            };\r\n        case \"SET_STORY_ALLOWANCE\": {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                storyAllowance: payload.storyAllowance\r\n            }\r\n        }\r\n        case \"CHECK_DATA_FAILED\":\r\n            return {\r\n                ...initialState,\r\n                loading: false,\r\n                error: true,\r\n                errorMsg: action.payload,\r\n            };\r\n        case \"SKULLS_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case \"SKULLS_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                croSkulls: payload.croSkulls,\r\n                croSkullsStaked: payload.croSkullsStaked,\r\n                advancedMetadata: payload.advancedMetadata\r\n            }\r\n        case \"FETCH_STAKING_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                approval: true,\r\n                stakingStarted: true,\r\n                owner: payload.owner,\r\n                malusFee: payload.malusFee,\r\n                rewardPlusMalus: payload.rewardPlusMalus,\r\n                rewards: payload.rewards,\r\n                startStakeTimestamp: payload.startStakeTimestamp,\r\n                cyclesLastWithdraw: payload.cyclesLastWithdraw,\r\n                lastBlock: payload.lastBlock,\r\n                blockTimestamp: payload.blockTimestamp,\r\n                alreadyClaimed: payload.alreadyClaimed,\r\n                soulsGenerated: payload.soulsGenerated,\r\n                rarityIndex: payload.rarityIndex,\r\n                rarities: payload.rarities,\r\n                totalSkullsStaked: payload.totalSkullsStaked,\r\n                totalWithdrawedGraves: payload.totalWithdrawedGraves,\r\n                totalWithdrawedSouls: payload.totalWithdrawedSouls,\r\n                lastWithdrawTimestamp: payload.lastWithdrawTimestamp,\r\n                soulsBalance: payload.soulsBalance,\r\n                daysLastWithdraw: payload.daysLastWithdraw,\r\n                burnedGraves: payload.burnedGraves\r\n            }\r\n        case \"UPDATE_STATE\":\r\n            console.log( payload )\r\n            return {\r\n                ...state,\r\n                [payload.key]: payload.value\r\n            }\r\n        case \"STAKING_DISABLED\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                approval: false,\r\n                stakingStarted: false\r\n            }\r\n        case \"NOTIFICATION_REQUEST\":\r\n            return {\r\n                ...state,\r\n                message: payload.message,\r\n                title: payload.title,\r\n                tx: payload.tx,\r\n                type: payload.type\r\n            }\r\n        case \"SET_SKULLS_STORIES\":\r\n            return {\r\n                ...state,\r\n                skullsStories: payload.skullsStories\r\n            }\r\n        case \"SET_POTIONS\":\r\n            return {\r\n                ...state,\r\n                redCount: payload.redCount,\r\n                blueCount: payload.blueCount\r\n            }\r\n        case \"CLEAN_DATA\":\r\n            return {\r\n                loading: false,\r\n                croSkullsContractOwner: null,\r\n                croSkulls: [],\r\n                croSkullsStaked: [],\r\n                croSkullsCount: 0,\r\n                croSkullsMaxSupply: 0,\r\n                approval: false,\r\n                stakingStarted: false,\r\n                startStakeTimestamp: 0,\r\n                lastBlock: false,\r\n                blockTimestamp: false,\r\n                alreadyClaimed: 0,\r\n                owner: \"\",\r\n                malusFee: 0,\r\n                rewardPlusMalus: 0,\r\n                rewards: 0,\r\n                cyclesLastWithdraw: 0,\r\n                soulsGenerated: 0,\r\n                userGraveBalance: 0,\r\n                rarities: [],\r\n                title: \"\",\r\n                message: \"\",\r\n                type: \"info\", // success, danger, info, warning\r\n                tx: \"\",\r\n                skullsStories: [],\r\n                error: false,\r\n                errorMsg: \"\",\r\n                petEggsLimit: 0,\r\n                petEggsMintedByUser: 0,\r\n                petEggsSupply: 0,\r\n                petEggsMaxSupply: 0,\r\n                petEggsCost: 0,\r\n                approvedEggs: false,\r\n                totalSkullsStaked: 0,\r\n                totalWithdrawedGraves: 0,\r\n                totalWithdrawedSouls: 0,\r\n                lastWithdrawTimestamp: 0,\r\n                soulsBalance: 0,\r\n                redCount: 0,\r\n                blueCount: 0,\r\n                storyAllowance: false,\r\n                daysLastWithdraw: 0\r\n            }\r\n        case \"UPDATE_MERCHANT\":\r\n            return {\r\n                ...state,\r\n                petEggsLimit: payload.petEggsLimit,\r\n                petEggsMintedByUser: payload.petEggsMintedByUser,\r\n                petEggsSupply: payload.petEggsSupply,\r\n                petEggsMaxSupply: payload.petEggsMaxSupply, \r\n                petEggsCost: payload.petEggsCost,\r\n                approvedEggs: payload.approvedEggs,\r\n                userGraveBalance: payload.userGraveBalance,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default dataReducer;"]},"metadata":{},"sourceType":"module"}