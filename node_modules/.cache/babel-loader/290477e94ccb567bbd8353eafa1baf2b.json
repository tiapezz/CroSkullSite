{"ast":null,"code":"\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SimpleValidator = exports.Validator = exports.ValidatorSet = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nvar long_1 = __importDefault(require(\"long\"));\n\nvar minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nvar keys_1 = require(\"../../tendermint/crypto/keys\");\n\nexports.protobufPackage = \"tendermint.types\";\nvar baseValidatorSet = {\n  totalVotingPower: long_1.default.ZERO\n};\nexports.ValidatorSet = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    var _iterator = _createForOfIteratorHelper(message.validators),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        exports.Validator.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    if (message.proposer !== undefined) {\n      exports.Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (!message.totalVotingPower.isZero()) {\n      writer.uint32(24).int64(message.totalVotingPower);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseValidatorSet);\n    message.validators = [];\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.validators.push(exports.Validator.decode(reader, reader.uint32()));\n          break;\n\n        case 2:\n          message.proposer = exports.Validator.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.totalVotingPower = reader.int64();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseValidatorSet);\n    message.validators = [];\n\n    if (object.validators !== undefined && object.validators !== null) {\n      var _iterator2 = _createForOfIteratorHelper(object.validators),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var e = _step2.value;\n          message.validators.push(exports.Validator.fromJSON(e));\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n\n    if (object.proposer !== undefined && object.proposer !== null) {\n      message.proposer = exports.Validator.fromJSON(object.proposer);\n    } else {\n      message.proposer = undefined;\n    }\n\n    if (object.totalVotingPower !== undefined && object.totalVotingPower !== null) {\n      message.totalVotingPower = long_1.default.fromString(object.totalVotingPower);\n    } else {\n      message.totalVotingPower = long_1.default.ZERO;\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n\n    if (message.validators) {\n      obj.validators = message.validators.map(function (e) {\n        return e ? exports.Validator.toJSON(e) : undefined;\n      });\n    } else {\n      obj.validators = [];\n    }\n\n    message.proposer !== undefined && (obj.proposer = message.proposer ? exports.Validator.toJSON(message.proposer) : undefined);\n    message.totalVotingPower !== undefined && (obj.totalVotingPower = (message.totalVotingPower || long_1.default.ZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseValidatorSet);\n    message.validators = [];\n\n    if (object.validators !== undefined && object.validators !== null) {\n      var _iterator3 = _createForOfIteratorHelper(object.validators),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var e = _step3.value;\n          message.validators.push(exports.Validator.fromPartial(e));\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n\n    if (object.proposer !== undefined && object.proposer !== null) {\n      message.proposer = exports.Validator.fromPartial(object.proposer);\n    } else {\n      message.proposer = undefined;\n    }\n\n    if (object.totalVotingPower !== undefined && object.totalVotingPower !== null) {\n      message.totalVotingPower = object.totalVotingPower;\n    } else {\n      message.totalVotingPower = long_1.default.ZERO;\n    }\n\n    return message;\n  }\n};\nvar baseValidator = {\n  votingPower: long_1.default.ZERO,\n  proposerPriority: long_1.default.ZERO\n};\nexports.Validator = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.address.length !== 0) {\n      writer.uint32(10).bytes(message.address);\n    }\n\n    if (message.pubKey !== undefined) {\n      keys_1.PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (!message.votingPower.isZero()) {\n      writer.uint32(24).int64(message.votingPower);\n    }\n\n    if (!message.proposerPriority.isZero()) {\n      writer.uint32(32).int64(message.proposerPriority);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseValidator);\n    message.address = new Uint8Array();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.address = reader.bytes();\n          break;\n\n        case 2:\n          message.pubKey = keys_1.PublicKey.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.votingPower = reader.int64();\n          break;\n\n        case 4:\n          message.proposerPriority = reader.int64();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseValidator);\n    message.address = new Uint8Array();\n\n    if (object.address !== undefined && object.address !== null) {\n      message.address = bytesFromBase64(object.address);\n    }\n\n    if (object.pubKey !== undefined && object.pubKey !== null) {\n      message.pubKey = keys_1.PublicKey.fromJSON(object.pubKey);\n    } else {\n      message.pubKey = undefined;\n    }\n\n    if (object.votingPower !== undefined && object.votingPower !== null) {\n      message.votingPower = long_1.default.fromString(object.votingPower);\n    } else {\n      message.votingPower = long_1.default.ZERO;\n    }\n\n    if (object.proposerPriority !== undefined && object.proposerPriority !== null) {\n      message.proposerPriority = long_1.default.fromString(object.proposerPriority);\n    } else {\n      message.proposerPriority = long_1.default.ZERO;\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.address !== undefined && (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n    message.pubKey !== undefined && (obj.pubKey = message.pubKey ? keys_1.PublicKey.toJSON(message.pubKey) : undefined);\n    message.votingPower !== undefined && (obj.votingPower = (message.votingPower || long_1.default.ZERO).toString());\n    message.proposerPriority !== undefined && (obj.proposerPriority = (message.proposerPriority || long_1.default.ZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n\n    var message = Object.assign({}, baseValidator);\n    message.address = (_a = object.address) !== null && _a !== void 0 ? _a : new Uint8Array();\n\n    if (object.pubKey !== undefined && object.pubKey !== null) {\n      message.pubKey = keys_1.PublicKey.fromPartial(object.pubKey);\n    } else {\n      message.pubKey = undefined;\n    }\n\n    if (object.votingPower !== undefined && object.votingPower !== null) {\n      message.votingPower = object.votingPower;\n    } else {\n      message.votingPower = long_1.default.ZERO;\n    }\n\n    if (object.proposerPriority !== undefined && object.proposerPriority !== null) {\n      message.proposerPriority = object.proposerPriority;\n    } else {\n      message.proposerPriority = long_1.default.ZERO;\n    }\n\n    return message;\n  }\n};\nvar baseSimpleValidator = {\n  votingPower: long_1.default.ZERO\n};\nexports.SimpleValidator = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.pubKey !== undefined) {\n      keys_1.PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (!message.votingPower.isZero()) {\n      writer.uint32(16).int64(message.votingPower);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseSimpleValidator);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.pubKey = keys_1.PublicKey.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.votingPower = reader.int64();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseSimpleValidator);\n\n    if (object.pubKey !== undefined && object.pubKey !== null) {\n      message.pubKey = keys_1.PublicKey.fromJSON(object.pubKey);\n    } else {\n      message.pubKey = undefined;\n    }\n\n    if (object.votingPower !== undefined && object.votingPower !== null) {\n      message.votingPower = long_1.default.fromString(object.votingPower);\n    } else {\n      message.votingPower = long_1.default.ZERO;\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.pubKey !== undefined && (obj.pubKey = message.pubKey ? keys_1.PublicKey.toJSON(message.pubKey) : undefined);\n    message.votingPower !== undefined && (obj.votingPower = (message.votingPower || long_1.default.ZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseSimpleValidator);\n\n    if (object.pubKey !== undefined && object.pubKey !== null) {\n      message.pubKey = keys_1.PublicKey.fromPartial(object.pubKey);\n    } else {\n      message.pubKey = undefined;\n    }\n\n    if (object.votingPower !== undefined && object.votingPower !== null) {\n      message.votingPower = object.votingPower;\n    } else {\n      message.votingPower = long_1.default.ZERO;\n    }\n\n    return message;\n  }\n};\n\nvar globalThis = function () {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n}();\n\nvar atob = globalThis.atob || function (b64) {\n  return globalThis.Buffer.from(b64, \"base64\").toString(\"binary\");\n};\n\nfunction bytesFromBase64(b64) {\n  var bin = atob(b64);\n  var arr = new Uint8Array(bin.length);\n\n  for (var i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return arr;\n}\n\nvar btoa = globalThis.btoa || function (bin) {\n  return globalThis.Buffer.from(bin, \"binary\").toString(\"base64\");\n};\n\nfunction base64FromBytes(arr) {\n  var bin = [];\n\n  var _iterator4 = _createForOfIteratorHelper(arr),\n      _step4;\n\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var byte = _step4.value;\n      bin.push(String.fromCharCode(byte));\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n\n  return btoa(bin.join(\"\"));\n}\n\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":null,"metadata":{},"sourceType":"script"}