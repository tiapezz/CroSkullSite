{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"F:\\\\Mattia\\\\Visual studio\\\\ProjectCroSkull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread\");\n\nvar _objectWithoutProperties = require(\"F:\\\\Mattia\\\\Visual studio\\\\ProjectCroSkull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectWithoutProperties\");\n\nvar modeToString = require('./mode-to-string');\n\nvar _require = require('ipfs-core-utils/src/files/normalise-input/utils'),\n    mtimeToObject = _require.mtimeToObject;\n/**\n * @param {*} params\n * @returns {URLSearchParams}\n */\n\n\nmodule.exports = function () {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      arg = _ref.arg,\n      searchParams = _ref.searchParams,\n      hashAlg = _ref.hashAlg,\n      mtime = _ref.mtime,\n      mode = _ref.mode,\n      options = _objectWithoutProperties(_ref, [\"arg\", \"searchParams\", \"hashAlg\", \"mtime\", \"mode\"]);\n\n  if (searchParams) {\n    options = _objectSpread({}, options, searchParams);\n  }\n\n  if (hashAlg) {\n    options.hash = hashAlg;\n  }\n\n  if (mtime != null) {\n    mtime = mtimeToObject(mtime);\n    options.mtime = mtime.secs;\n    options.mtimeNsecs = mtime.nsecs;\n  }\n\n  if (mode != null) {\n    options.mode = modeToString(mode);\n  }\n\n  if (options.timeout && !isNaN(options.timeout)) {\n    // server API expects timeouts as strings\n    options.timeout = \"\".concat(options.timeout, \"ms\");\n  }\n\n  if (arg === undefined || arg === null) {\n    arg = [];\n  } else if (!Array.isArray(arg)) {\n    arg = [arg];\n  }\n\n  var urlSearchParams = new URLSearchParams(options);\n  arg.forEach(function (arg) {\n    return urlSearchParams.append('arg', arg);\n  });\n  return urlSearchParams;\n};","map":null,"metadata":{},"sourceType":"script"}