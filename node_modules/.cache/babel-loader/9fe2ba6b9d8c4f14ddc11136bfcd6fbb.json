{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Params = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\n\nvar encoding_1 = require(\"@cosmjs/encoding\");\n\nvar jsonrpc_1 = require(\"../../jsonrpc\");\n\nvar encodings_1 = require(\"../encodings\");\n\nvar requests = __importStar(require(\"../requests\"));\n\nfunction encodeHeightParam(param) {\n  return {\n    height: encodings_1.may(encodings_1.Integer.encode, param.height)\n  };\n}\n\nfunction encodeBlockchainRequestParams(param) {\n  return {\n    minHeight: encodings_1.may(encodings_1.Integer.encode, param.minHeight),\n    maxHeight: encodings_1.may(encodings_1.Integer.encode, param.maxHeight)\n  };\n}\n\nfunction encodeAbciQueryParams(params) {\n  return {\n    path: encodings_1.assertNotEmpty(params.path),\n    data: encoding_1.toHex(params.data),\n    height: encodings_1.may(encodings_1.Integer.encode, params.height),\n    prove: params.prove\n  };\n}\n\nfunction encodeBroadcastTxParams(params) {\n  return {\n    tx: encoding_1.toBase64(encodings_1.assertNotEmpty(params.tx))\n  };\n}\n\nfunction encodeTxParams(params) {\n  return {\n    hash: encoding_1.toBase64(encodings_1.assertNotEmpty(params.hash)),\n    prove: params.prove\n  };\n}\n\nfunction encodeTxSearchParams(params) {\n  return {\n    query: params.query,\n    prove: params.prove,\n    page: encodings_1.may(encodings_1.Integer.encode, params.page),\n    per_page: encodings_1.may(encodings_1.Integer.encode, params.per_page),\n    order_by: params.order_by\n  };\n}\n\nfunction encodeValidatorsParams(params) {\n  return {\n    height: encodings_1.may(encodings_1.Integer.encode, params.height),\n    page: encodings_1.may(encodings_1.Integer.encode, params.page),\n    per_page: encodings_1.may(encodings_1.Integer.encode, params.per_page)\n  };\n}\n\nvar Params = /*#__PURE__*/function () {\n  function Params() {\n    _classCallCheck(this, Params);\n  }\n\n  _createClass(Params, null, [{\n    key: \"encodeAbciInfo\",\n    value: function encodeAbciInfo(req) {\n      return jsonrpc_1.createJsonRpcRequest(req.method);\n    }\n  }, {\n    key: \"encodeAbciQuery\",\n    value: function encodeAbciQuery(req) {\n      return jsonrpc_1.createJsonRpcRequest(req.method, encodeAbciQueryParams(req.params));\n    }\n  }, {\n    key: \"encodeBlock\",\n    value: function encodeBlock(req) {\n      return jsonrpc_1.createJsonRpcRequest(req.method, encodeHeightParam(req.params));\n    }\n  }, {\n    key: \"encodeBlockchain\",\n    value: function encodeBlockchain(req) {\n      return jsonrpc_1.createJsonRpcRequest(req.method, encodeBlockchainRequestParams(req.params));\n    }\n  }, {\n    key: \"encodeBlockResults\",\n    value: function encodeBlockResults(req) {\n      return jsonrpc_1.createJsonRpcRequest(req.method, encodeHeightParam(req.params));\n    }\n  }, {\n    key: \"encodeBroadcastTx\",\n    value: function encodeBroadcastTx(req) {\n      return jsonrpc_1.createJsonRpcRequest(req.method, encodeBroadcastTxParams(req.params));\n    }\n  }, {\n    key: \"encodeCommit\",\n    value: function encodeCommit(req) {\n      return jsonrpc_1.createJsonRpcRequest(req.method, encodeHeightParam(req.params));\n    }\n  }, {\n    key: \"encodeGenesis\",\n    value: function encodeGenesis(req) {\n      return jsonrpc_1.createJsonRpcRequest(req.method);\n    }\n  }, {\n    key: \"encodeHealth\",\n    value: function encodeHealth(req) {\n      return jsonrpc_1.createJsonRpcRequest(req.method);\n    }\n  }, {\n    key: \"encodeStatus\",\n    value: function encodeStatus(req) {\n      return jsonrpc_1.createJsonRpcRequest(req.method);\n    }\n  }, {\n    key: \"encodeSubscribe\",\n    value: function encodeSubscribe(req) {\n      var eventTag = {\n        key: \"tm.event\",\n        value: req.query.type\n      };\n      var query = requests.buildQuery({\n        tags: [eventTag],\n        raw: req.query.raw\n      });\n      return jsonrpc_1.createJsonRpcRequest(\"subscribe\", {\n        query: query\n      });\n    }\n  }, {\n    key: \"encodeTx\",\n    value: function encodeTx(req) {\n      return jsonrpc_1.createJsonRpcRequest(req.method, encodeTxParams(req.params));\n    } // TODO: encode params for query string???\n\n  }, {\n    key: \"encodeTxSearch\",\n    value: function encodeTxSearch(req) {\n      return jsonrpc_1.createJsonRpcRequest(req.method, encodeTxSearchParams(req.params));\n    }\n  }, {\n    key: \"encodeValidators\",\n    value: function encodeValidators(req) {\n      return jsonrpc_1.createJsonRpcRequest(req.method, encodeValidatorsParams(req.params));\n    }\n  }]);\n\n  return Params;\n}();\n\nexports.Params = Params;","map":null,"metadata":{},"sourceType":"script"}