{"ast":null,"code":"\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TallyParams = exports.VotingParams = exports.DepositParams = exports.Vote = exports.TallyResult = exports.Proposal = exports.Deposit = exports.TextProposal = exports.proposalStatusToJSON = exports.proposalStatusFromJSON = exports.ProposalStatus = exports.voteOptionToJSON = exports.voteOptionFromJSON = exports.VoteOption = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nvar long_1 = __importDefault(require(\"long\"));\n\nvar minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nvar any_1 = require(\"../../../google/protobuf/any\");\n\nvar duration_1 = require(\"../../../google/protobuf/duration\");\n\nvar timestamp_1 = require(\"../../../google/protobuf/timestamp\");\n\nvar coin_1 = require(\"../../../cosmos/base/v1beta1/coin\");\n\nexports.protobufPackage = \"cosmos.gov.v1beta1\";\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\n\nvar VoteOption;\n\n(function (VoteOption) {\n  /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n  VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n  /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n\n  VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n  /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n\n  VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n  /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n\n  VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n  /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n\n  VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n  VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption = exports.VoteOption || (exports.VoteOption = {}));\n\nfunction voteOptionFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"VOTE_OPTION_UNSPECIFIED\":\n      return VoteOption.VOTE_OPTION_UNSPECIFIED;\n\n    case 1:\n    case \"VOTE_OPTION_YES\":\n      return VoteOption.VOTE_OPTION_YES;\n\n    case 2:\n    case \"VOTE_OPTION_ABSTAIN\":\n      return VoteOption.VOTE_OPTION_ABSTAIN;\n\n    case 3:\n    case \"VOTE_OPTION_NO\":\n      return VoteOption.VOTE_OPTION_NO;\n\n    case 4:\n    case \"VOTE_OPTION_NO_WITH_VETO\":\n      return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return VoteOption.UNRECOGNIZED;\n  }\n}\n\nexports.voteOptionFromJSON = voteOptionFromJSON;\n\nfunction voteOptionToJSON(object) {\n  switch (object) {\n    case VoteOption.VOTE_OPTION_UNSPECIFIED:\n      return \"VOTE_OPTION_UNSPECIFIED\";\n\n    case VoteOption.VOTE_OPTION_YES:\n      return \"VOTE_OPTION_YES\";\n\n    case VoteOption.VOTE_OPTION_ABSTAIN:\n      return \"VOTE_OPTION_ABSTAIN\";\n\n    case VoteOption.VOTE_OPTION_NO:\n      return \"VOTE_OPTION_NO\";\n\n    case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n      return \"VOTE_OPTION_NO_WITH_VETO\";\n\n    default:\n      return \"UNKNOWN\";\n  }\n}\n\nexports.voteOptionToJSON = voteOptionToJSON;\n/** ProposalStatus enumerates the valid statuses of a proposal. */\n\nvar ProposalStatus;\n\n(function (ProposalStatus) {\n  /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n  ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n  /**\n   * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n   * period.\n   */\n\n  ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n  /**\n   * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n   * period.\n   */\n\n  ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n  /**\n   * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n   * passed.\n   */\n\n  ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n  /**\n   * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n   * been rejected.\n   */\n\n  ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n  /**\n   * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n   * failed.\n   */\n\n  ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n  ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus = exports.ProposalStatus || (exports.ProposalStatus = {}));\n\nfunction proposalStatusFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"PROPOSAL_STATUS_UNSPECIFIED\":\n      return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n\n    case 1:\n    case \"PROPOSAL_STATUS_DEPOSIT_PERIOD\":\n      return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n\n    case 2:\n    case \"PROPOSAL_STATUS_VOTING_PERIOD\":\n      return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n\n    case 3:\n    case \"PROPOSAL_STATUS_PASSED\":\n      return ProposalStatus.PROPOSAL_STATUS_PASSED;\n\n    case 4:\n    case \"PROPOSAL_STATUS_REJECTED\":\n      return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n\n    case 5:\n    case \"PROPOSAL_STATUS_FAILED\":\n      return ProposalStatus.PROPOSAL_STATUS_FAILED;\n\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return ProposalStatus.UNRECOGNIZED;\n  }\n}\n\nexports.proposalStatusFromJSON = proposalStatusFromJSON;\n\nfunction proposalStatusToJSON(object) {\n  switch (object) {\n    case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n      return \"PROPOSAL_STATUS_UNSPECIFIED\";\n\n    case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n      return \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n\n    case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n      return \"PROPOSAL_STATUS_VOTING_PERIOD\";\n\n    case ProposalStatus.PROPOSAL_STATUS_PASSED:\n      return \"PROPOSAL_STATUS_PASSED\";\n\n    case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n      return \"PROPOSAL_STATUS_REJECTED\";\n\n    case ProposalStatus.PROPOSAL_STATUS_FAILED:\n      return \"PROPOSAL_STATUS_FAILED\";\n\n    default:\n      return \"UNKNOWN\";\n  }\n}\n\nexports.proposalStatusToJSON = proposalStatusToJSON;\nvar baseTextProposal = {\n  title: \"\",\n  description: \"\"\n};\nexports.TextProposal = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.title !== \"\") {\n      writer.uint32(10).string(message.title);\n    }\n\n    if (message.description !== \"\") {\n      writer.uint32(18).string(message.description);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseTextProposal);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.title = reader.string();\n          break;\n\n        case 2:\n          message.description = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseTextProposal);\n\n    if (object.title !== undefined && object.title !== null) {\n      message.title = String(object.title);\n    } else {\n      message.title = \"\";\n    }\n\n    if (object.description !== undefined && object.description !== null) {\n      message.description = String(object.description);\n    } else {\n      message.description = \"\";\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.title !== undefined && (obj.title = message.title);\n    message.description !== undefined && (obj.description = message.description);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n\n    var message = Object.assign({}, baseTextProposal);\n    message.title = (_a = object.title) !== null && _a !== void 0 ? _a : \"\";\n    message.description = (_b = object.description) !== null && _b !== void 0 ? _b : \"\";\n    return message;\n  }\n};\nvar baseDeposit = {\n  proposalId: long_1.default.UZERO,\n  depositor: \"\"\n};\nexports.Deposit = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (!message.proposalId.isZero()) {\n      writer.uint32(8).uint64(message.proposalId);\n    }\n\n    if (message.depositor !== \"\") {\n      writer.uint32(18).string(message.depositor);\n    }\n\n    var _iterator = _createForOfIteratorHelper(message.amount),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseDeposit);\n    message.amount = [];\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.proposalId = reader.uint64();\n          break;\n\n        case 2:\n          message.depositor = reader.string();\n          break;\n\n        case 3:\n          message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseDeposit);\n    message.amount = [];\n\n    if (object.proposalId !== undefined && object.proposalId !== null) {\n      message.proposalId = long_1.default.fromString(object.proposalId);\n    } else {\n      message.proposalId = long_1.default.UZERO;\n    }\n\n    if (object.depositor !== undefined && object.depositor !== null) {\n      message.depositor = String(object.depositor);\n    } else {\n      message.depositor = \"\";\n    }\n\n    if (object.amount !== undefined && object.amount !== null) {\n      var _iterator2 = _createForOfIteratorHelper(object.amount),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var e = _step2.value;\n          message.amount.push(coin_1.Coin.fromJSON(e));\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.proposalId !== undefined && (obj.proposalId = (message.proposalId || long_1.default.UZERO).toString());\n    message.depositor !== undefined && (obj.depositor = message.depositor);\n\n    if (message.amount) {\n      obj.amount = message.amount.map(function (e) {\n        return e ? coin_1.Coin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.amount = [];\n    }\n\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n\n    var message = Object.assign({}, baseDeposit);\n\n    if (object.proposalId !== undefined && object.proposalId !== null) {\n      message.proposalId = object.proposalId;\n    } else {\n      message.proposalId = long_1.default.UZERO;\n    }\n\n    message.depositor = (_a = object.depositor) !== null && _a !== void 0 ? _a : \"\";\n    message.amount = [];\n\n    if (object.amount !== undefined && object.amount !== null) {\n      var _iterator3 = _createForOfIteratorHelper(object.amount),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var e = _step3.value;\n          message.amount.push(coin_1.Coin.fromPartial(e));\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n\n    return message;\n  }\n};\nvar baseProposal = {\n  proposalId: long_1.default.UZERO,\n  status: 0\n};\nexports.Proposal = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (!message.proposalId.isZero()) {\n      writer.uint32(8).uint64(message.proposalId);\n    }\n\n    if (message.content !== undefined) {\n      any_1.Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.status !== 0) {\n      writer.uint32(24).int32(message.status);\n    }\n\n    if (message.finalTallyResult !== undefined) {\n      exports.TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n    }\n\n    if (message.submitTime !== undefined) {\n      timestamp_1.Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n    }\n\n    if (message.depositEndTime !== undefined) {\n      timestamp_1.Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n    }\n\n    var _iterator4 = _createForOfIteratorHelper(message.totalDeposit),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var v = _step4.value;\n        coin_1.Coin.encode(v, writer.uint32(58).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n\n    if (message.votingStartTime !== undefined) {\n      timestamp_1.Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n    }\n\n    if (message.votingEndTime !== undefined) {\n      timestamp_1.Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseProposal);\n    message.totalDeposit = [];\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.proposalId = reader.uint64();\n          break;\n\n        case 2:\n          message.content = any_1.Any.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.status = reader.int32();\n          break;\n\n        case 4:\n          message.finalTallyResult = exports.TallyResult.decode(reader, reader.uint32());\n          break;\n\n        case 5:\n          message.submitTime = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));\n          break;\n\n        case 6:\n          message.depositEndTime = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));\n          break;\n\n        case 7:\n          message.totalDeposit.push(coin_1.Coin.decode(reader, reader.uint32()));\n          break;\n\n        case 8:\n          message.votingStartTime = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));\n          break;\n\n        case 9:\n          message.votingEndTime = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseProposal);\n    message.totalDeposit = [];\n\n    if (object.proposalId !== undefined && object.proposalId !== null) {\n      message.proposalId = long_1.default.fromString(object.proposalId);\n    } else {\n      message.proposalId = long_1.default.UZERO;\n    }\n\n    if (object.content !== undefined && object.content !== null) {\n      message.content = any_1.Any.fromJSON(object.content);\n    } else {\n      message.content = undefined;\n    }\n\n    if (object.status !== undefined && object.status !== null) {\n      message.status = proposalStatusFromJSON(object.status);\n    } else {\n      message.status = 0;\n    }\n\n    if (object.finalTallyResult !== undefined && object.finalTallyResult !== null) {\n      message.finalTallyResult = exports.TallyResult.fromJSON(object.finalTallyResult);\n    } else {\n      message.finalTallyResult = undefined;\n    }\n\n    if (object.submitTime !== undefined && object.submitTime !== null) {\n      message.submitTime = fromJsonTimestamp(object.submitTime);\n    } else {\n      message.submitTime = undefined;\n    }\n\n    if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n      message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n    } else {\n      message.depositEndTime = undefined;\n    }\n\n    if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n      var _iterator5 = _createForOfIteratorHelper(object.totalDeposit),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var e = _step5.value;\n          message.totalDeposit.push(coin_1.Coin.fromJSON(e));\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n\n    if (object.votingStartTime !== undefined && object.votingStartTime !== null) {\n      message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n    } else {\n      message.votingStartTime = undefined;\n    }\n\n    if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n      message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n    } else {\n      message.votingEndTime = undefined;\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.proposalId !== undefined && (obj.proposalId = (message.proposalId || long_1.default.UZERO).toString());\n    message.content !== undefined && (obj.content = message.content ? any_1.Any.toJSON(message.content) : undefined);\n    message.status !== undefined && (obj.status = proposalStatusToJSON(message.status));\n    message.finalTallyResult !== undefined && (obj.finalTallyResult = message.finalTallyResult ? exports.TallyResult.toJSON(message.finalTallyResult) : undefined);\n    message.submitTime !== undefined && (obj.submitTime = message.submitTime.toISOString());\n    message.depositEndTime !== undefined && (obj.depositEndTime = message.depositEndTime.toISOString());\n\n    if (message.totalDeposit) {\n      obj.totalDeposit = message.totalDeposit.map(function (e) {\n        return e ? coin_1.Coin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.totalDeposit = [];\n    }\n\n    message.votingStartTime !== undefined && (obj.votingStartTime = message.votingStartTime.toISOString());\n    message.votingEndTime !== undefined && (obj.votingEndTime = message.votingEndTime.toISOString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c, _d, _e;\n\n    var message = Object.assign({}, baseProposal);\n\n    if (object.proposalId !== undefined && object.proposalId !== null) {\n      message.proposalId = object.proposalId;\n    } else {\n      message.proposalId = long_1.default.UZERO;\n    }\n\n    if (object.content !== undefined && object.content !== null) {\n      message.content = any_1.Any.fromPartial(object.content);\n    } else {\n      message.content = undefined;\n    }\n\n    message.status = (_a = object.status) !== null && _a !== void 0 ? _a : 0;\n\n    if (object.finalTallyResult !== undefined && object.finalTallyResult !== null) {\n      message.finalTallyResult = exports.TallyResult.fromPartial(object.finalTallyResult);\n    } else {\n      message.finalTallyResult = undefined;\n    }\n\n    message.submitTime = (_b = object.submitTime) !== null && _b !== void 0 ? _b : undefined;\n    message.depositEndTime = (_c = object.depositEndTime) !== null && _c !== void 0 ? _c : undefined;\n    message.totalDeposit = [];\n\n    if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n      var _iterator6 = _createForOfIteratorHelper(object.totalDeposit),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var e = _step6.value;\n          message.totalDeposit.push(coin_1.Coin.fromPartial(e));\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n\n    message.votingStartTime = (_d = object.votingStartTime) !== null && _d !== void 0 ? _d : undefined;\n    message.votingEndTime = (_e = object.votingEndTime) !== null && _e !== void 0 ? _e : undefined;\n    return message;\n  }\n};\nvar baseTallyResult = {\n  yes: \"\",\n  abstain: \"\",\n  no: \"\",\n  noWithVeto: \"\"\n};\nexports.TallyResult = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.yes !== \"\") {\n      writer.uint32(10).string(message.yes);\n    }\n\n    if (message.abstain !== \"\") {\n      writer.uint32(18).string(message.abstain);\n    }\n\n    if (message.no !== \"\") {\n      writer.uint32(26).string(message.no);\n    }\n\n    if (message.noWithVeto !== \"\") {\n      writer.uint32(34).string(message.noWithVeto);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseTallyResult);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.yes = reader.string();\n          break;\n\n        case 2:\n          message.abstain = reader.string();\n          break;\n\n        case 3:\n          message.no = reader.string();\n          break;\n\n        case 4:\n          message.noWithVeto = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseTallyResult);\n\n    if (object.yes !== undefined && object.yes !== null) {\n      message.yes = String(object.yes);\n    } else {\n      message.yes = \"\";\n    }\n\n    if (object.abstain !== undefined && object.abstain !== null) {\n      message.abstain = String(object.abstain);\n    } else {\n      message.abstain = \"\";\n    }\n\n    if (object.no !== undefined && object.no !== null) {\n      message.no = String(object.no);\n    } else {\n      message.no = \"\";\n    }\n\n    if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n      message.noWithVeto = String(object.noWithVeto);\n    } else {\n      message.noWithVeto = \"\";\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.yes !== undefined && (obj.yes = message.yes);\n    message.abstain !== undefined && (obj.abstain = message.abstain);\n    message.no !== undefined && (obj.no = message.no);\n    message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c, _d;\n\n    var message = Object.assign({}, baseTallyResult);\n    message.yes = (_a = object.yes) !== null && _a !== void 0 ? _a : \"\";\n    message.abstain = (_b = object.abstain) !== null && _b !== void 0 ? _b : \"\";\n    message.no = (_c = object.no) !== null && _c !== void 0 ? _c : \"\";\n    message.noWithVeto = (_d = object.noWithVeto) !== null && _d !== void 0 ? _d : \"\";\n    return message;\n  }\n};\nvar baseVote = {\n  proposalId: long_1.default.UZERO,\n  voter: \"\",\n  option: 0\n};\nexports.Vote = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (!message.proposalId.isZero()) {\n      writer.uint32(8).uint64(message.proposalId);\n    }\n\n    if (message.voter !== \"\") {\n      writer.uint32(18).string(message.voter);\n    }\n\n    if (message.option !== 0) {\n      writer.uint32(24).int32(message.option);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseVote);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.proposalId = reader.uint64();\n          break;\n\n        case 2:\n          message.voter = reader.string();\n          break;\n\n        case 3:\n          message.option = reader.int32();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseVote);\n\n    if (object.proposalId !== undefined && object.proposalId !== null) {\n      message.proposalId = long_1.default.fromString(object.proposalId);\n    } else {\n      message.proposalId = long_1.default.UZERO;\n    }\n\n    if (object.voter !== undefined && object.voter !== null) {\n      message.voter = String(object.voter);\n    } else {\n      message.voter = \"\";\n    }\n\n    if (object.option !== undefined && object.option !== null) {\n      message.option = voteOptionFromJSON(object.option);\n    } else {\n      message.option = 0;\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.proposalId !== undefined && (obj.proposalId = (message.proposalId || long_1.default.UZERO).toString());\n    message.voter !== undefined && (obj.voter = message.voter);\n    message.option !== undefined && (obj.option = voteOptionToJSON(message.option));\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n\n    var message = Object.assign({}, baseVote);\n\n    if (object.proposalId !== undefined && object.proposalId !== null) {\n      message.proposalId = object.proposalId;\n    } else {\n      message.proposalId = long_1.default.UZERO;\n    }\n\n    message.voter = (_a = object.voter) !== null && _a !== void 0 ? _a : \"\";\n    message.option = (_b = object.option) !== null && _b !== void 0 ? _b : 0;\n    return message;\n  }\n};\nvar baseDepositParams = {};\nexports.DepositParams = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    var _iterator7 = _createForOfIteratorHelper(message.minDeposit),\n        _step7;\n\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var v = _step7.value;\n        coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n\n    if (message.maxDepositPeriod !== undefined) {\n      duration_1.Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseDepositParams);\n    message.minDeposit = [];\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.minDeposit.push(coin_1.Coin.decode(reader, reader.uint32()));\n          break;\n\n        case 2:\n          message.maxDepositPeriod = duration_1.Duration.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseDepositParams);\n    message.minDeposit = [];\n\n    if (object.minDeposit !== undefined && object.minDeposit !== null) {\n      var _iterator8 = _createForOfIteratorHelper(object.minDeposit),\n          _step8;\n\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var e = _step8.value;\n          message.minDeposit.push(coin_1.Coin.fromJSON(e));\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n    }\n\n    if (object.maxDepositPeriod !== undefined && object.maxDepositPeriod !== null) {\n      message.maxDepositPeriod = duration_1.Duration.fromJSON(object.maxDepositPeriod);\n    } else {\n      message.maxDepositPeriod = undefined;\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n\n    if (message.minDeposit) {\n      obj.minDeposit = message.minDeposit.map(function (e) {\n        return e ? coin_1.Coin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.minDeposit = [];\n    }\n\n    message.maxDepositPeriod !== undefined && (obj.maxDepositPeriod = message.maxDepositPeriod ? duration_1.Duration.toJSON(message.maxDepositPeriod) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseDepositParams);\n    message.minDeposit = [];\n\n    if (object.minDeposit !== undefined && object.minDeposit !== null) {\n      var _iterator9 = _createForOfIteratorHelper(object.minDeposit),\n          _step9;\n\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var e = _step9.value;\n          message.minDeposit.push(coin_1.Coin.fromPartial(e));\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n    }\n\n    if (object.maxDepositPeriod !== undefined && object.maxDepositPeriod !== null) {\n      message.maxDepositPeriod = duration_1.Duration.fromPartial(object.maxDepositPeriod);\n    } else {\n      message.maxDepositPeriod = undefined;\n    }\n\n    return message;\n  }\n};\nvar baseVotingParams = {};\nexports.VotingParams = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.votingPeriod !== undefined) {\n      duration_1.Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseVotingParams);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.votingPeriod = duration_1.Duration.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseVotingParams);\n\n    if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n      message.votingPeriod = duration_1.Duration.fromJSON(object.votingPeriod);\n    } else {\n      message.votingPeriod = undefined;\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.votingPeriod !== undefined && (obj.votingPeriod = message.votingPeriod ? duration_1.Duration.toJSON(message.votingPeriod) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseVotingParams);\n\n    if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n      message.votingPeriod = duration_1.Duration.fromPartial(object.votingPeriod);\n    } else {\n      message.votingPeriod = undefined;\n    }\n\n    return message;\n  }\n};\nvar baseTallyParams = {};\nexports.TallyParams = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.quorum.length !== 0) {\n      writer.uint32(10).bytes(message.quorum);\n    }\n\n    if (message.threshold.length !== 0) {\n      writer.uint32(18).bytes(message.threshold);\n    }\n\n    if (message.vetoThreshold.length !== 0) {\n      writer.uint32(26).bytes(message.vetoThreshold);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseTallyParams);\n    message.quorum = new Uint8Array();\n    message.threshold = new Uint8Array();\n    message.vetoThreshold = new Uint8Array();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.quorum = reader.bytes();\n          break;\n\n        case 2:\n          message.threshold = reader.bytes();\n          break;\n\n        case 3:\n          message.vetoThreshold = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseTallyParams);\n    message.quorum = new Uint8Array();\n    message.threshold = new Uint8Array();\n    message.vetoThreshold = new Uint8Array();\n\n    if (object.quorum !== undefined && object.quorum !== null) {\n      message.quorum = bytesFromBase64(object.quorum);\n    }\n\n    if (object.threshold !== undefined && object.threshold !== null) {\n      message.threshold = bytesFromBase64(object.threshold);\n    }\n\n    if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n      message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.quorum !== undefined && (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n    message.threshold !== undefined && (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n    message.vetoThreshold !== undefined && (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined ? message.vetoThreshold : new Uint8Array()));\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c;\n\n    var message = Object.assign({}, baseTallyParams);\n    message.quorum = (_a = object.quorum) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.threshold = (_b = object.threshold) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.vetoThreshold = (_c = object.vetoThreshold) !== null && _c !== void 0 ? _c : new Uint8Array();\n    return message;\n  }\n};\n\nvar globalThis = function () {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n}();\n\nvar atob = globalThis.atob || function (b64) {\n  return globalThis.Buffer.from(b64, \"base64\").toString(\"binary\");\n};\n\nfunction bytesFromBase64(b64) {\n  var bin = atob(b64);\n  var arr = new Uint8Array(bin.length);\n\n  for (var i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return arr;\n}\n\nvar btoa = globalThis.btoa || function (bin) {\n  return globalThis.Buffer.from(bin, \"binary\").toString(\"base64\");\n};\n\nfunction base64FromBytes(arr) {\n  var bin = [];\n\n  var _iterator10 = _createForOfIteratorHelper(arr),\n      _step10;\n\n  try {\n    for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n      var byte = _step10.value;\n      bin.push(String.fromCharCode(byte));\n    }\n  } catch (err) {\n    _iterator10.e(err);\n  } finally {\n    _iterator10.f();\n  }\n\n  return btoa(bin.join(\"\"));\n}\n\nfunction toTimestamp(date) {\n  var seconds = numberToLong(date.getTime() / 1000);\n  var nanos = date.getTime() % 1000 * 1000000;\n  return {\n    seconds: seconds,\n    nanos: nanos\n  };\n}\n\nfunction fromTimestamp(t) {\n  var millis = t.seconds.toNumber() * 1000;\n  millis += t.nanos / 1000000;\n  return new Date(millis);\n}\n\nfunction fromJsonTimestamp(o) {\n  if (o instanceof Date) {\n    return o;\n  } else if (typeof o === \"string\") {\n    return new Date(o);\n  } else {\n    return fromTimestamp(timestamp_1.Timestamp.fromJSON(o));\n  }\n}\n\nfunction numberToLong(number) {\n  return long_1.default.fromNumber(number);\n}\n\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":null,"metadata":{},"sourceType":"script"}