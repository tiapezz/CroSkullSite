{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Consensus = exports.App = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nvar long_1 = __importDefault(require(\"long\"));\n\nvar minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nexports.protobufPackage = \"tendermint.version\";\nvar baseApp = {\n  protocol: long_1.default.UZERO,\n  software: \"\"\n};\nexports.App = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (!message.protocol.isZero()) {\n      writer.uint32(8).uint64(message.protocol);\n    }\n\n    if (message.software !== \"\") {\n      writer.uint32(18).string(message.software);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseApp);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.protocol = reader.uint64();\n          break;\n\n        case 2:\n          message.software = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseApp);\n\n    if (object.protocol !== undefined && object.protocol !== null) {\n      message.protocol = long_1.default.fromString(object.protocol);\n    } else {\n      message.protocol = long_1.default.UZERO;\n    }\n\n    if (object.software !== undefined && object.software !== null) {\n      message.software = String(object.software);\n    } else {\n      message.software = \"\";\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.protocol !== undefined && (obj.protocol = (message.protocol || long_1.default.UZERO).toString());\n    message.software !== undefined && (obj.software = message.software);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n\n    var message = Object.assign({}, baseApp);\n\n    if (object.protocol !== undefined && object.protocol !== null) {\n      message.protocol = object.protocol;\n    } else {\n      message.protocol = long_1.default.UZERO;\n    }\n\n    message.software = (_a = object.software) !== null && _a !== void 0 ? _a : \"\";\n    return message;\n  }\n};\nvar baseConsensus = {\n  block: long_1.default.UZERO,\n  app: long_1.default.UZERO\n};\nexports.Consensus = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (!message.block.isZero()) {\n      writer.uint32(8).uint64(message.block);\n    }\n\n    if (!message.app.isZero()) {\n      writer.uint32(16).uint64(message.app);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseConsensus);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.block = reader.uint64();\n          break;\n\n        case 2:\n          message.app = reader.uint64();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseConsensus);\n\n    if (object.block !== undefined && object.block !== null) {\n      message.block = long_1.default.fromString(object.block);\n    } else {\n      message.block = long_1.default.UZERO;\n    }\n\n    if (object.app !== undefined && object.app !== null) {\n      message.app = long_1.default.fromString(object.app);\n    } else {\n      message.app = long_1.default.UZERO;\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.block !== undefined && (obj.block = (message.block || long_1.default.UZERO).toString());\n    message.app !== undefined && (obj.app = (message.app || long_1.default.UZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseConsensus);\n\n    if (object.block !== undefined && object.block !== null) {\n      message.block = object.block;\n    } else {\n      message.block = long_1.default.UZERO;\n    }\n\n    if (object.app !== undefined && object.app !== null) {\n      message.app = object.app;\n    } else {\n      message.app = long_1.default.UZERO;\n    }\n\n    return message;\n  }\n};\n\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":null,"metadata":{},"sourceType":"script"}