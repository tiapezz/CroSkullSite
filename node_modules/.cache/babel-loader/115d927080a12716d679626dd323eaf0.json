{"ast":null,"code":"import _defineProperty from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  loading: false,\n  //listings\n  croInUsd: 0,\n  graveInUsd: 0,\n  graveInCro: 0,\n  liquidityUsd: 0,\n  liquidityCro: 0\n};\n\nvar dexscreenerReducer = function dexscreenerReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var payload = action.payload;\n\n  switch (action.type) {\n    case \"FETCH_DEX_REQUEST\":\n      return _objectSpread({}, initialState, {\n        loading: true\n      });\n\n    case \"FETCH_DEX_SUCCESS\":\n      return _objectSpread({}, state, {\n        loading: false,\n        croInUsd: payload.croInUsd,\n        graveInUsd: payload.graveInUsd,\n        graveInCro: payload.graveInCro,\n        liquidityUsd: payload.liquidityUsd,\n        liquidityCro: payload.liquidityCro\n      });\n\n    case \"UPDATE_STATE\":\n      return _objectSpread({}, state, _defineProperty({}, payload.key, payload.value));\n\n    default:\n      return state;\n  }\n};\n\nexport default dexscreenerReducer;","map":{"version":3,"sources":["F:/Mattia/Visual studio/AppCroskull/croskull-nft-marketplace/src/redux/dexscreener/dexscreenerReducer.js"],"names":["initialState","loading","croInUsd","graveInUsd","graveInCro","liquidityUsd","liquidityCro","dexscreenerReducer","state","action","payload","type","key","value"],"mappings":";;AAAA,IAAMA,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjB;AACAC,EAAAA,QAAQ,EAAE,CAHO;AAIjBC,EAAAA,UAAU,EAAE,CAJK;AAKjBC,EAAAA,UAAU,EAAE,CALK;AAMjBC,EAAAA,YAAY,EAAE,CANG;AAOjBC,EAAAA,YAAY,EAAE;AAPG,CAArB;;AAUA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;AACzD,MAAIC,OAAO,GAAGD,MAAM,CAACC,OAArB;;AACA,UAAQD,MAAM,CAACE,IAAf;AACI,SAAK,mBAAL;AACI,+BACOX,YADP;AAEIC,QAAAA,OAAO,EAAE;AAFb;;AAIJ,SAAK,mBAAL;AACI,+BACOO,KADP;AAEIP,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,QAAQ,EAAEQ,OAAO,CAACR,QAHtB;AAIIC,QAAAA,UAAU,EAAEO,OAAO,CAACP,UAJxB;AAKIC,QAAAA,UAAU,EAAEM,OAAO,CAACN,UALxB;AAMIC,QAAAA,YAAY,EAAEK,OAAO,CAACL,YAN1B;AAOIC,QAAAA,YAAY,EAAEI,OAAO,CAACJ;AAP1B;;AASJ,SAAK,cAAL;AACI,+BACOE,KADP,sBAEKE,OAAO,CAACE,GAFb,EAEmBF,OAAO,CAACG,KAF3B;;AAIJ;AACI,aAAOL,KAAP;AAtBR;AAwBH,CA1BD;;AA4BA,eAAeD,kBAAf","sourcesContent":["const initialState = {\r\n    loading: false,\r\n    //listings\r\n    croInUsd: 0,\r\n    graveInUsd: 0,\r\n    graveInCro: 0,\r\n    liquidityUsd: 0,\r\n    liquidityCro: 0,\r\n};\r\n\r\nconst dexscreenerReducer = (state = initialState, action) => {\r\n    let payload = action.payload\r\n    switch (action.type) {\r\n        case \"FETCH_DEX_REQUEST\":\r\n            return {\r\n                ...initialState,\r\n                loading: true\r\n            };\r\n        case \"FETCH_DEX_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                croInUsd: payload.croInUsd,\r\n                graveInUsd: payload.graveInUsd,\r\n                graveInCro: payload.graveInCro,\r\n                liquidityUsd: payload.liquidityUsd,\r\n                liquidityCro: payload.liquidityCro\r\n            };\r\n        case \"UPDATE_STATE\":\r\n            return {\r\n                ...state,\r\n                [payload.key]: payload.value\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default dexscreenerReducer;"]},"metadata":{},"sourceType":"module"}