{"ast":null,"code":"\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e5) { throw _e5; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e6) { didErr = true; err = _e6; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Fee = exports.ModeInfo_Multi = exports.ModeInfo_Single = exports.ModeInfo = exports.SignerInfo = exports.AuthInfo = exports.TxBody = exports.SignDoc = exports.TxRaw = exports.Tx = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nvar long_1 = __importDefault(require(\"long\"));\n\nvar minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nvar any_1 = require(\"../../../google/protobuf/any\");\n\nvar signing_1 = require(\"../../../cosmos/tx/signing/v1beta1/signing\");\n\nvar multisig_1 = require(\"../../../cosmos/crypto/multisig/v1beta1/multisig\");\n\nvar coin_1 = require(\"../../../cosmos/base/v1beta1/coin\");\n\nexports.protobufPackage = \"cosmos.tx.v1beta1\";\nvar baseTx = {};\nexports.Tx = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.body !== undefined) {\n      exports.TxBody.encode(message.body, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.authInfo !== undefined) {\n      exports.AuthInfo.encode(message.authInfo, writer.uint32(18).fork()).ldelim();\n    }\n\n    var _iterator = _createForOfIteratorHelper(message.signatures),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        writer.uint32(26).bytes(v);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseTx);\n    message.signatures = [];\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.body = exports.TxBody.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.authInfo = exports.AuthInfo.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.signatures.push(reader.bytes());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseTx);\n    message.signatures = [];\n\n    if (object.body !== undefined && object.body !== null) {\n      message.body = exports.TxBody.fromJSON(object.body);\n    } else {\n      message.body = undefined;\n    }\n\n    if (object.authInfo !== undefined && object.authInfo !== null) {\n      message.authInfo = exports.AuthInfo.fromJSON(object.authInfo);\n    } else {\n      message.authInfo = undefined;\n    }\n\n    if (object.signatures !== undefined && object.signatures !== null) {\n      var _iterator2 = _createForOfIteratorHelper(object.signatures),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var e = _step2.value;\n          message.signatures.push(bytesFromBase64(e));\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.body !== undefined && (obj.body = message.body ? exports.TxBody.toJSON(message.body) : undefined);\n    message.authInfo !== undefined && (obj.authInfo = message.authInfo ? exports.AuthInfo.toJSON(message.authInfo) : undefined);\n\n    if (message.signatures) {\n      obj.signatures = message.signatures.map(function (e) {\n        return base64FromBytes(e !== undefined ? e : new Uint8Array());\n      });\n    } else {\n      obj.signatures = [];\n    }\n\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseTx);\n\n    if (object.body !== undefined && object.body !== null) {\n      message.body = exports.TxBody.fromPartial(object.body);\n    } else {\n      message.body = undefined;\n    }\n\n    if (object.authInfo !== undefined && object.authInfo !== null) {\n      message.authInfo = exports.AuthInfo.fromPartial(object.authInfo);\n    } else {\n      message.authInfo = undefined;\n    }\n\n    message.signatures = [];\n\n    if (object.signatures !== undefined && object.signatures !== null) {\n      var _iterator3 = _createForOfIteratorHelper(object.signatures),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var e = _step3.value;\n          message.signatures.push(e);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n\n    return message;\n  }\n};\nvar baseTxRaw = {};\nexports.TxRaw = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.bodyBytes.length !== 0) {\n      writer.uint32(10).bytes(message.bodyBytes);\n    }\n\n    if (message.authInfoBytes.length !== 0) {\n      writer.uint32(18).bytes(message.authInfoBytes);\n    }\n\n    var _iterator4 = _createForOfIteratorHelper(message.signatures),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var v = _step4.value;\n        writer.uint32(26).bytes(v);\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseTxRaw);\n    message.signatures = [];\n    message.bodyBytes = new Uint8Array();\n    message.authInfoBytes = new Uint8Array();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.bodyBytes = reader.bytes();\n          break;\n\n        case 2:\n          message.authInfoBytes = reader.bytes();\n          break;\n\n        case 3:\n          message.signatures.push(reader.bytes());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseTxRaw);\n    message.signatures = [];\n    message.bodyBytes = new Uint8Array();\n    message.authInfoBytes = new Uint8Array();\n\n    if (object.bodyBytes !== undefined && object.bodyBytes !== null) {\n      message.bodyBytes = bytesFromBase64(object.bodyBytes);\n    }\n\n    if (object.authInfoBytes !== undefined && object.authInfoBytes !== null) {\n      message.authInfoBytes = bytesFromBase64(object.authInfoBytes);\n    }\n\n    if (object.signatures !== undefined && object.signatures !== null) {\n      var _iterator5 = _createForOfIteratorHelper(object.signatures),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var e = _step5.value;\n          message.signatures.push(bytesFromBase64(e));\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.bodyBytes !== undefined && (obj.bodyBytes = base64FromBytes(message.bodyBytes !== undefined ? message.bodyBytes : new Uint8Array()));\n    message.authInfoBytes !== undefined && (obj.authInfoBytes = base64FromBytes(message.authInfoBytes !== undefined ? message.authInfoBytes : new Uint8Array()));\n\n    if (message.signatures) {\n      obj.signatures = message.signatures.map(function (e) {\n        return base64FromBytes(e !== undefined ? e : new Uint8Array());\n      });\n    } else {\n      obj.signatures = [];\n    }\n\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n\n    var message = Object.assign({}, baseTxRaw);\n    message.bodyBytes = (_a = object.bodyBytes) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.authInfoBytes = (_b = object.authInfoBytes) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.signatures = [];\n\n    if (object.signatures !== undefined && object.signatures !== null) {\n      var _iterator6 = _createForOfIteratorHelper(object.signatures),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var e = _step6.value;\n          message.signatures.push(e);\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n\n    return message;\n  }\n};\nvar baseSignDoc = {\n  chainId: \"\",\n  accountNumber: long_1.default.UZERO\n};\nexports.SignDoc = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.bodyBytes.length !== 0) {\n      writer.uint32(10).bytes(message.bodyBytes);\n    }\n\n    if (message.authInfoBytes.length !== 0) {\n      writer.uint32(18).bytes(message.authInfoBytes);\n    }\n\n    if (message.chainId !== \"\") {\n      writer.uint32(26).string(message.chainId);\n    }\n\n    if (!message.accountNumber.isZero()) {\n      writer.uint32(32).uint64(message.accountNumber);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseSignDoc);\n    message.bodyBytes = new Uint8Array();\n    message.authInfoBytes = new Uint8Array();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.bodyBytes = reader.bytes();\n          break;\n\n        case 2:\n          message.authInfoBytes = reader.bytes();\n          break;\n\n        case 3:\n          message.chainId = reader.string();\n          break;\n\n        case 4:\n          message.accountNumber = reader.uint64();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseSignDoc);\n    message.bodyBytes = new Uint8Array();\n    message.authInfoBytes = new Uint8Array();\n\n    if (object.bodyBytes !== undefined && object.bodyBytes !== null) {\n      message.bodyBytes = bytesFromBase64(object.bodyBytes);\n    }\n\n    if (object.authInfoBytes !== undefined && object.authInfoBytes !== null) {\n      message.authInfoBytes = bytesFromBase64(object.authInfoBytes);\n    }\n\n    if (object.chainId !== undefined && object.chainId !== null) {\n      message.chainId = String(object.chainId);\n    } else {\n      message.chainId = \"\";\n    }\n\n    if (object.accountNumber !== undefined && object.accountNumber !== null) {\n      message.accountNumber = long_1.default.fromString(object.accountNumber);\n    } else {\n      message.accountNumber = long_1.default.UZERO;\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.bodyBytes !== undefined && (obj.bodyBytes = base64FromBytes(message.bodyBytes !== undefined ? message.bodyBytes : new Uint8Array()));\n    message.authInfoBytes !== undefined && (obj.authInfoBytes = base64FromBytes(message.authInfoBytes !== undefined ? message.authInfoBytes : new Uint8Array()));\n    message.chainId !== undefined && (obj.chainId = message.chainId);\n    message.accountNumber !== undefined && (obj.accountNumber = (message.accountNumber || long_1.default.UZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c;\n\n    var message = Object.assign({}, baseSignDoc);\n    message.bodyBytes = (_a = object.bodyBytes) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.authInfoBytes = (_b = object.authInfoBytes) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.chainId = (_c = object.chainId) !== null && _c !== void 0 ? _c : \"\";\n\n    if (object.accountNumber !== undefined && object.accountNumber !== null) {\n      message.accountNumber = object.accountNumber;\n    } else {\n      message.accountNumber = long_1.default.UZERO;\n    }\n\n    return message;\n  }\n};\nvar baseTxBody = {\n  memo: \"\",\n  timeoutHeight: long_1.default.UZERO\n};\nexports.TxBody = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    var _iterator7 = _createForOfIteratorHelper(message.messages),\n        _step7;\n\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var v = _step7.value;\n        any_1.Any.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n\n    if (message.memo !== \"\") {\n      writer.uint32(18).string(message.memo);\n    }\n\n    if (!message.timeoutHeight.isZero()) {\n      writer.uint32(24).uint64(message.timeoutHeight);\n    }\n\n    var _iterator8 = _createForOfIteratorHelper(message.extensionOptions),\n        _step8;\n\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var _v = _step8.value;\n        any_1.Any.encode(_v, writer.uint32(8186).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n\n    var _iterator9 = _createForOfIteratorHelper(message.nonCriticalExtensionOptions),\n        _step9;\n\n    try {\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n        var _v2 = _step9.value;\n        any_1.Any.encode(_v2, writer.uint32(16378).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator9.e(err);\n    } finally {\n      _iterator9.f();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseTxBody);\n    message.messages = [];\n    message.extensionOptions = [];\n    message.nonCriticalExtensionOptions = [];\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.messages.push(any_1.Any.decode(reader, reader.uint32()));\n          break;\n\n        case 2:\n          message.memo = reader.string();\n          break;\n\n        case 3:\n          message.timeoutHeight = reader.uint64();\n          break;\n\n        case 1023:\n          message.extensionOptions.push(any_1.Any.decode(reader, reader.uint32()));\n          break;\n\n        case 2047:\n          message.nonCriticalExtensionOptions.push(any_1.Any.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseTxBody);\n    message.messages = [];\n    message.extensionOptions = [];\n    message.nonCriticalExtensionOptions = [];\n\n    if (object.messages !== undefined && object.messages !== null) {\n      var _iterator10 = _createForOfIteratorHelper(object.messages),\n          _step10;\n\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var e = _step10.value;\n          message.messages.push(any_1.Any.fromJSON(e));\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n    }\n\n    if (object.memo !== undefined && object.memo !== null) {\n      message.memo = String(object.memo);\n    } else {\n      message.memo = \"\";\n    }\n\n    if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n      message.timeoutHeight = long_1.default.fromString(object.timeoutHeight);\n    } else {\n      message.timeoutHeight = long_1.default.UZERO;\n    }\n\n    if (object.extensionOptions !== undefined && object.extensionOptions !== null) {\n      var _iterator11 = _createForOfIteratorHelper(object.extensionOptions),\n          _step11;\n\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var _e = _step11.value;\n          message.extensionOptions.push(any_1.Any.fromJSON(_e));\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n    }\n\n    if (object.nonCriticalExtensionOptions !== undefined && object.nonCriticalExtensionOptions !== null) {\n      var _iterator12 = _createForOfIteratorHelper(object.nonCriticalExtensionOptions),\n          _step12;\n\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var _e2 = _step12.value;\n          message.nonCriticalExtensionOptions.push(any_1.Any.fromJSON(_e2));\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n\n    if (message.messages) {\n      obj.messages = message.messages.map(function (e) {\n        return e ? any_1.Any.toJSON(e) : undefined;\n      });\n    } else {\n      obj.messages = [];\n    }\n\n    message.memo !== undefined && (obj.memo = message.memo);\n    message.timeoutHeight !== undefined && (obj.timeoutHeight = (message.timeoutHeight || long_1.default.UZERO).toString());\n\n    if (message.extensionOptions) {\n      obj.extensionOptions = message.extensionOptions.map(function (e) {\n        return e ? any_1.Any.toJSON(e) : undefined;\n      });\n    } else {\n      obj.extensionOptions = [];\n    }\n\n    if (message.nonCriticalExtensionOptions) {\n      obj.nonCriticalExtensionOptions = message.nonCriticalExtensionOptions.map(function (e) {\n        return e ? any_1.Any.toJSON(e) : undefined;\n      });\n    } else {\n      obj.nonCriticalExtensionOptions = [];\n    }\n\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n\n    var message = Object.assign({}, baseTxBody);\n    message.messages = [];\n\n    if (object.messages !== undefined && object.messages !== null) {\n      var _iterator13 = _createForOfIteratorHelper(object.messages),\n          _step13;\n\n      try {\n        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n          var e = _step13.value;\n          message.messages.push(any_1.Any.fromPartial(e));\n        }\n      } catch (err) {\n        _iterator13.e(err);\n      } finally {\n        _iterator13.f();\n      }\n    }\n\n    message.memo = (_a = object.memo) !== null && _a !== void 0 ? _a : \"\";\n\n    if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n      message.timeoutHeight = object.timeoutHeight;\n    } else {\n      message.timeoutHeight = long_1.default.UZERO;\n    }\n\n    message.extensionOptions = [];\n\n    if (object.extensionOptions !== undefined && object.extensionOptions !== null) {\n      var _iterator14 = _createForOfIteratorHelper(object.extensionOptions),\n          _step14;\n\n      try {\n        for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n          var _e3 = _step14.value;\n          message.extensionOptions.push(any_1.Any.fromPartial(_e3));\n        }\n      } catch (err) {\n        _iterator14.e(err);\n      } finally {\n        _iterator14.f();\n      }\n    }\n\n    message.nonCriticalExtensionOptions = [];\n\n    if (object.nonCriticalExtensionOptions !== undefined && object.nonCriticalExtensionOptions !== null) {\n      var _iterator15 = _createForOfIteratorHelper(object.nonCriticalExtensionOptions),\n          _step15;\n\n      try {\n        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n          var _e4 = _step15.value;\n          message.nonCriticalExtensionOptions.push(any_1.Any.fromPartial(_e4));\n        }\n      } catch (err) {\n        _iterator15.e(err);\n      } finally {\n        _iterator15.f();\n      }\n    }\n\n    return message;\n  }\n};\nvar baseAuthInfo = {};\nexports.AuthInfo = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    var _iterator16 = _createForOfIteratorHelper(message.signerInfos),\n        _step16;\n\n    try {\n      for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n        var v = _step16.value;\n        exports.SignerInfo.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator16.e(err);\n    } finally {\n      _iterator16.f();\n    }\n\n    if (message.fee !== undefined) {\n      exports.Fee.encode(message.fee, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseAuthInfo);\n    message.signerInfos = [];\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.signerInfos.push(exports.SignerInfo.decode(reader, reader.uint32()));\n          break;\n\n        case 2:\n          message.fee = exports.Fee.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseAuthInfo);\n    message.signerInfos = [];\n\n    if (object.signerInfos !== undefined && object.signerInfos !== null) {\n      var _iterator17 = _createForOfIteratorHelper(object.signerInfos),\n          _step17;\n\n      try {\n        for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n          var e = _step17.value;\n          message.signerInfos.push(exports.SignerInfo.fromJSON(e));\n        }\n      } catch (err) {\n        _iterator17.e(err);\n      } finally {\n        _iterator17.f();\n      }\n    }\n\n    if (object.fee !== undefined && object.fee !== null) {\n      message.fee = exports.Fee.fromJSON(object.fee);\n    } else {\n      message.fee = undefined;\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n\n    if (message.signerInfos) {\n      obj.signerInfos = message.signerInfos.map(function (e) {\n        return e ? exports.SignerInfo.toJSON(e) : undefined;\n      });\n    } else {\n      obj.signerInfos = [];\n    }\n\n    message.fee !== undefined && (obj.fee = message.fee ? exports.Fee.toJSON(message.fee) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseAuthInfo);\n    message.signerInfos = [];\n\n    if (object.signerInfos !== undefined && object.signerInfos !== null) {\n      var _iterator18 = _createForOfIteratorHelper(object.signerInfos),\n          _step18;\n\n      try {\n        for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n          var e = _step18.value;\n          message.signerInfos.push(exports.SignerInfo.fromPartial(e));\n        }\n      } catch (err) {\n        _iterator18.e(err);\n      } finally {\n        _iterator18.f();\n      }\n    }\n\n    if (object.fee !== undefined && object.fee !== null) {\n      message.fee = exports.Fee.fromPartial(object.fee);\n    } else {\n      message.fee = undefined;\n    }\n\n    return message;\n  }\n};\nvar baseSignerInfo = {\n  sequence: long_1.default.UZERO\n};\nexports.SignerInfo = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.publicKey !== undefined) {\n      any_1.Any.encode(message.publicKey, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.modeInfo !== undefined) {\n      exports.ModeInfo.encode(message.modeInfo, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (!message.sequence.isZero()) {\n      writer.uint32(24).uint64(message.sequence);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseSignerInfo);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.publicKey = any_1.Any.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.modeInfo = exports.ModeInfo.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.sequence = reader.uint64();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseSignerInfo);\n\n    if (object.publicKey !== undefined && object.publicKey !== null) {\n      message.publicKey = any_1.Any.fromJSON(object.publicKey);\n    } else {\n      message.publicKey = undefined;\n    }\n\n    if (object.modeInfo !== undefined && object.modeInfo !== null) {\n      message.modeInfo = exports.ModeInfo.fromJSON(object.modeInfo);\n    } else {\n      message.modeInfo = undefined;\n    }\n\n    if (object.sequence !== undefined && object.sequence !== null) {\n      message.sequence = long_1.default.fromString(object.sequence);\n    } else {\n      message.sequence = long_1.default.UZERO;\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.publicKey !== undefined && (obj.publicKey = message.publicKey ? any_1.Any.toJSON(message.publicKey) : undefined);\n    message.modeInfo !== undefined && (obj.modeInfo = message.modeInfo ? exports.ModeInfo.toJSON(message.modeInfo) : undefined);\n    message.sequence !== undefined && (obj.sequence = (message.sequence || long_1.default.UZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseSignerInfo);\n\n    if (object.publicKey !== undefined && object.publicKey !== null) {\n      message.publicKey = any_1.Any.fromPartial(object.publicKey);\n    } else {\n      message.publicKey = undefined;\n    }\n\n    if (object.modeInfo !== undefined && object.modeInfo !== null) {\n      message.modeInfo = exports.ModeInfo.fromPartial(object.modeInfo);\n    } else {\n      message.modeInfo = undefined;\n    }\n\n    if (object.sequence !== undefined && object.sequence !== null) {\n      message.sequence = object.sequence;\n    } else {\n      message.sequence = long_1.default.UZERO;\n    }\n\n    return message;\n  }\n};\nvar baseModeInfo = {};\nexports.ModeInfo = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.single !== undefined) {\n      exports.ModeInfo_Single.encode(message.single, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.multi !== undefined) {\n      exports.ModeInfo_Multi.encode(message.multi, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseModeInfo);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.single = exports.ModeInfo_Single.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.multi = exports.ModeInfo_Multi.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseModeInfo);\n\n    if (object.single !== undefined && object.single !== null) {\n      message.single = exports.ModeInfo_Single.fromJSON(object.single);\n    } else {\n      message.single = undefined;\n    }\n\n    if (object.multi !== undefined && object.multi !== null) {\n      message.multi = exports.ModeInfo_Multi.fromJSON(object.multi);\n    } else {\n      message.multi = undefined;\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.single !== undefined && (obj.single = message.single ? exports.ModeInfo_Single.toJSON(message.single) : undefined);\n    message.multi !== undefined && (obj.multi = message.multi ? exports.ModeInfo_Multi.toJSON(message.multi) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseModeInfo);\n\n    if (object.single !== undefined && object.single !== null) {\n      message.single = exports.ModeInfo_Single.fromPartial(object.single);\n    } else {\n      message.single = undefined;\n    }\n\n    if (object.multi !== undefined && object.multi !== null) {\n      message.multi = exports.ModeInfo_Multi.fromPartial(object.multi);\n    } else {\n      message.multi = undefined;\n    }\n\n    return message;\n  }\n};\nvar baseModeInfo_Single = {\n  mode: 0\n};\nexports.ModeInfo_Single = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.mode !== 0) {\n      writer.uint32(8).int32(message.mode);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseModeInfo_Single);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.mode = reader.int32();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseModeInfo_Single);\n\n    if (object.mode !== undefined && object.mode !== null) {\n      message.mode = signing_1.signModeFromJSON(object.mode);\n    } else {\n      message.mode = 0;\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.mode !== undefined && (obj.mode = signing_1.signModeToJSON(message.mode));\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n\n    var message = Object.assign({}, baseModeInfo_Single);\n    message.mode = (_a = object.mode) !== null && _a !== void 0 ? _a : 0;\n    return message;\n  }\n};\nvar baseModeInfo_Multi = {};\nexports.ModeInfo_Multi = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.bitarray !== undefined) {\n      multisig_1.CompactBitArray.encode(message.bitarray, writer.uint32(10).fork()).ldelim();\n    }\n\n    var _iterator19 = _createForOfIteratorHelper(message.modeInfos),\n        _step19;\n\n    try {\n      for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n        var v = _step19.value;\n        exports.ModeInfo.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator19.e(err);\n    } finally {\n      _iterator19.f();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseModeInfo_Multi);\n    message.modeInfos = [];\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.bitarray = multisig_1.CompactBitArray.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.modeInfos.push(exports.ModeInfo.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseModeInfo_Multi);\n    message.modeInfos = [];\n\n    if (object.bitarray !== undefined && object.bitarray !== null) {\n      message.bitarray = multisig_1.CompactBitArray.fromJSON(object.bitarray);\n    } else {\n      message.bitarray = undefined;\n    }\n\n    if (object.modeInfos !== undefined && object.modeInfos !== null) {\n      var _iterator20 = _createForOfIteratorHelper(object.modeInfos),\n          _step20;\n\n      try {\n        for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n          var e = _step20.value;\n          message.modeInfos.push(exports.ModeInfo.fromJSON(e));\n        }\n      } catch (err) {\n        _iterator20.e(err);\n      } finally {\n        _iterator20.f();\n      }\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.bitarray !== undefined && (obj.bitarray = message.bitarray ? multisig_1.CompactBitArray.toJSON(message.bitarray) : undefined);\n\n    if (message.modeInfos) {\n      obj.modeInfos = message.modeInfos.map(function (e) {\n        return e ? exports.ModeInfo.toJSON(e) : undefined;\n      });\n    } else {\n      obj.modeInfos = [];\n    }\n\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseModeInfo_Multi);\n\n    if (object.bitarray !== undefined && object.bitarray !== null) {\n      message.bitarray = multisig_1.CompactBitArray.fromPartial(object.bitarray);\n    } else {\n      message.bitarray = undefined;\n    }\n\n    message.modeInfos = [];\n\n    if (object.modeInfos !== undefined && object.modeInfos !== null) {\n      var _iterator21 = _createForOfIteratorHelper(object.modeInfos),\n          _step21;\n\n      try {\n        for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n          var e = _step21.value;\n          message.modeInfos.push(exports.ModeInfo.fromPartial(e));\n        }\n      } catch (err) {\n        _iterator21.e(err);\n      } finally {\n        _iterator21.f();\n      }\n    }\n\n    return message;\n  }\n};\nvar baseFee = {\n  gasLimit: long_1.default.UZERO,\n  payer: \"\",\n  granter: \"\"\n};\nexports.Fee = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    var _iterator22 = _createForOfIteratorHelper(message.amount),\n        _step22;\n\n    try {\n      for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n        var v = _step22.value;\n        coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator22.e(err);\n    } finally {\n      _iterator22.f();\n    }\n\n    if (!message.gasLimit.isZero()) {\n      writer.uint32(16).uint64(message.gasLimit);\n    }\n\n    if (message.payer !== \"\") {\n      writer.uint32(26).string(message.payer);\n    }\n\n    if (message.granter !== \"\") {\n      writer.uint32(34).string(message.granter);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseFee);\n    message.amount = [];\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));\n          break;\n\n        case 2:\n          message.gasLimit = reader.uint64();\n          break;\n\n        case 3:\n          message.payer = reader.string();\n          break;\n\n        case 4:\n          message.granter = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseFee);\n    message.amount = [];\n\n    if (object.amount !== undefined && object.amount !== null) {\n      var _iterator23 = _createForOfIteratorHelper(object.amount),\n          _step23;\n\n      try {\n        for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n          var e = _step23.value;\n          message.amount.push(coin_1.Coin.fromJSON(e));\n        }\n      } catch (err) {\n        _iterator23.e(err);\n      } finally {\n        _iterator23.f();\n      }\n    }\n\n    if (object.gasLimit !== undefined && object.gasLimit !== null) {\n      message.gasLimit = long_1.default.fromString(object.gasLimit);\n    } else {\n      message.gasLimit = long_1.default.UZERO;\n    }\n\n    if (object.payer !== undefined && object.payer !== null) {\n      message.payer = String(object.payer);\n    } else {\n      message.payer = \"\";\n    }\n\n    if (object.granter !== undefined && object.granter !== null) {\n      message.granter = String(object.granter);\n    } else {\n      message.granter = \"\";\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n\n    if (message.amount) {\n      obj.amount = message.amount.map(function (e) {\n        return e ? coin_1.Coin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.amount = [];\n    }\n\n    message.gasLimit !== undefined && (obj.gasLimit = (message.gasLimit || long_1.default.UZERO).toString());\n    message.payer !== undefined && (obj.payer = message.payer);\n    message.granter !== undefined && (obj.granter = message.granter);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n\n    var message = Object.assign({}, baseFee);\n    message.amount = [];\n\n    if (object.amount !== undefined && object.amount !== null) {\n      var _iterator24 = _createForOfIteratorHelper(object.amount),\n          _step24;\n\n      try {\n        for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n          var e = _step24.value;\n          message.amount.push(coin_1.Coin.fromPartial(e));\n        }\n      } catch (err) {\n        _iterator24.e(err);\n      } finally {\n        _iterator24.f();\n      }\n    }\n\n    if (object.gasLimit !== undefined && object.gasLimit !== null) {\n      message.gasLimit = object.gasLimit;\n    } else {\n      message.gasLimit = long_1.default.UZERO;\n    }\n\n    message.payer = (_a = object.payer) !== null && _a !== void 0 ? _a : \"\";\n    message.granter = (_b = object.granter) !== null && _b !== void 0 ? _b : \"\";\n    return message;\n  }\n};\n\nvar globalThis = function () {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n}();\n\nvar atob = globalThis.atob || function (b64) {\n  return globalThis.Buffer.from(b64, \"base64\").toString(\"binary\");\n};\n\nfunction bytesFromBase64(b64) {\n  var bin = atob(b64);\n  var arr = new Uint8Array(bin.length);\n\n  for (var i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return arr;\n}\n\nvar btoa = globalThis.btoa || function (bin) {\n  return globalThis.Buffer.from(bin, \"binary\").toString(\"base64\");\n};\n\nfunction base64FromBytes(arr) {\n  var bin = [];\n\n  var _iterator25 = _createForOfIteratorHelper(arr),\n      _step25;\n\n  try {\n    for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {\n      var byte = _step25.value;\n      bin.push(String.fromCharCode(byte));\n    }\n  } catch (err) {\n    _iterator25.e(err);\n  } finally {\n    _iterator25.f();\n  }\n\n  return btoa(bin.join(\"\"));\n}\n\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":null,"metadata":{},"sourceType":"script"}