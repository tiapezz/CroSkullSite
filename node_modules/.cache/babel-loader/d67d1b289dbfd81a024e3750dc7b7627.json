{"ast":null,"code":"\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommunityPoolSpendProposalWithDeposit = exports.DelegationDelegatorReward = exports.DelegatorStartingInfo = exports.CommunityPoolSpendProposal = exports.FeePool = exports.ValidatorSlashEvents = exports.ValidatorSlashEvent = exports.ValidatorOutstandingRewards = exports.ValidatorAccumulatedCommission = exports.ValidatorCurrentRewards = exports.ValidatorHistoricalRewards = exports.Params = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nvar long_1 = __importDefault(require(\"long\"));\n\nvar minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nvar coin_1 = require(\"../../../cosmos/base/v1beta1/coin\");\n\nexports.protobufPackage = \"cosmos.distribution.v1beta1\";\nvar baseParams = {\n  communityTax: \"\",\n  baseProposerReward: \"\",\n  bonusProposerReward: \"\",\n  withdrawAddrEnabled: false\n};\nexports.Params = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.communityTax !== \"\") {\n      writer.uint32(10).string(message.communityTax);\n    }\n\n    if (message.baseProposerReward !== \"\") {\n      writer.uint32(18).string(message.baseProposerReward);\n    }\n\n    if (message.bonusProposerReward !== \"\") {\n      writer.uint32(26).string(message.bonusProposerReward);\n    }\n\n    if (message.withdrawAddrEnabled === true) {\n      writer.uint32(32).bool(message.withdrawAddrEnabled);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseParams);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.communityTax = reader.string();\n          break;\n\n        case 2:\n          message.baseProposerReward = reader.string();\n          break;\n\n        case 3:\n          message.bonusProposerReward = reader.string();\n          break;\n\n        case 4:\n          message.withdrawAddrEnabled = reader.bool();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseParams);\n\n    if (object.communityTax !== undefined && object.communityTax !== null) {\n      message.communityTax = String(object.communityTax);\n    } else {\n      message.communityTax = \"\";\n    }\n\n    if (object.baseProposerReward !== undefined && object.baseProposerReward !== null) {\n      message.baseProposerReward = String(object.baseProposerReward);\n    } else {\n      message.baseProposerReward = \"\";\n    }\n\n    if (object.bonusProposerReward !== undefined && object.bonusProposerReward !== null) {\n      message.bonusProposerReward = String(object.bonusProposerReward);\n    } else {\n      message.bonusProposerReward = \"\";\n    }\n\n    if (object.withdrawAddrEnabled !== undefined && object.withdrawAddrEnabled !== null) {\n      message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n    } else {\n      message.withdrawAddrEnabled = false;\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.communityTax !== undefined && (obj.communityTax = message.communityTax);\n    message.baseProposerReward !== undefined && (obj.baseProposerReward = message.baseProposerReward);\n    message.bonusProposerReward !== undefined && (obj.bonusProposerReward = message.bonusProposerReward);\n    message.withdrawAddrEnabled !== undefined && (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c, _d;\n\n    var message = Object.assign({}, baseParams);\n    message.communityTax = (_a = object.communityTax) !== null && _a !== void 0 ? _a : \"\";\n    message.baseProposerReward = (_b = object.baseProposerReward) !== null && _b !== void 0 ? _b : \"\";\n    message.bonusProposerReward = (_c = object.bonusProposerReward) !== null && _c !== void 0 ? _c : \"\";\n    message.withdrawAddrEnabled = (_d = object.withdrawAddrEnabled) !== null && _d !== void 0 ? _d : false;\n    return message;\n  }\n};\nvar baseValidatorHistoricalRewards = {\n  referenceCount: 0\n};\nexports.ValidatorHistoricalRewards = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    var _iterator = _createForOfIteratorHelper(message.cumulativeRewardRatio),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    if (message.referenceCount !== 0) {\n      writer.uint32(16).uint32(message.referenceCount);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseValidatorHistoricalRewards);\n    message.cumulativeRewardRatio = [];\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.cumulativeRewardRatio.push(coin_1.DecCoin.decode(reader, reader.uint32()));\n          break;\n\n        case 2:\n          message.referenceCount = reader.uint32();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseValidatorHistoricalRewards);\n    message.cumulativeRewardRatio = [];\n\n    if (object.cumulativeRewardRatio !== undefined && object.cumulativeRewardRatio !== null) {\n      var _iterator2 = _createForOfIteratorHelper(object.cumulativeRewardRatio),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var e = _step2.value;\n          message.cumulativeRewardRatio.push(coin_1.DecCoin.fromJSON(e));\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n\n    if (object.referenceCount !== undefined && object.referenceCount !== null) {\n      message.referenceCount = Number(object.referenceCount);\n    } else {\n      message.referenceCount = 0;\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n\n    if (message.cumulativeRewardRatio) {\n      obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map(function (e) {\n        return e ? coin_1.DecCoin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.cumulativeRewardRatio = [];\n    }\n\n    message.referenceCount !== undefined && (obj.referenceCount = message.referenceCount);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n\n    var message = Object.assign({}, baseValidatorHistoricalRewards);\n    message.cumulativeRewardRatio = [];\n\n    if (object.cumulativeRewardRatio !== undefined && object.cumulativeRewardRatio !== null) {\n      var _iterator3 = _createForOfIteratorHelper(object.cumulativeRewardRatio),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var e = _step3.value;\n          message.cumulativeRewardRatio.push(coin_1.DecCoin.fromPartial(e));\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n\n    message.referenceCount = (_a = object.referenceCount) !== null && _a !== void 0 ? _a : 0;\n    return message;\n  }\n};\nvar baseValidatorCurrentRewards = {\n  period: long_1.default.UZERO\n};\nexports.ValidatorCurrentRewards = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    var _iterator4 = _createForOfIteratorHelper(message.rewards),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var v = _step4.value;\n        coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n\n    if (!message.period.isZero()) {\n      writer.uint32(16).uint64(message.period);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseValidatorCurrentRewards);\n    message.rewards = [];\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.rewards.push(coin_1.DecCoin.decode(reader, reader.uint32()));\n          break;\n\n        case 2:\n          message.period = reader.uint64();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseValidatorCurrentRewards);\n    message.rewards = [];\n\n    if (object.rewards !== undefined && object.rewards !== null) {\n      var _iterator5 = _createForOfIteratorHelper(object.rewards),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var e = _step5.value;\n          message.rewards.push(coin_1.DecCoin.fromJSON(e));\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n\n    if (object.period !== undefined && object.period !== null) {\n      message.period = long_1.default.fromString(object.period);\n    } else {\n      message.period = long_1.default.UZERO;\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n\n    if (message.rewards) {\n      obj.rewards = message.rewards.map(function (e) {\n        return e ? coin_1.DecCoin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.rewards = [];\n    }\n\n    message.period !== undefined && (obj.period = (message.period || long_1.default.UZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseValidatorCurrentRewards);\n    message.rewards = [];\n\n    if (object.rewards !== undefined && object.rewards !== null) {\n      var _iterator6 = _createForOfIteratorHelper(object.rewards),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var e = _step6.value;\n          message.rewards.push(coin_1.DecCoin.fromPartial(e));\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n\n    if (object.period !== undefined && object.period !== null) {\n      message.period = object.period;\n    } else {\n      message.period = long_1.default.UZERO;\n    }\n\n    return message;\n  }\n};\nvar baseValidatorAccumulatedCommission = {};\nexports.ValidatorAccumulatedCommission = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    var _iterator7 = _createForOfIteratorHelper(message.commission),\n        _step7;\n\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var v = _step7.value;\n        coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseValidatorAccumulatedCommission);\n    message.commission = [];\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.commission.push(coin_1.DecCoin.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseValidatorAccumulatedCommission);\n    message.commission = [];\n\n    if (object.commission !== undefined && object.commission !== null) {\n      var _iterator8 = _createForOfIteratorHelper(object.commission),\n          _step8;\n\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var e = _step8.value;\n          message.commission.push(coin_1.DecCoin.fromJSON(e));\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n\n    if (message.commission) {\n      obj.commission = message.commission.map(function (e) {\n        return e ? coin_1.DecCoin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.commission = [];\n    }\n\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseValidatorAccumulatedCommission);\n    message.commission = [];\n\n    if (object.commission !== undefined && object.commission !== null) {\n      var _iterator9 = _createForOfIteratorHelper(object.commission),\n          _step9;\n\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var e = _step9.value;\n          message.commission.push(coin_1.DecCoin.fromPartial(e));\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n    }\n\n    return message;\n  }\n};\nvar baseValidatorOutstandingRewards = {};\nexports.ValidatorOutstandingRewards = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    var _iterator10 = _createForOfIteratorHelper(message.rewards),\n        _step10;\n\n    try {\n      for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n        var v = _step10.value;\n        coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator10.e(err);\n    } finally {\n      _iterator10.f();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseValidatorOutstandingRewards);\n    message.rewards = [];\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.rewards.push(coin_1.DecCoin.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseValidatorOutstandingRewards);\n    message.rewards = [];\n\n    if (object.rewards !== undefined && object.rewards !== null) {\n      var _iterator11 = _createForOfIteratorHelper(object.rewards),\n          _step11;\n\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var e = _step11.value;\n          message.rewards.push(coin_1.DecCoin.fromJSON(e));\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n\n    if (message.rewards) {\n      obj.rewards = message.rewards.map(function (e) {\n        return e ? coin_1.DecCoin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.rewards = [];\n    }\n\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseValidatorOutstandingRewards);\n    message.rewards = [];\n\n    if (object.rewards !== undefined && object.rewards !== null) {\n      var _iterator12 = _createForOfIteratorHelper(object.rewards),\n          _step12;\n\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var e = _step12.value;\n          message.rewards.push(coin_1.DecCoin.fromPartial(e));\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n    }\n\n    return message;\n  }\n};\nvar baseValidatorSlashEvent = {\n  validatorPeriod: long_1.default.UZERO,\n  fraction: \"\"\n};\nexports.ValidatorSlashEvent = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (!message.validatorPeriod.isZero()) {\n      writer.uint32(8).uint64(message.validatorPeriod);\n    }\n\n    if (message.fraction !== \"\") {\n      writer.uint32(18).string(message.fraction);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseValidatorSlashEvent);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.validatorPeriod = reader.uint64();\n          break;\n\n        case 2:\n          message.fraction = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseValidatorSlashEvent);\n\n    if (object.validatorPeriod !== undefined && object.validatorPeriod !== null) {\n      message.validatorPeriod = long_1.default.fromString(object.validatorPeriod);\n    } else {\n      message.validatorPeriod = long_1.default.UZERO;\n    }\n\n    if (object.fraction !== undefined && object.fraction !== null) {\n      message.fraction = String(object.fraction);\n    } else {\n      message.fraction = \"\";\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.validatorPeriod !== undefined && (obj.validatorPeriod = (message.validatorPeriod || long_1.default.UZERO).toString());\n    message.fraction !== undefined && (obj.fraction = message.fraction);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n\n    var message = Object.assign({}, baseValidatorSlashEvent);\n\n    if (object.validatorPeriod !== undefined && object.validatorPeriod !== null) {\n      message.validatorPeriod = object.validatorPeriod;\n    } else {\n      message.validatorPeriod = long_1.default.UZERO;\n    }\n\n    message.fraction = (_a = object.fraction) !== null && _a !== void 0 ? _a : \"\";\n    return message;\n  }\n};\nvar baseValidatorSlashEvents = {};\nexports.ValidatorSlashEvents = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    var _iterator13 = _createForOfIteratorHelper(message.validatorSlashEvents),\n        _step13;\n\n    try {\n      for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n        var v = _step13.value;\n        exports.ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator13.e(err);\n    } finally {\n      _iterator13.f();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseValidatorSlashEvents);\n    message.validatorSlashEvents = [];\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.validatorSlashEvents.push(exports.ValidatorSlashEvent.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseValidatorSlashEvents);\n    message.validatorSlashEvents = [];\n\n    if (object.validatorSlashEvents !== undefined && object.validatorSlashEvents !== null) {\n      var _iterator14 = _createForOfIteratorHelper(object.validatorSlashEvents),\n          _step14;\n\n      try {\n        for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n          var e = _step14.value;\n          message.validatorSlashEvents.push(exports.ValidatorSlashEvent.fromJSON(e));\n        }\n      } catch (err) {\n        _iterator14.e(err);\n      } finally {\n        _iterator14.f();\n      }\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n\n    if (message.validatorSlashEvents) {\n      obj.validatorSlashEvents = message.validatorSlashEvents.map(function (e) {\n        return e ? exports.ValidatorSlashEvent.toJSON(e) : undefined;\n      });\n    } else {\n      obj.validatorSlashEvents = [];\n    }\n\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseValidatorSlashEvents);\n    message.validatorSlashEvents = [];\n\n    if (object.validatorSlashEvents !== undefined && object.validatorSlashEvents !== null) {\n      var _iterator15 = _createForOfIteratorHelper(object.validatorSlashEvents),\n          _step15;\n\n      try {\n        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n          var e = _step15.value;\n          message.validatorSlashEvents.push(exports.ValidatorSlashEvent.fromPartial(e));\n        }\n      } catch (err) {\n        _iterator15.e(err);\n      } finally {\n        _iterator15.f();\n      }\n    }\n\n    return message;\n  }\n};\nvar baseFeePool = {};\nexports.FeePool = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    var _iterator16 = _createForOfIteratorHelper(message.communityPool),\n        _step16;\n\n    try {\n      for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n        var v = _step16.value;\n        coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator16.e(err);\n    } finally {\n      _iterator16.f();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseFeePool);\n    message.communityPool = [];\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.communityPool.push(coin_1.DecCoin.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseFeePool);\n    message.communityPool = [];\n\n    if (object.communityPool !== undefined && object.communityPool !== null) {\n      var _iterator17 = _createForOfIteratorHelper(object.communityPool),\n          _step17;\n\n      try {\n        for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n          var e = _step17.value;\n          message.communityPool.push(coin_1.DecCoin.fromJSON(e));\n        }\n      } catch (err) {\n        _iterator17.e(err);\n      } finally {\n        _iterator17.f();\n      }\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n\n    if (message.communityPool) {\n      obj.communityPool = message.communityPool.map(function (e) {\n        return e ? coin_1.DecCoin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.communityPool = [];\n    }\n\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseFeePool);\n    message.communityPool = [];\n\n    if (object.communityPool !== undefined && object.communityPool !== null) {\n      var _iterator18 = _createForOfIteratorHelper(object.communityPool),\n          _step18;\n\n      try {\n        for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n          var e = _step18.value;\n          message.communityPool.push(coin_1.DecCoin.fromPartial(e));\n        }\n      } catch (err) {\n        _iterator18.e(err);\n      } finally {\n        _iterator18.f();\n      }\n    }\n\n    return message;\n  }\n};\nvar baseCommunityPoolSpendProposal = {\n  title: \"\",\n  description: \"\",\n  recipient: \"\"\n};\nexports.CommunityPoolSpendProposal = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.title !== \"\") {\n      writer.uint32(10).string(message.title);\n    }\n\n    if (message.description !== \"\") {\n      writer.uint32(18).string(message.description);\n    }\n\n    if (message.recipient !== \"\") {\n      writer.uint32(26).string(message.recipient);\n    }\n\n    var _iterator19 = _createForOfIteratorHelper(message.amount),\n        _step19;\n\n    try {\n      for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n        var v = _step19.value;\n        coin_1.Coin.encode(v, writer.uint32(34).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator19.e(err);\n    } finally {\n      _iterator19.f();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseCommunityPoolSpendProposal);\n    message.amount = [];\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.title = reader.string();\n          break;\n\n        case 2:\n          message.description = reader.string();\n          break;\n\n        case 3:\n          message.recipient = reader.string();\n          break;\n\n        case 4:\n          message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseCommunityPoolSpendProposal);\n    message.amount = [];\n\n    if (object.title !== undefined && object.title !== null) {\n      message.title = String(object.title);\n    } else {\n      message.title = \"\";\n    }\n\n    if (object.description !== undefined && object.description !== null) {\n      message.description = String(object.description);\n    } else {\n      message.description = \"\";\n    }\n\n    if (object.recipient !== undefined && object.recipient !== null) {\n      message.recipient = String(object.recipient);\n    } else {\n      message.recipient = \"\";\n    }\n\n    if (object.amount !== undefined && object.amount !== null) {\n      var _iterator20 = _createForOfIteratorHelper(object.amount),\n          _step20;\n\n      try {\n        for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n          var e = _step20.value;\n          message.amount.push(coin_1.Coin.fromJSON(e));\n        }\n      } catch (err) {\n        _iterator20.e(err);\n      } finally {\n        _iterator20.f();\n      }\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.title !== undefined && (obj.title = message.title);\n    message.description !== undefined && (obj.description = message.description);\n    message.recipient !== undefined && (obj.recipient = message.recipient);\n\n    if (message.amount) {\n      obj.amount = message.amount.map(function (e) {\n        return e ? coin_1.Coin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.amount = [];\n    }\n\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c;\n\n    var message = Object.assign({}, baseCommunityPoolSpendProposal);\n    message.title = (_a = object.title) !== null && _a !== void 0 ? _a : \"\";\n    message.description = (_b = object.description) !== null && _b !== void 0 ? _b : \"\";\n    message.recipient = (_c = object.recipient) !== null && _c !== void 0 ? _c : \"\";\n    message.amount = [];\n\n    if (object.amount !== undefined && object.amount !== null) {\n      var _iterator21 = _createForOfIteratorHelper(object.amount),\n          _step21;\n\n      try {\n        for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n          var e = _step21.value;\n          message.amount.push(coin_1.Coin.fromPartial(e));\n        }\n      } catch (err) {\n        _iterator21.e(err);\n      } finally {\n        _iterator21.f();\n      }\n    }\n\n    return message;\n  }\n};\nvar baseDelegatorStartingInfo = {\n  previousPeriod: long_1.default.UZERO,\n  stake: \"\",\n  height: long_1.default.UZERO\n};\nexports.DelegatorStartingInfo = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (!message.previousPeriod.isZero()) {\n      writer.uint32(8).uint64(message.previousPeriod);\n    }\n\n    if (message.stake !== \"\") {\n      writer.uint32(18).string(message.stake);\n    }\n\n    if (!message.height.isZero()) {\n      writer.uint32(24).uint64(message.height);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseDelegatorStartingInfo);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.previousPeriod = reader.uint64();\n          break;\n\n        case 2:\n          message.stake = reader.string();\n          break;\n\n        case 3:\n          message.height = reader.uint64();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseDelegatorStartingInfo);\n\n    if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n      message.previousPeriod = long_1.default.fromString(object.previousPeriod);\n    } else {\n      message.previousPeriod = long_1.default.UZERO;\n    }\n\n    if (object.stake !== undefined && object.stake !== null) {\n      message.stake = String(object.stake);\n    } else {\n      message.stake = \"\";\n    }\n\n    if (object.height !== undefined && object.height !== null) {\n      message.height = long_1.default.fromString(object.height);\n    } else {\n      message.height = long_1.default.UZERO;\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.previousPeriod !== undefined && (obj.previousPeriod = (message.previousPeriod || long_1.default.UZERO).toString());\n    message.stake !== undefined && (obj.stake = message.stake);\n    message.height !== undefined && (obj.height = (message.height || long_1.default.UZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n\n    var message = Object.assign({}, baseDelegatorStartingInfo);\n\n    if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n      message.previousPeriod = object.previousPeriod;\n    } else {\n      message.previousPeriod = long_1.default.UZERO;\n    }\n\n    message.stake = (_a = object.stake) !== null && _a !== void 0 ? _a : \"\";\n\n    if (object.height !== undefined && object.height !== null) {\n      message.height = object.height;\n    } else {\n      message.height = long_1.default.UZERO;\n    }\n\n    return message;\n  }\n};\nvar baseDelegationDelegatorReward = {\n  validatorAddress: \"\"\n};\nexports.DelegationDelegatorReward = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.validatorAddress !== \"\") {\n      writer.uint32(10).string(message.validatorAddress);\n    }\n\n    var _iterator22 = _createForOfIteratorHelper(message.reward),\n        _step22;\n\n    try {\n      for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n        var v = _step22.value;\n        coin_1.DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator22.e(err);\n    } finally {\n      _iterator22.f();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseDelegationDelegatorReward);\n    message.reward = [];\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.validatorAddress = reader.string();\n          break;\n\n        case 2:\n          message.reward.push(coin_1.DecCoin.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseDelegationDelegatorReward);\n    message.reward = [];\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = String(object.validatorAddress);\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    if (object.reward !== undefined && object.reward !== null) {\n      var _iterator23 = _createForOfIteratorHelper(object.reward),\n          _step23;\n\n      try {\n        for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n          var e = _step23.value;\n          message.reward.push(coin_1.DecCoin.fromJSON(e));\n        }\n      } catch (err) {\n        _iterator23.e(err);\n      } finally {\n        _iterator23.f();\n      }\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n\n    if (message.reward) {\n      obj.reward = message.reward.map(function (e) {\n        return e ? coin_1.DecCoin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.reward = [];\n    }\n\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n\n    var message = Object.assign({}, baseDelegationDelegatorReward);\n    message.validatorAddress = (_a = object.validatorAddress) !== null && _a !== void 0 ? _a : \"\";\n    message.reward = [];\n\n    if (object.reward !== undefined && object.reward !== null) {\n      var _iterator24 = _createForOfIteratorHelper(object.reward),\n          _step24;\n\n      try {\n        for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n          var e = _step24.value;\n          message.reward.push(coin_1.DecCoin.fromPartial(e));\n        }\n      } catch (err) {\n        _iterator24.e(err);\n      } finally {\n        _iterator24.f();\n      }\n    }\n\n    return message;\n  }\n};\nvar baseCommunityPoolSpendProposalWithDeposit = {\n  title: \"\",\n  description: \"\",\n  recipient: \"\",\n  amount: \"\",\n  deposit: \"\"\n};\nexports.CommunityPoolSpendProposalWithDeposit = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.title !== \"\") {\n      writer.uint32(10).string(message.title);\n    }\n\n    if (message.description !== \"\") {\n      writer.uint32(18).string(message.description);\n    }\n\n    if (message.recipient !== \"\") {\n      writer.uint32(26).string(message.recipient);\n    }\n\n    if (message.amount !== \"\") {\n      writer.uint32(34).string(message.amount);\n    }\n\n    if (message.deposit !== \"\") {\n      writer.uint32(42).string(message.deposit);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseCommunityPoolSpendProposalWithDeposit);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.title = reader.string();\n          break;\n\n        case 2:\n          message.description = reader.string();\n          break;\n\n        case 3:\n          message.recipient = reader.string();\n          break;\n\n        case 4:\n          message.amount = reader.string();\n          break;\n\n        case 5:\n          message.deposit = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseCommunityPoolSpendProposalWithDeposit);\n\n    if (object.title !== undefined && object.title !== null) {\n      message.title = String(object.title);\n    } else {\n      message.title = \"\";\n    }\n\n    if (object.description !== undefined && object.description !== null) {\n      message.description = String(object.description);\n    } else {\n      message.description = \"\";\n    }\n\n    if (object.recipient !== undefined && object.recipient !== null) {\n      message.recipient = String(object.recipient);\n    } else {\n      message.recipient = \"\";\n    }\n\n    if (object.amount !== undefined && object.amount !== null) {\n      message.amount = String(object.amount);\n    } else {\n      message.amount = \"\";\n    }\n\n    if (object.deposit !== undefined && object.deposit !== null) {\n      message.deposit = String(object.deposit);\n    } else {\n      message.deposit = \"\";\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.title !== undefined && (obj.title = message.title);\n    message.description !== undefined && (obj.description = message.description);\n    message.recipient !== undefined && (obj.recipient = message.recipient);\n    message.amount !== undefined && (obj.amount = message.amount);\n    message.deposit !== undefined && (obj.deposit = message.deposit);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c, _d, _e;\n\n    var message = Object.assign({}, baseCommunityPoolSpendProposalWithDeposit);\n    message.title = (_a = object.title) !== null && _a !== void 0 ? _a : \"\";\n    message.description = (_b = object.description) !== null && _b !== void 0 ? _b : \"\";\n    message.recipient = (_c = object.recipient) !== null && _c !== void 0 ? _c : \"\";\n    message.amount = (_d = object.amount) !== null && _d !== void 0 ? _d : \"\";\n    message.deposit = (_e = object.deposit) !== null && _e !== void 0 ? _e : \"\";\n    return message;\n  }\n};\n\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":null,"metadata":{},"sourceType":"script"}