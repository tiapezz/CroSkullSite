{"ast":null,"code":"import _toConsumableArray from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\src\\\\components\\\\Gallery\\\\Gallery.jsx\";\n\nimport { ethers } from 'ethers';\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport store from \"../../redux/store\";\nimport { loadAllSkull, getAttribute, resetSkullList } from \"../../redux/gallery/galleryAction\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDungeon } from '@fortawesome/free-solid-svg-icons';\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport './gallery.css';\nimport { sendNotification } from '../../redux/data/dataActions';\nimport { loadingGif } from './loading.gif';\nimport { faAngleUp, faAngleDown, faQuestionCircle, faExternalLink } from '@fortawesome/free-solid-svg-icons';\nvar ipfsUri480 = \"https://croskull.mypinata.cloud/ipfs/QmWu9bKunKbv8Kkq8wEWGpCaW47oMBbH6ep4ZWBzAxHtgj/\";\n\nvar Gallery = function Gallery() {\n  var dispatch = useDispatch();\n\n  var _store$getState = store.getState(),\n      blockchain = _store$getState.blockchain,\n      gallery = _store$getState.gallery;\n\n  var accountAddress = blockchain.accountAddress,\n      contractDetected = blockchain.contractDetected;\n  var skullsList = gallery.skullsList,\n      attributesList = gallery.attributesList;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalData = _useState2[0],\n      setModalData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      viewInventory = _useState4[0],\n      toggleInventory = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      page = _useState6[0],\n      setPage = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      hasData = _useState8[0],\n      toggleData = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      sort = _useState10[0],\n      setSort = _useState10[1];\n\n  var _useState11 = useState([{\n    name: 'Background',\n    value: []\n  }, {\n    name: 'Skull',\n    value: []\n  }, {\n    name: 'Body',\n    value: []\n  }, {\n    name: 'Nose',\n    value: []\n  }, {\n    name: 'Eyes',\n    value: []\n  }, {\n    name: 'Hat',\n    value: []\n  }, {\n    name: 'Trait',\n    value: []\n  }]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      filter = _useState12[0],\n      setFilter = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      angleIconFilter = _useState14[0],\n      setAngleIconFilter = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      filterModal = _useState16[0],\n      setFilterModal = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      skullModal = _useState18[0],\n      setSkullModal = _useState18[1];\n\n  var _useState19 = useState(true),\n      _useState20 = _slicedToArray(_useState19, 2),\n      spinner = _useState20[0],\n      setSpinner = _useState20[1];\n\n  var _useState21 = useState(),\n      _useState22 = _slicedToArray(_useState21, 2),\n      skullArr = _useState22[0],\n      setSkullArr = _useState22[1];\n\n  useEffect(function () {\n    dispatch(loadAllSkull(page));\n    dispatch(getAttribute());\n    toggleData(true);\n  }, []);\n\n  function openSkullModal(croskull) {\n    setModalData(croskull);\n    setSkullModal(true);\n  }\n\n  function closeSkullModal() {\n    setSkullModal(false);\n  }\n\n  function selectSort(event) {\n    var select = document.getElementById('sortBy');\n    var value = select.selectedIndex;\n    sort = value;\n    setSort(value);\n    loadSkullFilter();\n  }\n\n  var setFilterAngleState = function setFilterAngleState(i) {\n    var ids = _toConsumableArray(angleIconFilter);\n\n    ids[i] = !ids[i];\n    setAngleIconFilter(ids);\n  };\n\n  var ShowCheckbox = function ShowCheckbox(i) {\n    setFilterAngleState(i);\n    var d = document.getElementById(\"filter-checkbox-\" + i);\n    d.style.height = 'auto';\n  };\n\n  function loadSkullFilter() {\n    dispatch(resetSkullList());\n    dispatch(loadAllSkull());\n  }\n\n  function addFilter(name, value) {\n    switch (name) {\n      case 'Background':\n        if (!filter[0].value.includes(value)) filter[0].value.push(value);else {\n          var index = filter[0].value.indexOf(value);\n          filter[0].value.splice(index, 1);\n        }\n        break;\n\n      case 'Skull':\n        if (!filter[1].value.includes(value)) filter[1].value.push(value);else {\n          var _index = filter[1].value.indexOf(value);\n\n          filter[1].value.splice(_index, 1);\n        }\n        break;\n\n      case 'Body':\n        if (!filter[2].value.includes(value)) filter[2].value.push(value);else {\n          var _index2 = filter[2].value.indexOf(value);\n\n          filter[2].value.splice(_index2, 1);\n        }\n        break;\n\n      case 'Nose':\n        if (!filter[3].value.includes(value)) filter[3].value.push(value);else {\n          var _index3 = filter[3].value.indexOf(value);\n\n          filter[3].value.splice(_index3, 1);\n        }\n        break;\n\n      case 'Eyes':\n        if (!filter[4].value.includes(value)) filter[4].value.push(value);else {\n          var _index4 = filter[4].value.indexOf(value);\n\n          filter[4].value.splice(_index4, 1);\n        }\n        break;\n\n      case 'Hat':\n        if (!filter[5].value.includes(value)) filter[5].value.push(value);else {\n          var _index5 = filter[5].value.indexOf(value);\n\n          filter[5].value.splice(_index5, 1);\n        }\n\n      case 'Trait':\n        if (!filter[6].value.includes(value)) filter[6].value.push(value);else {\n          var _index6 = filter[6].value.indexOf(value);\n\n          filter[6].value.splice(_index6, 1);\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    loadSkullFilter();\n  }\n\n  function checkFilter(cr) {\n    var flag = true;\n    filter.map(function (f) {\n      if (f.value.length > 0 && flag) {\n        cr.nft.attributes.map(function (at) {\n          if (at.trait_type == f.name && flag) {\n            if (f.value.includes(at.value)) flag = true;else {\n              flag = false;\n            }\n          }\n        });\n      }\n    });\n    console.log(flag);\n    return flag;\n  }\n\n  function enableFitler() {\n    var f = document.getElementById('filter-container');\n    var s = document.getElementById('skull-box');\n    var b = document.getElementById('filter-button');\n\n    if (f.style.display.includes('none')) {\n      f.style.display = 'block';\n      s.style.display = 'none';\n      b.innerHTML = 'Skulls';\n    } else {\n      f.style.display = 'none';\n      s.style.display = 'block';\n      b.innerHTML = 'Filters';\n    }\n  }\n\n  function clear() {\n    sort = 0;\n    setSort(0);\n    filter.map(function (f) {\n      f.value = [];\n    });\n    var select = document.getElementById('sortBy').options;\n    select[0].selected = true; //seleziono la prima scelta\n\n    attributesList.map(function (attribute, i) {\n      attribute.value.map(function (value) {\n        var s = document.getElementById(attribute.name + '-' + value);\n        console.log(s);\n        s.checked = false;\n      });\n    });\n    loadSkullFilter();\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gallery-container row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, \"Filter\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"skull-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"skull-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-bar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, skullsList ? skullsList.map(function (skull) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: skull.edition,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: ipfsUri480 + skull.edition + '.webp',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 37\n      }\n    }));\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 33\n    }\n  }, \"Loading\")))));\n};\n\nexport default Gallery;","map":{"version":3,"sources":["F:/Mattia/Visual studio/AppCroskull/croskull-nft-marketplace/src/components/Gallery/Gallery.jsx"],"names":["ethers","React","useEffect","useState","useDispatch","store","loadAllSkull","getAttribute","resetSkullList","FontAwesomeIcon","faDungeon","LazyLoadImage","sendNotification","loadingGif","faAngleUp","faAngleDown","faQuestionCircle","faExternalLink","ipfsUri480","Gallery","dispatch","getState","blockchain","gallery","accountAddress","contractDetected","skullsList","attributesList","modalData","setModalData","viewInventory","toggleInventory","page","setPage","hasData","toggleData","sort","setSort","name","value","filter","setFilter","angleIconFilter","setAngleIconFilter","filterModal","setFilterModal","skullModal","setSkullModal","spinner","setSpinner","skullArr","setSkullArr","openSkullModal","croskull","closeSkullModal","selectSort","event","select","document","getElementById","selectedIndex","loadSkullFilter","setFilterAngleState","i","ids","ShowCheckbox","d","style","height","addFilter","includes","push","index","indexOf","splice","checkFilter","cr","flag","map","f","length","nft","attributes","at","trait_type","console","log","enableFitler","s","b","display","innerHTML","clear","options","selected","attribute","checked","skull","edition"],"mappings":"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","sourcesContent":["import { ethers } from 'ethers';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport store from \"../../redux/store\";\r\nimport { loadAllSkull, getAttribute,resetSkullList } from \"../../redux/gallery/galleryAction\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faDungeon } from '@fortawesome/free-solid-svg-icons';\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport './gallery.css';\r\nimport { sendNotification } from '../../redux/data/dataActions';\r\nimport {loadingGif} from './loading.gif';\r\nimport { faAngleUp, faAngleDown, faQuestionCircle, faExternalLink } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ipfsUri480 = \"https://croskull.mypinata.cloud/ipfs/QmWu9bKunKbv8Kkq8wEWGpCaW47oMBbH6ep4ZWBzAxHtgj/\"\r\nconst Gallery = () => {\r\n    let dispatch = useDispatch();\r\n\r\n    let { blockchain, gallery } = store.getState()\r\n    let { accountAddress, contractDetected } = blockchain;\r\n    let { skullsList, attributesList } = gallery;\r\n    let [modalData, setModalData] = useState()\r\n    const [viewInventory, toggleInventory] = useState(false)\r\n    let [page, setPage] = useState(0);\r\n    const [hasData, toggleData] = useState(false)\r\n    let [sort, setSort] = useState(0);\r\n    let [filter, setFilter] = useState([\r\n        { name: 'Background', value: [] },\r\n        { name: 'Skull', value: [] },\r\n        { name: 'Body', value: [] },\r\n        { name: 'Nose', value: [] },\r\n        { name: 'Eyes', value: [] },\r\n        { name: 'Hat', value: [] },\r\n        { name: 'Trait', value: [] }\r\n    ]);\r\n    let [angleIconFilter, setAngleIconFilter] = useState([]);\r\n    let [filterModal, setFilterModal] = useState(false);\r\n    let [skullModal, setSkullModal] = useState(false);\r\n    let [spinner, setSpinner] = useState(true);\r\n    let [skullArr, setSkullArr] = useState();\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(loadAllSkull(page))\r\n        dispatch(getAttribute())\r\n        toggleData(true)\r\n    }, [])\r\n\r\n\r\n\r\n    function openSkullModal(croskull) {\r\n        setModalData(croskull);\r\n        setSkullModal(true);\r\n    }\r\n\r\n    function closeSkullModal() {\r\n        setSkullModal(false);\r\n    }\r\n\r\n    function selectSort(event) {\r\n        const select = document.getElementById('sortBy');\r\n        let value = select.selectedIndex;\r\n        sort = value;\r\n        setSort(value);\r\n\r\n        loadSkullFilter();\r\n\r\n    }\r\n\r\n    const setFilterAngleState = (i) => {\r\n        let ids = [...angleIconFilter];\r\n        ids[i] = !ids[i];\r\n        setAngleIconFilter(ids);\r\n    }\r\n\r\n    const ShowCheckbox = (i) => {\r\n        setFilterAngleState(i);\r\n        let d = document.getElementById(\"filter-checkbox-\" + i);\r\n        d.style.height = 'auto';\r\n\r\n    }\r\n\r\n\r\n    function loadSkullFilter() {\r\n        dispatch(resetSkullList());\r\n        dispatch(loadAllSkull());\r\n    }\r\n\r\n    function addFilter(name, value) {\r\n        switch (name) {\r\n            case 'Background':\r\n                if (!filter[0].value.includes(value))\r\n                    filter[0].value.push(value);\r\n                else {\r\n                    const index = filter[0].value.indexOf(value);\r\n                    filter[0].value.splice(index, 1);\r\n                }\r\n                break;\r\n            case 'Skull':\r\n                if (!filter[1].value.includes(value))\r\n                    filter[1].value.push(value);\r\n                else {\r\n                    const index = filter[1].value.indexOf(value);\r\n                    filter[1].value.splice(index, 1);\r\n                }\r\n                break;\r\n            case 'Body':\r\n                if (!filter[2].value.includes(value))\r\n                    filter[2].value.push(value);\r\n                else {\r\n                    const index = filter[2].value.indexOf(value);\r\n                    filter[2].value.splice(index, 1);\r\n                }\r\n                break;\r\n            case 'Nose':\r\n                if (!filter[3].value.includes(value))\r\n                    filter[3].value.push(value);\r\n                else {\r\n                    const index = filter[3].value.indexOf(value);\r\n                    filter[3].value.splice(index, 1);\r\n                }\r\n                break;\r\n            case 'Eyes':\r\n                if (!filter[4].value.includes(value))\r\n                    filter[4].value.push(value);\r\n                else {\r\n                    const index = filter[4].value.indexOf(value);\r\n                    filter[4].value.splice(index, 1);\r\n                }\r\n                break;\r\n            case 'Hat':\r\n                if (!filter[5].value.includes(value))\r\n                    filter[5].value.push(value);\r\n                else {\r\n                    const index = filter[5].value.indexOf(value);\r\n                    filter[5].value.splice(index, 1);\r\n                }\r\n            case 'Trait':\r\n                if (!filter[6].value.includes(value))\r\n                    filter[6].value.push(value);\r\n                else {\r\n                    const index = filter[6].value.indexOf(value);\r\n                    filter[6].value.splice(index, 1);\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        loadSkullFilter();\r\n    }\r\n\r\n    function checkFilter(cr) {\r\n        let flag = true;\r\n        filter.map(f => {\r\n            if (f.value.length > 0 && flag) {\r\n                cr.nft.attributes.map(at => {\r\n                    if (at.trait_type == f.name && flag) {\r\n                        if (f.value.includes(at.value))\r\n                            flag = true\r\n                        else {\r\n                            flag = false;\r\n                        }\r\n                    }\r\n                })\r\n\r\n            }\r\n        })\r\n        console.log(flag);\r\n        return flag;\r\n    }\r\n\r\n    function enableFitler() {\r\n        let f = document.getElementById('filter-container');\r\n        let s = document.getElementById('skull-box');\r\n        let b = document.getElementById('filter-button')\r\n        if(f.style.display.includes('none'))\r\n            {\r\n                f.style.display = 'block';\r\n                s.style.display = 'none';\r\n                b.innerHTML = 'Skulls';\r\n            }\r\n        else{\r\n            f.style.display = 'none';\r\n            s.style.display = 'block';\r\n            b.innerHTML = 'Filters'\r\n        }\r\n    }\r\n\r\n    function clear() {\r\n        sort=0;\r\n        setSort(0);\r\n        filter.map((f)=>{\r\n            f.value =[];\r\n        })\r\n        let select = document.getElementById('sortBy').options;\r\n        select[0].selected = true; //seleziono la prima scelta\r\n        attributesList.map((attribute,i) =>{\r\n            attribute.value.map(value =>{\r\n                let s = document.getElementById(attribute.name + '-' + value);\r\n                console.log(s);\r\n                s.checked = false;\r\n            })\r\n        \r\n        })\r\n        loadSkullFilter();\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className='gallery-container row'>\r\n            <div className='filter-container'>\r\n                <h1>Filter</h1>\r\n            </div>\r\n            <div className='skull-container'>\r\n                <div className='skull-header'>\r\n\r\n                </div>\r\n                <div className='filter-bar'>\r\n\r\n                </div>\r\n                <div className='row'>\r\n                    {\r\n                        skullsList ? \r\n                        (\r\n                            skullsList.map(skull =>{\r\n                                return(\r\n                                <div key={skull.edition}>\r\n                                    <img src={ipfsUri480+skull.edition+'.webp'} />\r\n                                </div>\r\n                                )\r\n                            })\r\n\r\n                            ) :\r\n                            (\r\n                                <div>\r\n                                    Loading\r\n                                </div>\r\n                            )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        </ >\r\n    )\r\n}\r\n\r\nexport default Gallery;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}