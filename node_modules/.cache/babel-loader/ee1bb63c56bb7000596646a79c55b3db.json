{"ast":null,"code":"import _objectSpread from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\src\\\\components\\\\Marketplace\\\\Marketplace.jsx\";\n\nimport { ethers } from 'ethers';\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport store from \"../../redux/store\";\nimport { loadEbisusData, loadEbisusSkulls, loadEbisusBlue, loadEbisusRed, purchaseItem } from \"../../redux/marketplace/marketplaceActions\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDungeon } from '@fortawesome/free-solid-svg-icons';\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport './marketplace.css';\nimport { sendNotification } from '../../redux/data/dataActions';\nvar ipfsUri480 = \"https://croskull.mypinata.cloud/ipfs/QmWu9bKunKbv8Kkq8wEWGpCaW47oMBbH6ep4ZWBzAxHtgj/\";\nvar ipfsUri128 = \"https://croskull.mypinata.cloud/ipfs/QmZn1HvYE1o1J8LhNpxFTj5k8LQb2bWT49YvbrhB3r19Xx/\";\nvar blueImage = \"https://croskull.mypinata.cloud/ipfs/QmPvie22kUv9A7PcXFLbGtGBYuNiFdvQdUvVZZLNA59tbG/bluepotion.gif\";\nvar redImage = \"https://croskull.mypinata.cloud/ipfs/QmRdN5CQTpogBtjtnXq3PLrF7A4LezZ1TPt3ynXybcNNZP/redpotion.gif\";\n\nvar Marketplace = function Marketplace() {\n  var dispatch = useDispatch();\n\n  var _store$getState = store.getState(),\n      blockchain = _store$getState.blockchain,\n      marketplace = _store$getState.marketplace;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalMarket = _useState2[0],\n      setModalMarket = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      viewInventory = _useState4[0],\n      toggleInventory = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      hasData = _useState6[0],\n      toggleData = _useState6[1];\n\n  useEffect(function () {\n    if (hasData) return;\n    dispatch(loadEbisusData());\n    toggleData(true);\n  }, []);\n\n  var handlePurchase = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id, type) {\n      var contractDetected, ebisusMarketplace, accountBalance, saleSkulls, saleBlue, saleRed, items, _items$id, price, nftId, listingId, formattedPrice, formattedBalance;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              contractDetected = blockchain.contractDetected, ebisusMarketplace = blockchain.ebisusMarketplace, accountBalance = blockchain.accountBalance;\n              saleSkulls = marketplace.saleSkulls, saleBlue = marketplace.saleBlue, saleRed = marketplace.saleRed;\n              _context.t0 = type;\n              _context.next = _context.t0 === 'skull' ? 5 : _context.t0 === 'blue' ? 7 : _context.t0 === 'red' ? 9 : 11;\n              break;\n\n            case 5:\n              items = saleSkulls;\n              return _context.abrupt(\"break\", 11);\n\n            case 7:\n              items = saleBlue;\n              return _context.abrupt(\"break\", 11);\n\n            case 9:\n              items = saleRed;\n              return _context.abrupt(\"break\", 11);\n\n            case 11:\n              console.log(id, type, items[id]);\n\n              if (items && items[id]) {\n                _items$id = items[id], price = _items$id.price, nftId = _items$id.nftId, listingId = _items$id.listingId;\n                formattedPrice = ethers.utils.parseUnits(price, 18);\n                formattedBalance = accountBalance ? ethers.utils.parseUnits(accountBalance, 0) : false;\n\n                if (formattedBalance && formattedBalance.gte(formattedPrice)) {\n                  dispatch(purchaseItem({\n                    _listingId: listingId,\n                    _cost: formattedPrice,\n                    _skullId: nftId\n                  }));\n                } else {\n                  console.log(false);\n                  dispatch(sendNotification({\n                    title: \"Insufficient balance\",\n                    type: \"info\",\n                    tx: '',\n                    message: \"You need \".concat(price, \" CRO\")\n                  }));\n                }\n              }\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handlePurchase(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var _useState7 = useState({\n    currentView: 'croskull',\n    //croskull, bluepotion, redpotion, petegg,\n    selectedSkulls: [],\n    selectedStakeSkulls: []\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      viewState = _useState8[0],\n      setViewState = _useState8[1];\n\n  function openModal(cr) {\n    setModalMarket(cr);\n    document.getElementById('modal-market').style.visibility = 'visible';\n    console.log(cr);\n  }\n\n  function closeModal() {\n    document.getElementById('modal-market').style.display = 'hidden';\n  }\n\n  var accountAddress = blockchain.accountAddress,\n      contractDetected = blockchain.contractDetected;\n  var saleSkulls = marketplace.saleSkulls,\n      saleBlue = marketplace.saleBlue,\n      saleRed = marketplace.saleRed,\n      blueForSales = marketplace.blueForSales,\n      redForSales = marketplace.redForSales,\n      skullAvgPrice = marketplace.skullAvgPrice,\n      skullFloorPrice = marketplace.skullFloorPrice,\n      skullForSales = marketplace.skullForSales,\n      skullSolds = marketplace.skullSolds,\n      skullTotalVolume = marketplace.skullTotalVolume,\n      loading = marketplace.loading;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"modal-market\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mMarket-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Croskull\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Attributo: value\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return closeModal();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"X\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-flex sk-row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-container wd-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-head\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"sk-row view-list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"skull-button view-button \".concat(viewState.currentView === 'croskull' ? 'active' : ''),\n    onClick: function onClick() {\n      setViewState(_objectSpread({}, viewState, {\n        currentView: 'croskull'\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, saleSkulls && skullForSales > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"floating-counter\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 33\n    }\n  }, skullForSales) : '', \"CroSkulls\"), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"skull-button view-button \".concat(viewState.currentView === 'bluepotion' ? 'active' : ''),\n    onClick: function onClick() {\n      setViewState(_objectSpread({}, viewState, {\n        currentView: 'bluepotion'\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  }, saleBlue.length && blueForSales > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"floating-counter\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 37\n    }\n  }, blueForSales) : '', \"Blue Potions\"), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"skull-button view-button \".concat(viewState.currentView === 'redpotion' ? 'active' : ''),\n    onClick: function onClick() {\n      setViewState(_objectSpread({}, viewState, {\n        currentView: 'redpotion'\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, saleRed.length && redForSales > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"floating-counter\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 37\n    }\n  }, redForSales) : '', \"Red Potions\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box-content sk-column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"skulls-list in-tavern \".concat(viewState.currentView === 'croskull' ? \"active\" : \"\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-row skull-grid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 29\n    }\n  }, saleSkulls.length > 0 ? saleSkulls.map(function (cr, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"skull-item\",\n      onClick: function onClick() {\n        return openModal(cr);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(LazyLoadImage, {\n      src: \"\".concat(ipfsUri480).concat(cr.nftId, \".webp\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"floating-badges-container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge id\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 49\n      }\n    }, cr.nftId), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge rank\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 49\n      }\n    }, \"Price \", cr.price)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bottom-actions\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"skull-button mission-button\",\n      onClick: function onClick() {\n        handlePurchase(index, 'skull');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faDungeon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 53\n      }\n    }), \"Purchase\"))));\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-flex sk-column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 37\n    }\n  }, loading ? \"Loading...\" : '')), saleSkulls.length < skullForSales ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"skull-button load-more\",\n    onClick: function onClick() {\n      dispatch(loadEbisusSkulls());\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 37\n    }\n  }, \"Load More\") : '')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"skulls-list in-tavern \".concat(viewState.currentView === 'bluepotion' ? \"active\" : \"\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-row skull-grid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 29\n    }\n  }, saleBlue.length > 0 ? saleBlue.map(function (cr, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"skull-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(LazyLoadImage, {\n      src: \"\".concat(blueImage),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"floating-badges-container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge id\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 49\n      }\n    }, cr.nftId), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge rank\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 49\n      }\n    }, \"Price \", cr.price)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bottom-actions\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"skull-button mission-button\",\n      onClick: function onClick() {\n        handlePurchase(index, 'blue');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faDungeon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 53\n      }\n    }), \"Purchase\"))));\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-flex sk-column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 37\n    }\n  }, loading ? \"Loading...\" : '')), saleSkulls.length < skullForSales ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"skull-button load-more\",\n    onClick: function onClick() {\n      dispatch(loadEbisusBlue());\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 37\n    }\n  }, \"Load More\") : '')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"skulls-list in-tavern \".concat(viewState.currentView === 'redpotion' ? \"active\" : \"\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-row skull-grid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 29\n    }\n  }, saleRed.length > 0 ? saleRed.map(function (cr, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"skull-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(LazyLoadImage, {\n      src: \"\".concat(redImage),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"floating-badges-container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge id\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 49\n      }\n    }, cr.nftId), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge rank\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 49\n      }\n    }, \"Price \", cr.price)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bottom-actions\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"skull-button mission-button\",\n      onClick: function onClick() {\n        handlePurchase(index, 'red');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faDungeon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 53\n      }\n    }), \"Purchase\"))));\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-flex sk-column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 37\n    }\n  }, loading ? \"Loading...\" : '')), saleSkulls.length < skullForSales ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"skull-button load-more\",\n    onClick: function onClick() {\n      dispatch(loadEbisusRed());\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 37\n    }\n  }, \"Load More\") : '')))))), false ? '' : '');\n};\n\nexport default Marketplace;","map":{"version":3,"sources":["F:/Mattia/Visual studio/AppCroskull/croskull-nft-marketplace/src/components/Marketplace/Marketplace.jsx"],"names":["ethers","React","useEffect","useState","useDispatch","store","loadEbisusData","loadEbisusSkulls","loadEbisusBlue","loadEbisusRed","purchaseItem","FontAwesomeIcon","faDungeon","LazyLoadImage","sendNotification","ipfsUri480","ipfsUri128","blueImage","redImage","Marketplace","dispatch","getState","blockchain","marketplace","modalMarket","setModalMarket","viewInventory","toggleInventory","hasData","toggleData","handlePurchase","id","type","contractDetected","ebisusMarketplace","accountBalance","saleSkulls","saleBlue","saleRed","items","console","log","price","nftId","listingId","formattedPrice","utils","parseUnits","formattedBalance","gte","_listingId","_cost","_skullId","title","tx","message","currentView","selectedSkulls","selectedStakeSkulls","viewState","setViewState","openModal","cr","document","getElementById","style","visibility","closeModal","display","accountAddress","blueForSales","redForSales","skullAvgPrice","skullFloorPrice","skullForSales","skullSolds","skullTotalVolume","loading","length","map","index"],"mappings":"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","sourcesContent":["import { ethers } from 'ethers';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport store from \"../../redux/store\";\r\nimport { loadEbisusData, loadEbisusSkulls, loadEbisusBlue, loadEbisusRed, purchaseItem } from \"../../redux/marketplace/marketplaceActions\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faDungeon } from '@fortawesome/free-solid-svg-icons';\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport './marketplace.css';\r\nimport { sendNotification } from '../../redux/data/dataActions';\r\n\r\nconst ipfsUri480 = \"https://croskull.mypinata.cloud/ipfs/QmWu9bKunKbv8Kkq8wEWGpCaW47oMBbH6ep4ZWBzAxHtgj/\"\r\nconst ipfsUri128 = \"https://croskull.mypinata.cloud/ipfs/QmZn1HvYE1o1J8LhNpxFTj5k8LQb2bWT49YvbrhB3r19Xx/\"\r\nconst blueImage = \"https://croskull.mypinata.cloud/ipfs/QmPvie22kUv9A7PcXFLbGtGBYuNiFdvQdUvVZZLNA59tbG/bluepotion.gif\";\r\nconst redImage = \"https://croskull.mypinata.cloud/ipfs/QmRdN5CQTpogBtjtnXq3PLrF7A4LezZ1TPt3ynXybcNNZP/redpotion.gif\";\r\nconst Marketplace = () => {\r\n    let dispatch = useDispatch()\r\n    let { blockchain, marketplace } = store.getState()\r\n    let [modalMarket,setModalMarket] = useState()\r\n    const [viewInventory, toggleInventory] = useState( false )\r\n    const [hasData, toggleData] = useState(false)\r\n\r\n    useEffect( () => {\r\n        if( hasData ) return \r\n        dispatch(loadEbisusData())\r\n        toggleData(true)\r\n    }, [])\r\n\r\n    const handlePurchase = async ( id, type ) => {\r\n        let { contractDetected, ebisusMarketplace, accountBalance } = blockchain\r\n        let { saleSkulls, saleBlue, saleRed } = marketplace\r\n        let items;\r\n        switch( type ){\r\n            case 'skull':{\r\n                items = saleSkulls\r\n                break;\r\n            }\r\n            case 'blue':{\r\n                items = saleBlue\r\n                break;\r\n            }\r\n            case 'red':{\r\n                items = saleRed\r\n                break;\r\n            }\r\n        }\r\n        console.log( id, type, items[id])\r\n        if( items && items[id] ){\r\n            let { price, nftId, listingId } = items[id]\r\n            let formattedPrice = ethers.utils.parseUnits( price, 18 )\r\n            let formattedBalance = accountBalance ? ethers.utils.parseUnits( accountBalance, 0 ) : false;\r\n            if( formattedBalance && formattedBalance.gte(formattedPrice)){\r\n                dispatch(purchaseItem({\r\n                    _listingId: listingId,\r\n                    _cost: formattedPrice,\r\n                    _skullId: nftId\r\n                }))\r\n            }else{\r\n                console.log( false )\r\n                dispatch(sendNotification({\r\n                    title: `Insufficient balance`,\r\n                    type: \"info\",\r\n                    tx: '',\r\n                    message: `You need ${price} CRO`\r\n                  }))\r\n            }\r\n        }\r\n    }\r\n\r\n    const [viewState, setViewState] = useState( {\r\n        currentView: 'croskull', //croskull, bluepotion, redpotion, petegg,\r\n        selectedSkulls: [],\r\n        selectedStakeSkulls: []\r\n    })\r\n    \r\n    function openModal(cr) {\r\n        setModalMarket(cr);\r\n        document.getElementById('modal-market').style.visibility = 'visible';\r\n        console.log(cr);\r\n\r\n    }\r\n\r\n    function closeModal(){\r\n        document.getElementById('modal-market').style.display = 'hidden';\r\n    }\r\n\r\n    let { accountAddress, contractDetected } = blockchain\r\n    let { saleSkulls, saleBlue, saleRed, blueForSales, redForSales, skullAvgPrice, skullFloorPrice, skullForSales, skullSolds, skullTotalVolume, loading } = marketplace\r\n    return (\r\n        <>\r\n        <div id='modal-market'>\r\n            <div className='mMarket-container'>\r\n            <h1>Croskull</h1>\r\n            <p>Attributo: value</p>\r\n            <button onClick={() => closeModal()}>X</button>\r\n            </div>\r\n        </div>\r\n        <div className=\"sk-flex sk-row\">\r\n            <div className=\"sk-container wd-100\">\r\n                <div className=\"sk-box\">\r\n                    <div className=\"tab-head\">\r\n                        <ul className=\"sk-row view-list\">\r\n                            <li className={`skull-button view-button ${ viewState.currentView === 'croskull' ? 'active' : ''}`}\r\n                                onClick={ () => {\r\n                                    setViewState( {\r\n                                    ...viewState,\r\n                                    currentView: 'croskull'\r\n                                    } )\r\n                                }}\r\n                            >\r\n                            { \r\n                                saleSkulls && skullForSales > 0 ? (\r\n                                <span className=\"floating-counter\">{skullForSales}</span>\r\n                                ) : \r\n                                '' \r\n                            }\r\n                                CroSkulls \r\n                            </li>\r\n                            <li\r\n                                className={`skull-button view-button ${ viewState.currentView === 'bluepotion' ? 'active' : ''}`}\r\n                                onClick={ () => {\r\n                                    setViewState( {\r\n                                    ...viewState,\r\n                                    currentView: 'bluepotion'\r\n                                    } )\r\n                                }}\r\n                            >\r\n                            { \r\n                                saleBlue.length && blueForSales > 0 ? (\r\n                                    <span className=\"floating-counter\">{blueForSales}</span>\r\n                                ) : \r\n                                '' \r\n                            }\r\n                                Blue Potions\r\n                            </li>\r\n                            <li\r\n                                className={`skull-button view-button ${ viewState.currentView === 'redpotion' ? 'active' : ''}`}\r\n                                onClick={ () => {\r\n                                    setViewState( {\r\n                                    ...viewState,\r\n                                    currentView: 'redpotion'\r\n                                    } )\r\n                                }}\r\n                            >\r\n                            { \r\n                                saleRed.length && redForSales > 0 ? (\r\n                                    <span className=\"floating-counter\">{redForSales}</span>\r\n                                ) : \r\n                                '' \r\n                            }\r\n                                Red Potions\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"sk-box-content sk-column\">\r\n                        <div className={`skulls-list in-tavern ${ viewState.currentView === 'croskull' ? `active` : `` }`}>\r\n                            <div className=\"sk-row skull-grid\">\r\n                            {\r\n                                saleSkulls.length > 0 ?\r\n                                (saleSkulls).map((cr, index) => {\r\n                                return (\r\n                                    <div key={index} className=\"skull-item\" onClick={() => openModal(cr)}>\r\n                                        <div \r\n                                            className=\"card\"\r\n                                            >\r\n                                            <LazyLoadImage\r\n                                            src={`${ipfsUri480}${cr.nftId}.webp`}\r\n                                            />\r\n                                            <div className=\"floating-badges-container\">\r\n                                                <span className=\"badge id\">{cr.nftId}</span>\r\n                                                <span className=\"badge rank\">Price {cr.price}</span>\r\n                                            </div>\r\n                                            <div className=\"bottom-actions\">\r\n                                                <button \r\n                                                    className=\"skull-button mission-button\"\r\n                                                    onClick={ () => {\r\n                                                        handlePurchase( index, 'skull' )\r\n                                                    }}\r\n                                                > \r\n                                                    <FontAwesomeIcon icon={faDungeon} /> \r\n                                                    Purchase\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    );\r\n                                })\r\n                                : (\r\n                                <div className=\"sk-flex sk-column\">\r\n                                    <span>{ loading ? `Loading...` : ''  }</span>\r\n                                </div>\r\n                                )\r\n                            }\r\n                            {\r\n                                saleSkulls.length < skullForSales ? (\r\n                                    <button\r\n                                        className=\"skull-button load-more\"\r\n                                        onClick={ () => {\r\n                                            dispatch(loadEbisusSkulls())\r\n                                        }}\r\n                                    >\r\n                                        Load More\r\n                                    </button>\r\n                                ) : (\r\n                                    ''\r\n                                )\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                        <div className={`skulls-list in-tavern ${ viewState.currentView === 'bluepotion' ? `active` : `` }`}>\r\n                            <div className=\"sk-row skull-grid\">\r\n                            {\r\n                                saleBlue.length > 0 ?\r\n                                (saleBlue).map((cr, index) => {\r\n                                return (\r\n                                    <div key={index} className=\"skull-item\" >\r\n                                        <div \r\n                                            className=\"card\"\r\n                                            >\r\n                                            <LazyLoadImage\r\n                                                src={`${blueImage}`}\r\n                                            />\r\n                                            <div className=\"floating-badges-container\">\r\n                                                <span className=\"badge id\">{cr.nftId}</span>\r\n                                                <span className=\"badge rank\">Price {cr.price}</span>\r\n                                            </div>\r\n                                            <div className=\"bottom-actions\">\r\n                                                <button \r\n                                                    className=\"skull-button mission-button\"\r\n                                                    onClick={ () => {\r\n                                                        handlePurchase( index, 'blue' )\r\n                                                    }}\r\n                                                > \r\n                                                    <FontAwesomeIcon icon={faDungeon} /> \r\n                                                    Purchase\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    );\r\n                                })\r\n                                : (\r\n                                <div className=\"sk-flex sk-column\">\r\n                                    <span>{ loading ? `Loading...` : ''  }</span>\r\n                                </div>\r\n                                )\r\n                            }\r\n                            {\r\n                                saleSkulls.length < skullForSales ? (\r\n                                    <button\r\n                                        className=\"skull-button load-more\"\r\n                                        onClick={ () => {\r\n                                            dispatch(loadEbisusBlue())\r\n                                        }}\r\n                                    >\r\n                                        Load More\r\n                                    </button>\r\n                                ) : (\r\n                                    ''\r\n                                )\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                        <div className={`skulls-list in-tavern ${ viewState.currentView === 'redpotion' ? `active` : `` }`}>\r\n                            <div className=\"sk-row skull-grid\">\r\n                            {\r\n                                saleRed.length > 0 ?\r\n                                (saleRed).map((cr, index) => {\r\n                                return (\r\n                                    <div key={index} className=\"skull-item\" >\r\n                                        <div \r\n                                            className=\"card\"\r\n                                            >\r\n                                            <LazyLoadImage\r\n                                                src={`${redImage}`}\r\n                                            />\r\n                                            <div className=\"floating-badges-container\">\r\n                                                <span className=\"badge id\">{cr.nftId}</span>\r\n                                                <span className=\"badge rank\">Price {cr.price}</span>\r\n                                            </div>\r\n                                            <div className=\"bottom-actions\">\r\n                                                <button \r\n                                                    className=\"skull-button mission-button\"\r\n                                                    onClick={ () => {\r\n                                                        handlePurchase( index, 'red' )\r\n                                                    }}\r\n                                                > \r\n                                                    <FontAwesomeIcon icon={faDungeon} /> \r\n                                                    Purchase\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    );\r\n                                })\r\n                                : (\r\n                                <div className=\"sk-flex sk-column\">\r\n                                    <span>{ loading ? `Loading...` : ''  }</span>\r\n                                </div>\r\n                                )\r\n                            }\r\n                            {\r\n                                saleSkulls.length < skullForSales ? (\r\n                                    <button\r\n                                        className=\"skull-button load-more\"\r\n                                        onClick={ () => {\r\n                                            dispatch(loadEbisusRed())\r\n                                        }}\r\n                                    >\r\n                                        Load More\r\n                                    </button>\r\n                                ) : (\r\n                                    ''\r\n                                )\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        { false ? (\r\n            '' ) : ('')}\r\n        </ >\r\n    )\r\n}\r\n\r\nexport default Marketplace;\r\n"]},"metadata":{},"sourceType":"module"}