{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\src\\\\components\\\\Bank\\\\Bank.jsx\";\n\nimport React, { useEffect, useState } from \"react\";\nimport store from \"../../redux/store\";\nimport { useDispatch } from \"react-redux\";\nimport { playSound } from \"../../redux/data/dataActions\";\nimport { ethers } from 'ethers';\nimport Grave from \"../Navbar/grave.png\";\nimport GraveCro from \"./grve-cro-pair.png\";\nimport Rude from \"./rude.png\";\nimport CoinSound from \"./collect-coin.mp3\";\nimport Wishbone from \"../../images/wishbone.png\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleUp, faAngleDown, faQuestionCircle, faExternalLink } from '@fortawesome/free-solid-svg-icons';\nimport Hut from \"./hut.png\";\nimport House from \"./house.png\";\nimport Villa from \"./villa.png\";\nimport FarmHouse from \"./farmhouse.png\";\nimport Mansion from \"./mansion.png\";\nimport MetricContainer from \"../MetricContainer/MetricContainer\";\nimport { loadBankData, loadFarmData } from \"../../redux/bank/bankActions\";\nimport { sendNotification } from \"../../redux/data/dataActions\";\nimport { loadDexData } from \"../../redux/dexscreener/dexscreenerActions\";\nimport './Bank.css';\nvar mmfLink = \"https://mm.finance/swap?outputCurrency=0x9885488cd6864df90eeba6c5d07b35f08ceb05e9\";\n\nvar Bank = function Bank(_ref) {\n  var accountAddress = _ref.accountAddress;\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      detailsView = _useState2[0],\n      setDetailsView = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      detailsView2 = _useState4[0],\n      setDetailsView2 = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      angleIconFarm = _useState6[0],\n      setAngleIconFarm = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      angleIconPool = _useState8[0],\n      setAngleIconPool = _useState8[1];\n\n  var _store$getState = store.getState(),\n      blockchain = _store$getState.blockchain,\n      bank = _store$getState.bank,\n      data = _store$getState.data,\n      dexscreener = _store$getState.dexscreener;\n\n  var croSkullsBank = blockchain.croSkullsBank,\n      croSkullsGrave = blockchain.croSkullsGrave,\n      croSkullsFarm = blockchain.croSkullsFarm,\n      lpPair = blockchain.lpPair,\n      formatEther = blockchain.formatEther;\n  var graveInUsd = dexscreener.graveInUsd;\n  var userGraveBalance = data.userGraveBalance;\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      simulated = _useState10[0],\n      setSimulated = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      loading = _useState12[0],\n      setLoading = _useState12[1];\n\n  var _useState13 = useState({\n    amountToStake: 0,\n    amountToUnstake: 0\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      farmView = _useState14[0],\n      setfarmView = _useState14[1];\n\n  var _useState15 = useState({\n    amount: 0,\n    wishbones: 0,\n    duration: 0\n  }),\n      _useState16 = _slicedToArray(_useState15, 2),\n      currentContract = _useState16[0],\n      setContract = _useState16[1];\n\n  useEffect(function () {\n    dispatch(loadBankData());\n    dispatch(loadFarmData());\n    if (!graveInUsd) dispatch(loadDexData());\n  }, [croSkullsBank]);\n\n  var handleFieldChange = function handleFieldChange(event) {\n    var value = event.target ? event.target.value : 0;\n    var name = event.target ? event.target.id : 0;\n    setContract(_objectSpread({}, currentContract, _defineProperty({}, name, value)));\n  };\n\n  var handleStakeLPChange = function handleStakeLPChange(event) {\n    var value = event.target ? event.target.value : 0;\n    var name = event.target ? event.target.id : 0;\n    setfarmView(_objectSpread({}, farmView, _defineProperty({}, name, value)));\n  };\n\n  var getMax = function getMax() {\n    console.log(lpPairBalance);\n    setfarmView(_objectSpread({}, farmView, {\n      amountToStake: formatEther(lpPairBalance)\n    }));\n  };\n\n  var getMaxStaked = function getMaxStaked() {\n    setfarmView(_objectSpread({}, farmView, {\n      amountToUnstake: formatEther(stakedAmount)\n    }));\n  };\n\n  var EnablePool = function EnablePool(i) {\n    setPoolAngleState(i);\n    var d = document.getElementById(\"pool-\" + i);\n    setDetailsView2(false);\n\n    if (d.getAttribute('class').includes('wrapped')) {\n      d.setAttribute('class', 'pool-container');\n    } else {\n      d.setAttribute('class', 'data-container-wrapped');\n    }\n  };\n\n  var setFarmAngleState = function setFarmAngleState(i) {\n    var ids = _toConsumableArray(angleIconFarm);\n\n    ids[i] = !ids[i];\n    setAngleIconFarm(ids);\n  };\n\n  var setPoolAngleState = function setPoolAngleState(i) {\n    var ids = _toConsumableArray(angleIconPool);\n\n    ids[i - 1] = !ids[i - 1];\n    setAngleIconPool(ids);\n  };\n\n  function timeConverter(UNIX_timestamp) {\n    var a = new Date(UNIX_timestamp * 1000);\n    var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    var year = a.getFullYear();\n    var month = months[a.getMonth()];\n    var date = a.getDate();\n    var hour = a.getHours();\n    var min = a.getMinutes();\n    var sec = a.getSeconds();\n    var time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec;\n    return time;\n  }\n\n  function dateDiff(date1, date2) {\n    var d1 = new Date(date1 * 1000);\n    var d2 = new Date(date2 * 1000);\n    return (d2 - d1) / 1000 / 24 / 3600;\n  }\n\n  var durations = [14, 30, 60, 180, 365];\n  var buildings = [\"Hut\", \"House\", \"Villa\", \"FarmHouse\", \"Mansion\"];\n  var buildingImages = [Hut, House, Villa, FarmHouse, Mansion];\n  var DAY_IN_SEC = 60 * 60 * 24 * 1000;\n  var HUNDRED_DAYS_IN_SEC = 100 * DAY_IN_SEC; //100 * DAY_IN_SEC;\n\n  function formatDate(data) {\n    var timestamp = data * 1000 - new Date().getTime();\n    var tsHours = timestamp / 60 / 60 / 1000;\n    var days = parseInt(timestamp / DAY_IN_SEC);\n    var hoursDiff = tsHours - days * 24;\n    var hours = parseInt(hoursDiff);\n    var tsMinutes = hoursDiff * 60;\n    var minutes = parseInt(tsMinutes - hours * 60);\n\n    if (timestamp <= 0) {\n      days = 0;\n      hours = 0;\n      minutes = 0;\n    }\n\n    return {\n      days: days,\n      hours: hours,\n      minutes: minutes\n    };\n  }\n  /**\r\n   * FARM\r\n   */\n\n\n  var approveFarm = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var approvalTx;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              approvalTx = lpPair.approve(croSkullsFarm.address, ethers.constants.MaxUint256.toString());\n              _context2.next = 3;\n              return approvalTx.then( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(tx) {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          console.log(tx);\n                          dispatch(sendNotification({\n                            title: \"Transaction Sent\",\n                            message: 'Waiting for confirmation...',\n                            tx: tx,\n                            type: \"info\"\n                          }));\n                          _context.next = 4;\n                          return tx.wait(1);\n\n                        case 4:\n                          dispatch(sendNotification({\n                            title: \"Approved!\",\n                            message: \"Now you can use farm.\",\n                            tx: tx,\n                            type: \"success\"\n                          }));\n                          dispatch(playSound(CoinSound));\n                          dispatch(loadFarmData());\n\n                        case 7:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x) {\n                  return _ref3.apply(this, arguments);\n                };\n              }());\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function approveFarm() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var stakeLiquidity = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var stakeTX;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              stakeTX = croSkullsFarm.deposit(0, ethers.utils.parseEther(farmView.amountToStake));\n              _context4.next = 3;\n              return stakeTX.then( /*#__PURE__*/function () {\n                var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(tx) {\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          console.log(tx);\n                          dispatch(sendNotification({\n                            title: \"Transaction Sent\",\n                            message: 'Waiting for confirmation...',\n                            tx: tx,\n                            type: \"info\"\n                          }));\n                          _context3.next = 4;\n                          return tx.wait(1);\n\n                        case 4:\n                          dispatch(sendNotification({\n                            title: \"Staked!\",\n                            message: \"You staked succesful GRVE/CRO.\",\n                            tx: tx,\n                            type: \"success\"\n                          }));\n                          dispatch(playSound(CoinSound));\n                          dispatch(loadFarmData());\n\n                        case 7:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function (_x2) {\n                  return _ref5.apply(this, arguments);\n                };\n              }());\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function stakeLiquidity() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var claimLPRewards = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var claimTx;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (farmView.amountToUnstake) {\n                _context6.next = 2;\n                break;\n              }\n\n              return _context6.abrupt(\"return\");\n\n            case 2:\n              claimTx = croSkullsFarm.withdraw(0, ethers.utils.parseEther(farmView.amountToUnstake));\n              _context6.next = 5;\n              return claimTx.then( /*#__PURE__*/function () {\n                var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(tx) {\n                  return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          console.log(tx);\n                          dispatch(sendNotification({\n                            title: \"Transaction Sent\",\n                            message: 'Waiting for confirmation...',\n                            tx: tx,\n                            type: \"info\"\n                          }));\n                          _context5.next = 4;\n                          return tx.wait(1);\n\n                        case 4:\n                          dispatch(sendNotification({\n                            title: \"Claimed!\",\n                            message: \"Claimed succesful GRVE/CRO plus Rewards.\",\n                            tx: tx,\n                            type: \"success\"\n                          }));\n                          dispatch(playSound(CoinSound));\n                          dispatch(loadFarmData());\n\n                        case 7:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                }));\n\n                return function (_x3) {\n                  return _ref7.apply(this, arguments);\n                };\n              }());\n\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function claimLPRewards() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  /**\r\n   * BANK\r\n   */\n\n\n  var increaseAllowance = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n      var approvalTx;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              approvalTx = croSkullsGrave.increaseAllowance(croSkullsBank.address, ethers.constants.MaxUint256.toString());\n              _context8.next = 3;\n              return approvalTx.then( /*#__PURE__*/function () {\n                var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(tx) {\n                  return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          console.log(tx);\n                          dispatch(sendNotification({\n                            title: \"Transaction Sent\",\n                            message: 'Waiting for confirmation...',\n                            tx: tx,\n                            type: \"info\"\n                          }));\n                          _context7.next = 4;\n                          return tx.wait(1);\n\n                        case 4:\n                          dispatch(sendNotification({\n                            title: \"Approved!\",\n                            message: \"Now you can use Central Bank.\",\n                            tx: tx,\n                            type: \"success\"\n                          }));\n                          dispatch(playSound(CoinSound));\n                          dispatch(loadBankData());\n\n                        case 7:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }\n                  }, _callee7);\n                }));\n\n                return function (_x4) {\n                  return _ref9.apply(this, arguments);\n                };\n              }());\n\n            case 3:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function increaseAllowance() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  var simulateApy = /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n      var croSkullsBank, amount, tempSimulated, i, simulatedApy, rewards, apy;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              croSkullsBank = blockchain.croSkullsBank;\n\n              if (!(currentContract.amount == 0)) {\n                _context9.next = 3;\n                break;\n              }\n\n              return _context9.abrupt(\"return\");\n\n            case 3:\n              setLoading(true);\n              amount = ethers.utils.parseEther(currentContract.amount);\n              tempSimulated = [];\n              i = 0;\n\n            case 7:\n              if (!(i < durations.length)) {\n                _context9.next = 21;\n                break;\n              }\n\n              _context9.next = 10;\n              return croSkullsBank.simulateAPY(amount, durations[i] * 86400, currentContract.wishbones);\n\n            case 10:\n              simulatedApy = _context9.sent;\n              _context9.next = 13;\n              return simulatedApy[0].toString();\n\n            case 13:\n              rewards = _context9.sent;\n              _context9.next = 16;\n              return simulatedApy[1].toString();\n\n            case 16:\n              apy = _context9.sent;\n              tempSimulated.push({\n                rewards: rewards,\n                apy: apy,\n                duration: durations[i]\n              });\n\n            case 18:\n              i++;\n              _context9.next = 7;\n              break;\n\n            case 21:\n              setSimulated(tempSimulated);\n              setLoading(false);\n\n            case 23:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    return function simulateApy() {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n\n  var claimRewards = /*#__PURE__*/function () {\n    var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(contractId) {\n      var claimRewardsTx;\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              if (contractId) {\n                _context11.next = 2;\n                break;\n              }\n\n              return _context11.abrupt(\"return\");\n\n            case 2:\n              claimRewardsTx = croSkullsBank.claimRewards(contractId);\n              _context11.next = 5;\n              return claimRewardsTx.then( /*#__PURE__*/function () {\n                var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(tx) {\n                  return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n                    while (1) {\n                      switch (_context10.prev = _context10.next) {\n                        case 0:\n                          dispatch(sendNotification({\n                            title: \"Transaction Sent\",\n                            message: 'Waiting for confirmation...',\n                            tx: tx,\n                            type: \"info\"\n                          }));\n                          _context10.next = 3;\n                          return tx.wait(1);\n\n                        case 3:\n                          dispatch(sendNotification({\n                            title: \"Approved!\",\n                            message: \"Contract claimed succesful.\",\n                            tx: tx,\n                            type: \"success\"\n                          }));\n                          dispatch(playSound(CoinSound));\n                          dispatch(loadBankData());\n\n                        case 6:\n                        case \"end\":\n                          return _context10.stop();\n                      }\n                    }\n                  }, _callee10);\n                }));\n\n                return function (_x6) {\n                  return _ref12.apply(this, arguments);\n                };\n              }());\n\n            case 5:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n\n    return function claimRewards(_x5) {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n\n  var subscribeContract = /*#__PURE__*/function () {\n    var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(duration) {\n      var amount, wishbones, DAY_IN_SECONDS, newContractTx;\n      return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              amount = currentContract.amount, wishbones = currentContract.wishbones;\n              DAY_IN_SECONDS = 86400;\n\n              if (!(!duration || duration < 14 || !amount)) {\n                _context13.next = 4;\n                break;\n              }\n\n              return _context13.abrupt(\"return\");\n\n            case 4:\n              newContractTx = croSkullsBank.createContract(ethers.utils.parseEther(amount), duration * DAY_IN_SECONDS, wishbones);\n              _context13.next = 7;\n              return newContractTx.then( /*#__PURE__*/function () {\n                var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(tx) {\n                  return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n                    while (1) {\n                      switch (_context12.prev = _context12.next) {\n                        case 0:\n                          dispatch(sendNotification({\n                            title: \"Transaction Sent\",\n                            message: 'Waiting for confirmation...',\n                            tx: tx,\n                            type: \"info\"\n                          }));\n                          _context12.next = 3;\n                          return tx.wait(1);\n\n                        case 3:\n                          dispatch(sendNotification({\n                            title: \"Approved!\",\n                            message: \"Contract created succesful.\",\n                            tx: tx,\n                            type: \"success\"\n                          }));\n                          dispatch(playSound(CoinSound));\n                          dispatch(loadBankData());\n\n                        case 6:\n                        case \"end\":\n                          return _context12.stop();\n                      }\n                    }\n                  }, _callee12);\n                }));\n\n                return function (_x8) {\n                  return _ref14.apply(this, arguments);\n                };\n              }());\n\n            case 7:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13);\n    }));\n\n    return function subscribeContract(_x7) {\n      return _ref13.apply(this, arguments);\n    };\n  }();\n\n  var allowance = bank.allowance,\n      maxApy = bank.maxApy,\n      totalGraveVolume = bank.totalGraveVolume,\n      totalWishbonesVolume = bank.totalWishbonesVolume,\n      totalContractsVolume = bank.totalContractsVolume,\n      depositedGrave = bank.depositedGrave,\n      activeWishbones = bank.activeWishbones,\n      activeContracts = bank.activeContracts,\n      wishboneCost = bank.wishboneCost,\n      bankFee = bank.bankFee,\n      userActiveContracts = bank.userActiveContracts,\n      userContractsCount = bank.userContractsCount,\n      pendingRewards = bank.pendingRewards,\n      totalLiquidity = bank.totalLiquidity,\n      stakedAmount = bank.stakedAmount,\n      endBlock = bank.endBlock,\n      paidOut = bank.paidOut,\n      rewardPerBlock = bank.rewardPerBlock,\n      lpPairAllowance = bank.lpPairAllowance,\n      lpPairBalance = bank.lpPairBalance,\n      totalStakedCro = bank.totalStakedCro;\n  var croInUsd = store.getState().dexscreener.croInUsd;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"global-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-row sk-flex gd-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sk-box-content details-value\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 15\n    }\n  }, \"$\", graveInUsd && depositedGrave && totalStakedCro ? parseInt(totalStakedCro * croInUsd * 2 + ethers.utils.formatEther(depositedGrave) * graveInUsd) : 0), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"details-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 15\n    }\n  }, \"Total Value Locked\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sk-box-content details-value\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 15\n    }\n  }, totalGraveVolume ? formatEther(totalGraveVolume) : 0), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"details-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 15\n    }\n  }, \"Total Grave Volume\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sk-box-content details-value\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 15\n    }\n  }, totalWishbonesVolume ? totalWishbonesVolume : 0), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"details-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 15\n    }\n  }, \"Total Wishbones Used\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sk-box-content details-value\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 15\n    }\n  }, activeContracts ? activeContracts : 0), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"details-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 15\n    }\n  }, \"Total Contracts Active\"))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"sk-row switcher-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"switcher-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"switcher-button view-button \".concat(detailsView ? '' : 'active'),\n    onClick: function onClick() {\n      return setDetailsView(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 13\n    }\n  }, \"\\uD83C\\uDFE6 CENTRAL BANK\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"switcher-button view-button \".concat(!detailsView ? '' : 'active'),\n    onClick: function onClick() {\n      setDetailsView(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 13\n    }\n  }, \"\\u26A1\\uFE0F LP FARM\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box\",\n    hidden: detailsView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contract-details sk-box-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"simulate-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 17\n    }\n  }, \"Choose Contract\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MetricContainer, {\n    label: \"Grave Amount\",\n    tooltip: \"Amount of GRAVE to Stake in the contract.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"0\",\n    min: \"0\",\n    id: \"amount\",\n    onChange: handleFieldChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MetricContainer, {\n    label: \"Wishbones Amount\",\n    tooltip: \"1 Wishbone cost 0.3 GRAVE, that will be burned at the creation.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"0\",\n    step: \"10\",\n    min: \"0\",\n    max: \"300\",\n    className: \"wishbones\",\n    id: \"wishbones\",\n    onChange: handleFieldChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 19\n    }\n  }, \"Wishbones Cost: \", currentContract.wishbones ? \"\".concat(parseInt(currentContract.wishbones * 0.3)) : '0', \" GRAVE\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 19\n    }\n  }, \"Total Cost: \", currentContract.amount ? \"\".concat(parseInt(currentContract.amount) + parseInt(currentContract.wishbones * 0.3)) : '0', \" GRAVE\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"skull-button\",\n    onClick: function onClick() {\n      return simulateApy();\n    },\n    disabled: loading ? true : false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 17\n    }\n  }, loading ? 'Loading...' : 'Calculate')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contract-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contract-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 17\n    }\n  }, simulated ? simulated.map(function (simulation, i) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contract-box sk-box\",\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 27\n      }\n    }, buildings[i]), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"building-image\",\n      src: buildingImages[i],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(MetricContainer, {\n      label: \"Est. rewards\",\n      value: formatEther(simulation.rewards, true),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(MetricContainer, {\n      label: \"Duration\",\n      value: \"\".concat(simulation.duration, \" days\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(MetricContainer, {\n      label: \"ARY\",\n      tooltip: \"Annualizated Rude Yield: increase exponentially when reach contract end data.\",\n      value: \"\".concat(simulation ? (simulation.apy / Math.pow(10, 5)).toFixed(2) : 0, \"%\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 27\n      }\n    }), currentContract.amount && allowance == 0 || ethers.BigNumber.from(allowance).lte(ethers.utils.parseEther(currentContract.amount)) ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"skull-button\",\n      onClick: function onClick() {\n        return increaseAllowance();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 31\n      }\n    }, \"Approve\") : currentContract.amount && userGraveBalance > 0 && ethers.BigNumber.from(userGraveBalance).gte(ethers.utils.parseEther(currentContract.amount)) ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"skull-button\",\n      onClick: function onClick() {\n        subscribeContract(simulation.duration);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 31\n      }\n    }, \"Subscribe\") : /*#__PURE__*/React.createElement(\"button\", {\n      className: \"skull-button\",\n      onClick: function onClick() {\n        return window.open(mmfLink);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 31\n      }\n    }, \"Buy Grave\"));\n  }) : ''))), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"your-contracts\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 13\n    }\n  }, \"Your Contracts ( \", userActiveContracts.length ? userActiveContracts.length : '0', \" )\"), userActiveContracts.length > 0 ? userActiveContracts.map(function (contract, i) {\n    var ending = formatDate(contract.unlockTimestamp);\n    var currentContractId = durations.indexOf(contract.duration / 86400);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contract-details sk-box-content\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bank-name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bank-name-img\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: buildingImages[currentContractId],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bank-name-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 27\n      }\n    }, buildings[currentContractId], \" Building\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 27\n      }\n    }, dateDiff(contract.startTimestamp, contract.unlockTimestamp), \" Days\"))), /*#__PURE__*/React.createElement(MetricContainer, {\n      label: \"Amount Staked\",\n      value: formatEther(contract.amount, true),\n      icon: Grave,\n      vertical: true,\n      tooltip: \"Your Grave Staked in this specific contract.\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(MetricContainer, {\n      label: \"RUDE Rewards\",\n      value: formatEther(contract.rewards, true),\n      vertical: true,\n      icon: Rude,\n      tooltip: \"Generated RUDE rewards until now.\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(MetricContainer, {\n      label: \"ARY\",\n      value: \"\".concat((contract.apy / Math.pow(10, 5)).toFixed(2), \"%\"),\n      vertical: true,\n      tooltip: \"Annualizated Rude Yield: increase exponentially when reach contract end data.\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(MetricContainer, {\n      label: \"End\",\n      value: \"\".concat(!contract.isClaimable ? timeConverter(contract.unlockTimestamp) : 0),\n      vertical: true,\n      tooltip: \"Created: \".concat(timeConverter(contract.startTimestamp)),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(MetricContainer, {\n      label: \"Wishbone Used\",\n      value: contract.usedWishbones,\n      vertical: true,\n      icon: Wishbone,\n      tooltip: \"Your Grave Staked in this specific contract.\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        claimRewards(contract.contractId);\n      },\n      className: \"skull-button claim-button\",\n      disabled: contract.isClaimable ? false : true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 23\n      }\n    }, \"Claim\")));\n  }) : ''), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box\",\n    hidden: !detailsView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box-content sk-row lp-head-details\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 15\n    }\n  }, \"GRVE-CRO\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://mm.finance/add/0x9885488cD6864DF90eeBa6C5d07B35f08CEb05e9/0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23\",\n    target: \"_blank\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 17\n    }\n  }, \"Get LP \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faExternalLink,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 26\n    }\n  }))), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://cronoscan.com/address/0x4672d3d945700cc3bdf4a2b6704e429d567dc52c\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 17\n    }\n  }, \"Contract \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faExternalLink,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 28\n    }\n  }))), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://dexscreener.com/cronos/0x4672d3d945700cc3bdf4a2b6704e429d567dc52c\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 17\n    }\n  }, \"Pair Info \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faExternalLink,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contract-details sk-box-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: GraveCro,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"lpTitle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 17\n    }\n  }, \"GRVE-CRO\"), /*#__PURE__*/React.createElement(MetricContainer, {\n    label: \"Rewards\",\n    value: formatEther(pendingRewards, true),\n    vertical: true,\n    icon: Grave,\n    usdValue: formatEther(pendingRewards, true) * graveInUsd,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(MetricContainer, {\n    label: \"Staked\",\n    value: formatEther(stakedAmount, true),\n    vertical: true,\n    icon: GraveCro,\n    usdValue: stakedAmount ? \"\".concat(totalStakedCro * croInUsd * 2 * (100 / totalLiquidity * stakedAmount) / 100) : 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(MetricContainer, {\n    label: \"Liquidity\",\n    value: totalLiquidity ? \"\".concat(formatEther(totalLiquidity)) : 'Loading',\n    vertical: true,\n    tooltip: \"\".concat(formatEther(totalLiquidity, true), \" GRVE/CRO LP\"),\n    usdValue: totalStakedCro * croInUsd * 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(MetricContainer, {\n    label: \"RPB\",\n    value: totalLiquidity ? formatEther(rewardPerBlock, true) : 'Loading',\n    vertical: true,\n    tooltip: \"Rewards per Block: total amount of GRAVE released for each block.\",\n    usdValue: formatEther(rewardPerBlock, true) * graveInUsd,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(MetricContainer, {\n    label: \"End Block\",\n    value: endBlock ? endBlock : 'Loading',\n    vertical: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"data-row-box angle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: function onClick() {\n      return EnablePool(1);\n    },\n    className: \"angle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 19\n    }\n  }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: angleIconPool[0] ? faAngleUp : faAngleDown,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 74\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"data-container-wrapped\",\n    id: \"pool-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"sk-row switcher-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"switcher-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"switcher-button view-button \".concat(detailsView2 ? '' : 'active'),\n    onClick: function onClick() {\n      return setDetailsView2(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 21\n    }\n  }, \"Stake\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"switcher-button view-button \".concat(!detailsView2 ? '' : 'active'),\n    onClick: function onClick() {\n      return setDetailsView2(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 21\n    }\n  }, \"Unstake\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box data-box\",\n    hidden: detailsView2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: Grave,\n    className: \"skull-icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 25\n    }\n  }), \" Stake Grave Earn $Rude \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box-content sk-column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MetricContainer, {\n    label: \"Staked LP\",\n    value: formatEther(stakedAmount, true),\n    icon: GraveCro,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(MetricContainer, {\n    label: \"Pending Rewards\",\n    value: formatEther(pendingRewards, true),\n    icon: Grave,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(MetricContainer, {\n    label: \"Balance LP\",\n    value: formatEther(lpPairBalance, true),\n    icon: GraveCro,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"skull-button\",\n    onClick: function onClick() {\n      return getMax();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 711,\n      columnNumber: 25\n    }\n  }, \"MAX\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"amountToStake\",\n    type: \"number\",\n    placeholder: \"0\",\n    value: farmView.amountToStake,\n    onChange: handleStakeLPChange,\n    step: \".0000000001\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 25\n    }\n  })), lpPairAllowance > 0 ? /*#__PURE__*/React.createElement(\"button\", {\n    className: 'skull-button stake-button',\n    disabled: farmView.amountToStake <= formatEther(lpPairBalance, true) ? false : true,\n    onClick: function onClick() {\n      return stakeLiquidity();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 729,\n      columnNumber: 27\n    }\n  }, \"STAKE\") : /*#__PURE__*/React.createElement(\"button\", {\n    className: 'skull-button stake-button',\n    onClick: function onClick() {\n      return approveFarm();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 737,\n      columnNumber: 27\n    }\n  }, \"Approve\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box data-box\",\n    hidden: !detailsView2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: Grave,\n    className: \"skull-icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 25\n    }\n  }), \"Stake Grave Earn $Rude\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"data-box-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 749,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"balance\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 23\n    }\n  }, \" \", formatEther(stakedAmount, true), \" Staked\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 751,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"skull-button\",\n    onClick: function onClick() {\n      return getMaxStaked();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 752,\n      columnNumber: 25\n    }\n  }, \"MAX\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"amountToUntake\",\n    type: \"number\",\n    placeholder: \"0\",\n    value: farmView.amountToUnstake,\n    onChange: handleStakeLPChange,\n    step: \".0000000001\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 758,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: 'skull-button claim-button',\n    disabled: pendingRewards < 0 ? true : false,\n    onClick: function onClick() {\n      return claimLPRewards();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 23\n    }\n  }, \"Unstake & Claim\")))))))));\n};\n\nexport default Bank;","map":{"version":3,"sources":["F:/Mattia/Visual studio/AppCroskull/croskull-nft-marketplace/src/components/Bank/Bank.jsx"],"names":["React","useEffect","useState","store","useDispatch","playSound","ethers","Grave","GraveCro","Rude","CoinSound","Wishbone","FontAwesomeIcon","faAngleUp","faAngleDown","faQuestionCircle","faExternalLink","Hut","House","Villa","FarmHouse","Mansion","MetricContainer","loadBankData","loadFarmData","sendNotification","loadDexData","mmfLink","Bank","accountAddress","dispatch","detailsView","setDetailsView","detailsView2","setDetailsView2","angleIconFarm","setAngleIconFarm","angleIconPool","setAngleIconPool","getState","blockchain","bank","data","dexscreener","croSkullsBank","croSkullsGrave","croSkullsFarm","lpPair","formatEther","graveInUsd","userGraveBalance","simulated","setSimulated","loading","setLoading","amountToStake","amountToUnstake","farmView","setfarmView","amount","wishbones","duration","currentContract","setContract","handleFieldChange","event","value","target","name","id","handleStakeLPChange","getMax","console","log","lpPairBalance","getMaxStaked","stakedAmount","EnablePool","i","setPoolAngleState","d","document","getElementById","getAttribute","includes","setAttribute","setFarmAngleState","ids","timeConverter","UNIX_timestamp","a","Date","months","year","getFullYear","month","getMonth","date","getDate","hour","getHours","min","getMinutes","sec","getSeconds","time","dateDiff","date1","date2","d1","d2","durations","buildings","buildingImages","DAY_IN_SEC","HUNDRED_DAYS_IN_SEC","formatDate","timestamp","getTime","tsHours","days","parseInt","hoursDiff","hours","tsMinutes","minutes","approveFarm","approvalTx","approve","address","constants","MaxUint256","toString","then","tx","title","message","type","wait","stakeLiquidity","stakeTX","deposit","utils","parseEther","claimLPRewards","claimTx","withdraw","increaseAllowance","simulateApy","tempSimulated","length","simulateAPY","simulatedApy","rewards","apy","push","claimRewards","contractId","claimRewardsTx","subscribeContract","DAY_IN_SECONDS","newContractTx","createContract","allowance","maxApy","totalGraveVolume","totalWishbonesVolume","totalContractsVolume","depositedGrave","activeWishbones","activeContracts","wishboneCost","bankFee","userActiveContracts","userContractsCount","pendingRewards","totalLiquidity","endBlock","paidOut","rewardPerBlock","lpPairAllowance","totalStakedCro","croInUsd","map","simulation","toFixed","BigNumber","from","lte","gte","window","open","contract","ending","unlockTimestamp","currentContractId","indexOf","startTimestamp","isClaimable","usedWishbones"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport store from \"../../redux/store\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { playSound } from \"../../redux/data/dataActions\";\r\nimport { ethers } from 'ethers';\r\nimport Grave from \"../Navbar/grave.png\";\r\nimport GraveCro from \"./grve-cro-pair.png\"\r\nimport Rude from \"./rude.png\"\r\nimport CoinSound from \"./collect-coin.mp3\";\r\nimport Wishbone from \"../../images/wishbone.png\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleUp, faAngleDown, faQuestionCircle, faExternalLink} from '@fortawesome/free-solid-svg-icons';\r\nimport Hut from \"./hut.png\";\r\nimport House from \"./house.png\"\r\nimport Villa from \"./villa.png\"\r\nimport FarmHouse from \"./farmhouse.png\"\r\nimport Mansion from \"./mansion.png\"\r\nimport MetricContainer from \"../MetricContainer/MetricContainer\";\r\nimport { loadBankData, loadFarmData } from \"../../redux/bank/bankActions\";\r\nimport { sendNotification } from \"../../redux/data/dataActions\";\r\nimport { loadDexData } from \"../../redux/dexscreener/dexscreenerActions\";\r\nimport './Bank.css';\r\n\r\nconst mmfLink = \"https://mm.finance/swap?outputCurrency=0x9885488cd6864df90eeba6c5d07b35f08ceb05e9\"\r\n\r\nconst Bank = ({ accountAddress }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [detailsView, setDetailsView] = useState(false)\r\n  const [detailsView2, setDetailsView2] = useState(false)\r\n  const [angleIconFarm, setAngleIconFarm] = useState([]);\r\n  const [angleIconPool, setAngleIconPool] = useState([]);\r\n\r\n  let { blockchain, bank, data, dexscreener } = store.getState()\r\n  let { croSkullsBank, croSkullsGrave, croSkullsFarm, lpPair, formatEther } = blockchain\r\n  let { graveInUsd } = dexscreener\r\n  let { userGraveBalance } = data\r\n\r\n  const [simulated, setSimulated] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const [farmView, setfarmView] = useState({\r\n    amountToStake: 0,\r\n    amountToUnstake: 0\r\n  })\r\n  const [currentContract, setContract] = useState({\r\n    amount: 0,\r\n    wishbones: 0,\r\n    duration: 0\r\n  })\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(loadBankData())\r\n    dispatch(loadFarmData())\r\n    if( ! graveInUsd )\r\n      dispatch(loadDexData())\r\n  }, [croSkullsBank])\r\n\r\n\r\n  const handleFieldChange = (event) => {\r\n    let value = event.target ? event.target.value : 0\r\n    let name = event.target ? event.target.id : 0\r\n    setContract({\r\n      ...currentContract,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  const handleStakeLPChange = (event) => {\r\n    let value = event.target ? event.target.value : 0\r\n    let name = event.target ? event.target.id : 0\r\n    setfarmView({\r\n      ...farmView,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  const getMax = () => {\r\n    console.log( lpPairBalance )\r\n    setfarmView({\r\n      ...farmView,\r\n      amountToStake: formatEther(lpPairBalance)\r\n    })\r\n  }\r\n  const getMaxStaked = () => {\r\n    setfarmView({\r\n      ...farmView,\r\n      amountToUnstake: formatEther(stakedAmount)\r\n    })\r\n  }\r\n  \r\n  const EnablePool = (i) => {\r\n    setPoolAngleState(i);\r\n    let d = document.getElementById(\"pool-\" + i);\r\n    setDetailsView2(false);\r\n    if (d.getAttribute('class').includes('wrapped')) {\r\n      d.setAttribute('class', 'pool-container')\r\n    } else {\r\n      d.setAttribute('class', 'data-container-wrapped')\r\n    }\r\n  }\r\n\r\n  const setFarmAngleState = (i) => {\r\n    let ids = [...angleIconFarm];\r\n    ids[i] = !ids[i];\r\n    setAngleIconFarm(ids);\r\n  }\r\n  const setPoolAngleState = (i) => {\r\n    let ids = [...angleIconPool];\r\n    ids[i - 1] = !ids[i - 1];\r\n    setAngleIconPool(ids);\r\n  }\r\n\r\n  function timeConverter(UNIX_timestamp) {\r\n    var a = new Date(UNIX_timestamp * 1000);\r\n    var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    var year = a.getFullYear();\r\n    var month = months[a.getMonth()];\r\n    var date = a.getDate();\r\n    var hour = a.getHours();\r\n    var min = a.getMinutes();\r\n    var sec = a.getSeconds();\r\n    var time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec;\r\n    return time;\r\n  }\r\n\r\n  function dateDiff(date1, date2) {\r\n    var d1 = new Date(date1 * 1000);\r\n    var d2 = new Date(date2 * 1000);\r\n    return (d2 - d1) / 1000 / 24 / 3600;\r\n  }\r\n\r\n  const durations = [14, 30, 60, 180, 365]\r\n\r\n  const buildings = [\r\n    \"Hut\",\r\n    \"House\",\r\n    \"Villa\",\r\n    \"FarmHouse\",\r\n    \"Mansion\"\r\n  ]\r\n\r\n  const buildingImages = [\r\n    Hut,\r\n    House,\r\n    Villa,\r\n    FarmHouse,\r\n    Mansion\r\n  ]\r\n  \r\n  const DAY_IN_SEC = 60 * 60 * 24 * 1000;\r\n  const HUNDRED_DAYS_IN_SEC = 100 * DAY_IN_SEC//100 * DAY_IN_SEC;\r\n  function formatDate(data) {\r\n    let timestamp = data*1000 - new Date( ).getTime()\r\n    let tsHours = timestamp / 60 / 60 / 1000\r\n    let days = parseInt(timestamp / DAY_IN_SEC)\r\n    let hoursDiff = tsHours - (days * 24)\r\n    let hours = parseInt(hoursDiff)\r\n    let tsMinutes = hoursDiff * 60\r\n    let minutes = parseInt(tsMinutes - (hours * 60))\r\n    if (timestamp <= 0) {\r\n      days = 0;\r\n      hours = 0;\r\n      minutes = 0;\r\n    }\r\n    return {\r\n      days,\r\n      hours,\r\n      minutes\r\n    }\r\n  }\r\n\r\n  /**\r\n   * FARM\r\n   */\r\n  const approveFarm = async () => {\r\n    let approvalTx = lpPair.approve(\r\n      croSkullsFarm.address,\r\n      ethers.constants.MaxUint256.toString()\r\n    )\r\n    await approvalTx.then(\r\n      async (tx) => {\r\n        console.log( tx )\r\n        dispatch(sendNotification({\r\n          title: `Transaction Sent`,\r\n          message: 'Waiting for confirmation...',\r\n          tx,\r\n          type: \"info\"\r\n        }))\r\n        await tx.wait(1)\r\n        dispatch(sendNotification({\r\n          title: `Approved!`,\r\n          message: `Now you can use farm.`,\r\n          tx,\r\n          type: \"success\"\r\n        }))\r\n        dispatch(playSound(CoinSound))\r\n        dispatch(loadFarmData())\r\n      }\r\n    )\r\n  }\r\n\r\n  const stakeLiquidity = async () => {\r\n    let stakeTX = croSkullsFarm.deposit(\r\n      0,\r\n      ethers.utils.parseEther(farmView.amountToStake)\r\n    )\r\n    await stakeTX.then(\r\n      async (tx) => {\r\n        console.log( tx )\r\n        dispatch(sendNotification({\r\n          title: `Transaction Sent`,\r\n          message: 'Waiting for confirmation...',\r\n          tx,\r\n          type: \"info\"\r\n        }))\r\n        await tx.wait(1)\r\n        dispatch(sendNotification({\r\n          title: `Staked!`,\r\n          message: `You staked succesful GRVE/CRO.`,\r\n          tx,\r\n          type: \"success\"\r\n        }))\r\n        dispatch(playSound(CoinSound))\r\n        dispatch(loadFarmData())\r\n      }\r\n    )\r\n  }\r\n  \r\n  const claimLPRewards = async () => {\r\n    if( ! farmView.amountToUnstake ) return \r\n    let claimTx = croSkullsFarm.withdraw(\r\n      0,\r\n      ethers.utils.parseEther(farmView.amountToUnstake)\r\n    )\r\n    await claimTx.then(\r\n      async (tx) => {\r\n        console.log( tx )\r\n        dispatch(sendNotification({\r\n          title: `Transaction Sent`,\r\n          message: 'Waiting for confirmation...',\r\n          tx,\r\n          type: \"info\"\r\n        }))\r\n        await tx.wait(1)\r\n        dispatch(sendNotification({\r\n          title: `Claimed!`,\r\n          message: `Claimed succesful GRVE/CRO plus Rewards.`,\r\n          tx,\r\n          type: \"success\"\r\n        }))\r\n        dispatch(playSound(CoinSound))\r\n        dispatch(loadFarmData())\r\n      }\r\n    )\r\n  }\r\n  /**\r\n   * BANK\r\n   */\r\n  const increaseAllowance = async () => {\r\n    let approvalTx = croSkullsGrave.increaseAllowance(\r\n      croSkullsBank.address,\r\n      ethers.constants.MaxUint256.toString()\r\n    )\r\n    await approvalTx.then(\r\n      async (tx) => {\r\n        console.log( tx )\r\n        dispatch(sendNotification({\r\n          title: `Transaction Sent`,\r\n          message: 'Waiting for confirmation...',\r\n          tx,\r\n          type: \"info\"\r\n        }))\r\n        await tx.wait(1)\r\n        dispatch(sendNotification({\r\n          title: `Approved!`,\r\n          message: `Now you can use Central Bank.`,\r\n          tx,\r\n          type: \"success\"\r\n        }))\r\n        dispatch(playSound(CoinSound))\r\n        dispatch(loadBankData())\r\n      }\r\n    ) \r\n  }\r\n\r\n  const simulateApy = async () => {\r\n    let { croSkullsBank } = blockchain\r\n    if( currentContract.amount == 0 ) return\r\n    setLoading(true)\r\n    let amount = ethers.utils.parseEther(currentContract.amount)\r\n    let tempSimulated = []\r\n    for(let i = 0; i < durations.length; i++ ){\r\n      let simulatedApy = await croSkullsBank.simulateAPY(\r\n        amount,\r\n        durations[i] * 86400,\r\n        currentContract.wishbones\r\n      )\r\n      let rewards = await simulatedApy[0].toString()\r\n      let apy = await simulatedApy[1].toString()\r\n      tempSimulated.push({\r\n        rewards,\r\n        apy,\r\n        duration: durations[i]\r\n      })\r\n    }\r\n    setSimulated( tempSimulated )\r\n    setLoading(false)\r\n  }\r\n\r\n  const claimRewards = async ( contractId ) => {\r\n    if( ! contractId ) return\r\n\r\n    let claimRewardsTx = croSkullsBank.claimRewards(\r\n      contractId\r\n    )\r\n    await claimRewardsTx.then(\r\n      async (tx) => {\r\n        dispatch(sendNotification({\r\n          title: `Transaction Sent`,\r\n          message: 'Waiting for confirmation...',\r\n          tx,\r\n          type: \"info\"\r\n        }))\r\n        await tx.wait(1)\r\n        dispatch(sendNotification({\r\n          title: `Approved!`,\r\n          message: `Contract claimed succesful.`,\r\n          tx,\r\n          type: \"success\"\r\n        }))\r\n        dispatch(playSound(CoinSound))\r\n        dispatch(loadBankData())\r\n      }\r\n    )\r\n  }\r\n\r\n  const subscribeContract = async ( duration ) => {\r\n    let { amount, wishbones } = currentContract\r\n    const DAY_IN_SECONDS = 86400\r\n    if( ! duration || duration < 14 || ! amount ) return\r\n\r\n    let newContractTx = croSkullsBank.createContract(\r\n      ethers.utils.parseEther( amount ),\r\n      duration * DAY_IN_SECONDS,\r\n      wishbones\r\n    )\r\n    await newContractTx.then(\r\n      async (tx) => {\r\n        dispatch(sendNotification({\r\n          title: `Transaction Sent`,\r\n          message: 'Waiting for confirmation...',\r\n          tx,\r\n          type: \"info\"\r\n        }))\r\n        await tx.wait(1)\r\n        dispatch(sendNotification({\r\n          title: `Approved!`,\r\n          message: `Contract created succesful.`,\r\n          tx,\r\n          type: \"success\"\r\n        }))\r\n        dispatch(playSound(CoinSound))\r\n        dispatch(loadBankData())\r\n      }\r\n    )\r\n  }\r\n\r\n  let {\r\n    allowance,\r\n    maxApy,\r\n    totalGraveVolume,\r\n    totalWishbonesVolume,\r\n    totalContractsVolume,\r\n    depositedGrave,\r\n    activeWishbones,\r\n    activeContracts,\r\n    wishboneCost,\r\n    bankFee,\r\n    userActiveContracts,\r\n    userContractsCount,\r\n    pendingRewards,\r\n    totalLiquidity,\r\n    stakedAmount,\r\n    endBlock,\r\n    paidOut,\r\n    rewardPerBlock,\r\n    lpPairAllowance,\r\n    lpPairBalance,\r\n    totalStakedCro\r\n  } = bank\r\n\r\n  let {\r\n    croInUsd\r\n  } = store.getState().dexscreener\r\n  return (\r\n    <>\r\n      <div className=\"global-container\">\r\n        <div className=\"sk-row sk-flex gd-container\">\r\n            <div className=\"sk-box\">\r\n              <span className=\"sk-box-content details-value\">${ graveInUsd && depositedGrave && totalStakedCro ? parseInt(( totalStakedCro * croInUsd * 2 ) + ( ethers.utils.formatEther(depositedGrave) * graveInUsd )) : 0 }</span>\r\n              <span className=\"details-title\">Total Value Locked</span>\r\n            </div>\r\n            <div className=\"sk-box\">\r\n              <span className=\"sk-box-content details-value\">{ totalGraveVolume ? formatEther(totalGraveVolume) : 0 }</span>\r\n              <span className=\"details-title\">Total Grave Volume</span>\r\n            </div>\r\n            <div className=\"sk-box\">\r\n              <span className=\"sk-box-content details-value\">{ totalWishbonesVolume ? totalWishbonesVolume : 0 }</span>\r\n              <span className=\"details-title\">Total Wishbones Used</span>\r\n            </div>\r\n            <div className=\"sk-box\">\r\n              <span className=\"sk-box-content details-value\">{ activeContracts ? activeContracts : 0 }</span>\r\n              <span className=\"details-title\">Total Contracts Active</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"sk-row switcher-container\">\r\n          <div className=\"switcher-wrapper\">\r\n            <button\r\n              className={`switcher-button view-button ${detailsView ? '' : 'active'}`}\r\n              onClick={\r\n                () => setDetailsView(false)\r\n              }\r\n            >\r\n              🏦 CENTRAL BANK\r\n            </button>\r\n            <button\r\n              className={`switcher-button view-button ${!detailsView ? '' : 'active'}`}\r\n              onClick={\r\n                () => { setDetailsView(true) }\r\n              }\r\n            >\r\n              ⚡️ LP FARM\r\n            </button>\r\n          </div>\r\n          <div className='sk-box' hidden={detailsView}>\r\n            <div className=\"contract-details sk-box-content\">\r\n              <div className=\"simulate-container\">\r\n                <h1>Choose Contract</h1>\r\n                <label>\r\n                  <MetricContainer \r\n                    label=\"Grave Amount\"\r\n                    tooltip=\"Amount of GRAVE to Stake in the contract.\"\r\n                  />\r\n                  <input \r\n                    type=\"number\"\r\n                    placeholder=\"0\"\r\n                    min=\"0\"\r\n                    id='amount'\r\n                    onChange={ handleFieldChange }\r\n                  >\r\n                  </input>\r\n                </label>\r\n                <label>\r\n                  <MetricContainer \r\n                    label=\"Wishbones Amount\"\r\n                    tooltip=\"1 Wishbone cost 0.3 GRAVE, that will be burned at the creation.\"\r\n                  />\r\n                  <input \r\n                    type=\"number\"\r\n                    placeholder=\"0\"\r\n                    step=\"10\"\r\n                    min=\"0\" \r\n                    max=\"300\"\r\n                    className=\"wishbones\"\r\n                    id='wishbones'\r\n                    onChange={ handleFieldChange }\r\n                  ></input>\r\n                  <span>Wishbones Cost: { currentContract.wishbones ? `${ parseInt( currentContract.wishbones * 0.3 )}` :  '0'} GRAVE</span>\r\n                  <span>Total Cost: { currentContract.amount ? `${  parseInt(currentContract.amount) + parseInt( currentContract.wishbones * 0.3 )}` :  '0'} GRAVE</span>\r\n                </label>\r\n                <button\r\n                  className=\"skull-button\" \r\n                  onClick={() => simulateApy()}\r\n                  disabled={loading ? true : false }\r\n                >\r\n                  { loading ? 'Loading...' : 'Calculate'}\r\n                </button>\r\n              </div>\r\n              <div className=\"contract-container\">\r\n                <div className=\"contract-content\">\r\n                  {\r\n                    simulated ? (\r\n                      simulated.map( (simulation,i) => (\r\n                        <div className=\"contract-box sk-box\" key={i}>\r\n                          <h1>{ buildings[i] }</h1>\r\n                          <img \r\n                            className=\"building-image\"\r\n                            src={buildingImages[i]}\r\n                          />\r\n                          <MetricContainer \r\n                            label=\"Est. rewards\"\r\n                            value={ formatEther(simulation.rewards, true) }\r\n                          />\r\n                          <MetricContainer \r\n                            label=\"Duration\"\r\n                            value={ `${simulation.duration} days` }\r\n                          />\r\n                          <MetricContainer \r\n                            label=\"ARY\"\r\n                            tooltip=\"Annualizated Rude Yield: increase exponentially when reach contract end data.\"\r\n                            value={ `${simulation ? (simulation.apy / 10**5).toFixed(2) : 0 }%` }\r\n                          />\r\n                          {\r\n                            currentContract.amount && allowance == 0 || ethers.BigNumber.from( allowance ).lte( ethers.utils.parseEther(currentContract.amount) ) ? (\r\n                              <button \r\n                                className=\"skull-button\"\r\n                                onClick={() => increaseAllowance() }\r\n                              >\r\n                                Approve\r\n                              </button>\r\n                            ) : currentContract.amount && userGraveBalance > 0 && ethers.BigNumber.from( userGraveBalance ).gte( ethers.utils.parseEther(currentContract.amount) ) ? (\r\n                              <button \r\n                                className=\"skull-button\"\r\n                                onClick={() => { subscribeContract(simulation.duration) } }\r\n                              >\r\n                                Subscribe\r\n                              </button>\r\n                            ) : (\r\n                              <button \r\n                                className=\"skull-button\"\r\n                                onClick={ () => window.open(mmfLink) }\r\n                              >\r\n                                Buy Grave\r\n                              </button>\r\n                            )\r\n                          }\r\n                        </div>\r\n                      ))\r\n                    ) : (\r\n                      ''\r\n                    )\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <h1 \r\n              className=\"your-contracts\"\r\n            >\r\n              Your Contracts ( { userActiveContracts.length ? userActiveContracts.length : '0' } )\r\n            </h1>\r\n            {\r\n            userActiveContracts.length > 0 ? (\r\n              userActiveContracts.map((contract, i) => {\r\n                let ending = formatDate(contract.unlockTimestamp)\r\n                let currentContractId = durations.indexOf(contract.duration/86400)\r\n                return(\r\n                  <>\r\n                    <div className=\"contract-details sk-box-content\">\r\n                      <div className=\"bank-name\">\r\n                        <div className=\"bank-name-img\">\r\n                          <img src={ buildingImages[currentContractId] } />\r\n                        </div>\r\n                        <div className=\"bank-name-text\">\r\n                          <h1>{ buildings[currentContractId] } Building</h1>\r\n                          <h3>{dateDiff(contract.startTimestamp,contract.unlockTimestamp)} Days</h3>\r\n                        </div>\r\n                      </div>\r\n                      <MetricContainer\r\n                        label=\"Amount Staked\"\r\n                        value={ formatEther(contract.amount, true ) }\r\n                        icon={Grave}\r\n                        vertical={true}\r\n                        tooltip=\"Your Grave Staked in this specific contract.\"\r\n                      />\r\n                      <MetricContainer \r\n                        label=\"RUDE Rewards\"\r\n                        value={ formatEther(contract.rewards, true ) }\r\n                        vertical={true}\r\n                        icon={Rude}\r\n                        tooltip=\"Generated RUDE rewards until now.\"\r\n                      />\r\n                      <MetricContainer \r\n                        label=\"ARY\"\r\n                        value={ `${(contract.apy / 10 ** 5).toFixed(2)}%` }\r\n                        vertical={true}\r\n                        tooltip=\"Annualizated Rude Yield: increase exponentially when reach contract end data.\"\r\n                      />\r\n                      <MetricContainer \r\n                        label=\"End\"\r\n                        value={ `${ ! contract.isClaimable ? timeConverter(contract.unlockTimestamp) : 0 }` }\r\n                        vertical={true}\r\n                        tooltip={`Created: ${timeConverter(contract.startTimestamp)}`}\r\n                      />\r\n                      <MetricContainer \r\n                        label=\"Wishbone Used\"\r\n                        value={ contract.usedWishbones }\r\n                        vertical={true}\r\n                        icon={Wishbone}\r\n                        tooltip=\"Your Grave Staked in this specific contract.\"\r\n                      />\r\n                      <button \r\n                        onClick={() => { claimRewards(contract.contractId) }}\r\n                        className=\"skull-button claim-button\"\r\n                        disabled={ contract.isClaimable ? false : true}\r\n                      >\r\n                        Claim\r\n                      </button>\r\n                    </div>\r\n                  </>\r\n                )\r\n              })\r\n            ) : ('')\r\n            }\r\n          </div>\r\n          <div className=\"sk-box\" hidden={!detailsView}>\r\n            <div className=\"sk-box-content sk-row lp-head-details\">\r\n              <h1>GRVE-CRO</h1>\r\n              <span>\r\n                <a \r\n                  href=\"https://mm.finance/add/0x9885488cD6864DF90eeBa6C5d07B35f08CEb05e9/0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23\"\r\n                  target=\"_blank\"\r\n                >\r\n                  Get LP <FontAwesomeIcon icon={faExternalLink}/>\r\n                </a>\r\n              </span>\r\n              <span>\r\n                <a \r\n                  href=\"https://cronoscan.com/address/0x4672d3d945700cc3bdf4a2b6704e429d567dc52c\"\r\n                >\r\n                  Contract <FontAwesomeIcon icon={faExternalLink}/>\r\n                </a>\r\n              </span>\r\n              <span>\r\n                <a \r\n                  href=\"https://dexscreener.com/cronos/0x4672d3d945700cc3bdf4a2b6704e429d567dc52c\"\r\n                >\r\n                  Pair Info <FontAwesomeIcon icon={faExternalLink}/>\r\n                </a>\r\n              </span>\r\n            </div>\r\n            <div className=\"contract-details sk-box-content\">\r\n                <img src={GraveCro} />\r\n                <span className=\"lpTitle\">GRVE-CRO</span>\r\n                <MetricContainer \r\n                  label=\"Rewards\"\r\n                  value={ formatEther(pendingRewards, true ) }\r\n                  vertical={true}\r\n                  icon={Grave}\r\n                  usdValue={ formatEther(pendingRewards, true ) * graveInUsd }\r\n                />\r\n                <MetricContainer \r\n                  label=\"Staked\"\r\n                  value={ formatEther(stakedAmount, true ) }\r\n                  vertical={true}\r\n                  icon={GraveCro}\r\n                  usdValue={ stakedAmount ? `${ (totalStakedCro * croInUsd * 2 * ( 100 / totalLiquidity * stakedAmount ) / 100) }` : 0}\r\n                />\r\n                <MetricContainer \r\n                  label=\"Liquidity\"\r\n                  value={ totalLiquidity ? `${formatEther(totalLiquidity)}` : 'Loading' }\r\n                  vertical={true}\r\n                  tooltip={`${formatEther(totalLiquidity, true)} GRVE/CRO LP`}\r\n                  usdValue={(totalStakedCro * croInUsd * 2)}\r\n                />\r\n                <MetricContainer \r\n                  label=\"RPB\"\r\n                  value={ totalLiquidity ? formatEther(rewardPerBlock, true) : 'Loading' }\r\n                  vertical={true}\r\n                  tooltip={`Rewards per Block: total amount of GRAVE released for each block.`}\r\n                  usdValue={ formatEther(rewardPerBlock, true) * graveInUsd }\r\n                />\r\n                <MetricContainer \r\n                  label=\"End Block\"\r\n                  value={ endBlock ? endBlock : 'Loading' }\r\n                  vertical={true}\r\n                />\r\n                <div className=\"data-row-box angle\">\r\n                  <span onClick={() => EnablePool(1)} className=\"angle\"> <FontAwesomeIcon icon={angleIconPool[0] ? faAngleUp : faAngleDown} /></span>\r\n                </div>\r\n              </div>\r\n              <div className=\"data-container-wrapped\" id=\"pool-1\">\r\n                <div class=\"sk-row switcher-container\">\r\n                  <div className=\"switcher-wrapper\">\r\n                    <button\r\n                      className={`switcher-button view-button ${detailsView2 ? '' : 'active'}`}\r\n                      onClick={\r\n                        () => setDetailsView2(false)\r\n                      }\r\n                    >\r\n                      Stake\r\n                    </button>\r\n                    <button\r\n                      className={`switcher-button view-button ${!detailsView2 ? '' : 'active'}`}\r\n                      onClick={\r\n                        () => setDetailsView2(true)\r\n                      }\r\n                    >\r\n                      Unstake\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"sk-box data-box\" hidden={detailsView2}>\r\n                    <h1><img src={Grave} className=\"skull-icon\"></img> Stake Grave Earn $Rude </h1>\r\n                    <div className=\"sk-box-content sk-column\">\r\n                      <MetricContainer\r\n                        label=\"Staked LP\"\r\n                        value={ formatEther(stakedAmount, true) }\r\n                        icon={GraveCro}\r\n                      />\r\n                      <MetricContainer\r\n                        label=\"Pending Rewards\"\r\n                        value={ formatEther(pendingRewards, true) }\r\n                        icon={Grave}\r\n                      />\r\n                      <MetricContainer\r\n                        label=\"Balance LP\"\r\n                        value={ formatEther(lpPairBalance, true) }\r\n                        icon={GraveCro}\r\n                      />\r\n                      <div className=\"input-content\">\r\n                        <button \r\n                          className=\"skull-button\" \r\n                          onClick={() => getMax()}\r\n                        >\r\n                          MAX\r\n                        </button>\r\n                        <input \r\n                          id=\"amountToStake\" \r\n                          type=\"number\" \r\n                          placeholder=\"0\" \r\n                          value={farmView.amountToStake}\r\n                          onChange={ handleStakeLPChange } \r\n                          step=\".0000000001\"\r\n                        >\r\n                        </input>\r\n                      </div>\r\n                      {\r\n                        lpPairAllowance > 0 ? (\r\n                          <button \r\n                            className={'skull-button stake-button'} \r\n                            disabled={ farmView.amountToStake <= formatEther(lpPairBalance, true) ? false : true}\r\n                            onClick={ () => stakeLiquidity() }\r\n                          >\r\n                            STAKE\r\n                          </button>\r\n                        ) : (\r\n                          <button\r\n                            className={'skull-button stake-button'} \r\n                            onClick={ () => approveFarm() }\r\n                          >\r\n                            Approve\r\n                          </button>\r\n                        )\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"sk-box data-box\" hidden={!detailsView2}>\r\n                    <h1><img src={Grave} className=\"skull-icon\"></img>Stake Grave Earn $Rude</h1>\r\n                    <div className=\"data-box-content\">\r\n                      <span className=\"balance\"> { formatEther(stakedAmount, true) } Staked</span>\r\n                      <div className=\"input-content\">\r\n                        <button \r\n                          className=\"skull-button\" \r\n                          onClick={() => getMaxStaked()}\r\n                        >\r\n                          MAX\r\n                        </button>\r\n                        <input\r\n                          id=\"amountToUntake\" \r\n                          type=\"number\"\r\n                          placeholder=\"0\"\r\n                          value={ farmView.amountToUnstake }\r\n                          onChange={ handleStakeLPChange } \r\n                          step=\".0000000001\"></input>\r\n                      </div>\r\n                      <button \r\n                        className={ 'skull-button claim-button' } \r\n                        disabled={pendingRewards < 0 ? true : false}\r\n                        onClick={() => claimLPRewards() }\r\n                      >\r\n                        { `Unstake & Claim` }\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n      )\r\n}\r\n\r\nexport default Bank;\r\n"]},"metadata":{},"sourceType":"module"}