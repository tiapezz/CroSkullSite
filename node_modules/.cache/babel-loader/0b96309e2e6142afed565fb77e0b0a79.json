{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgClientImpl = exports.MsgFundCommunityPoolResponse = exports.MsgFundCommunityPool = exports.MsgWithdrawValidatorCommissionResponse = exports.MsgWithdrawValidatorCommission = exports.MsgWithdrawDelegatorRewardResponse = exports.MsgWithdrawDelegatorReward = exports.MsgSetWithdrawAddressResponse = exports.MsgSetWithdrawAddress = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nvar long_1 = __importDefault(require(\"long\"));\n\nvar minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nvar coin_1 = require(\"../../../cosmos/base/v1beta1/coin\");\n\nexports.protobufPackage = \"cosmos.distribution.v1beta1\";\nvar baseMsgSetWithdrawAddress = {\n  delegatorAddress: \"\",\n  withdrawAddress: \"\"\n};\nexports.MsgSetWithdrawAddress = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.delegatorAddress !== \"\") {\n      writer.uint32(10).string(message.delegatorAddress);\n    }\n\n    if (message.withdrawAddress !== \"\") {\n      writer.uint32(18).string(message.withdrawAddress);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgSetWithdrawAddress);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.delegatorAddress = reader.string();\n          break;\n\n        case 2:\n          message.withdrawAddress = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseMsgSetWithdrawAddress);\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = String(object.delegatorAddress);\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.withdrawAddress !== undefined && object.withdrawAddress !== null) {\n      message.withdrawAddress = String(object.withdrawAddress);\n    } else {\n      message.withdrawAddress = \"\";\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n    message.withdrawAddress !== undefined && (obj.withdrawAddress = message.withdrawAddress);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n\n    var message = Object.assign({}, baseMsgSetWithdrawAddress);\n    message.delegatorAddress = (_a = object.delegatorAddress) !== null && _a !== void 0 ? _a : \"\";\n    message.withdrawAddress = (_b = object.withdrawAddress) !== null && _b !== void 0 ? _b : \"\";\n    return message;\n  }\n};\nvar baseMsgSetWithdrawAddressResponse = {};\nexports.MsgSetWithdrawAddressResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgSetWithdrawAddressResponse);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(_) {\n    var message = Object.assign({}, baseMsgSetWithdrawAddressResponse);\n    return message;\n  },\n  toJSON: function toJSON(_) {\n    var obj = {};\n    return obj;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = Object.assign({}, baseMsgSetWithdrawAddressResponse);\n    return message;\n  }\n};\nvar baseMsgWithdrawDelegatorReward = {\n  delegatorAddress: \"\",\n  validatorAddress: \"\"\n};\nexports.MsgWithdrawDelegatorReward = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.delegatorAddress !== \"\") {\n      writer.uint32(10).string(message.delegatorAddress);\n    }\n\n    if (message.validatorAddress !== \"\") {\n      writer.uint32(18).string(message.validatorAddress);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgWithdrawDelegatorReward);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.delegatorAddress = reader.string();\n          break;\n\n        case 2:\n          message.validatorAddress = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseMsgWithdrawDelegatorReward);\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = String(object.delegatorAddress);\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = String(object.validatorAddress);\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n    message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n\n    var message = Object.assign({}, baseMsgWithdrawDelegatorReward);\n    message.delegatorAddress = (_a = object.delegatorAddress) !== null && _a !== void 0 ? _a : \"\";\n    message.validatorAddress = (_b = object.validatorAddress) !== null && _b !== void 0 ? _b : \"\";\n    return message;\n  }\n};\nvar baseMsgWithdrawDelegatorRewardResponse = {};\nexports.MsgWithdrawDelegatorRewardResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgWithdrawDelegatorRewardResponse);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(_) {\n    var message = Object.assign({}, baseMsgWithdrawDelegatorRewardResponse);\n    return message;\n  },\n  toJSON: function toJSON(_) {\n    var obj = {};\n    return obj;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = Object.assign({}, baseMsgWithdrawDelegatorRewardResponse);\n    return message;\n  }\n};\nvar baseMsgWithdrawValidatorCommission = {\n  validatorAddress: \"\"\n};\nexports.MsgWithdrawValidatorCommission = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.validatorAddress !== \"\") {\n      writer.uint32(10).string(message.validatorAddress);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgWithdrawValidatorCommission);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.validatorAddress = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseMsgWithdrawValidatorCommission);\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = String(object.validatorAddress);\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n\n    var message = Object.assign({}, baseMsgWithdrawValidatorCommission);\n    message.validatorAddress = (_a = object.validatorAddress) !== null && _a !== void 0 ? _a : \"\";\n    return message;\n  }\n};\nvar baseMsgWithdrawValidatorCommissionResponse = {};\nexports.MsgWithdrawValidatorCommissionResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgWithdrawValidatorCommissionResponse);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(_) {\n    var message = Object.assign({}, baseMsgWithdrawValidatorCommissionResponse);\n    return message;\n  },\n  toJSON: function toJSON(_) {\n    var obj = {};\n    return obj;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = Object.assign({}, baseMsgWithdrawValidatorCommissionResponse);\n    return message;\n  }\n};\nvar baseMsgFundCommunityPool = {\n  depositor: \"\"\n};\nexports.MsgFundCommunityPool = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    var _iterator = _createForOfIteratorHelper(message.amount),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    if (message.depositor !== \"\") {\n      writer.uint32(18).string(message.depositor);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgFundCommunityPool);\n    message.amount = [];\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));\n          break;\n\n        case 2:\n          message.depositor = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseMsgFundCommunityPool);\n    message.amount = [];\n\n    if (object.amount !== undefined && object.amount !== null) {\n      var _iterator2 = _createForOfIteratorHelper(object.amount),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var e = _step2.value;\n          message.amount.push(coin_1.Coin.fromJSON(e));\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n\n    if (object.depositor !== undefined && object.depositor !== null) {\n      message.depositor = String(object.depositor);\n    } else {\n      message.depositor = \"\";\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n\n    if (message.amount) {\n      obj.amount = message.amount.map(function (e) {\n        return e ? coin_1.Coin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.amount = [];\n    }\n\n    message.depositor !== undefined && (obj.depositor = message.depositor);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n\n    var message = Object.assign({}, baseMsgFundCommunityPool);\n    message.amount = [];\n\n    if (object.amount !== undefined && object.amount !== null) {\n      var _iterator3 = _createForOfIteratorHelper(object.amount),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var e = _step3.value;\n          message.amount.push(coin_1.Coin.fromPartial(e));\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n\n    message.depositor = (_a = object.depositor) !== null && _a !== void 0 ? _a : \"\";\n    return message;\n  }\n};\nvar baseMsgFundCommunityPoolResponse = {};\nexports.MsgFundCommunityPoolResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgFundCommunityPoolResponse);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(_) {\n    var message = Object.assign({}, baseMsgFundCommunityPoolResponse);\n    return message;\n  },\n  toJSON: function toJSON(_) {\n    var obj = {};\n    return obj;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = Object.assign({}, baseMsgFundCommunityPoolResponse);\n    return message;\n  }\n};\n\nvar MsgClientImpl = /*#__PURE__*/function () {\n  function MsgClientImpl(rpc) {\n    _classCallCheck(this, MsgClientImpl);\n\n    this.rpc = rpc;\n    this.SetWithdrawAddress = this.SetWithdrawAddress.bind(this);\n    this.WithdrawDelegatorReward = this.WithdrawDelegatorReward.bind(this);\n    this.WithdrawValidatorCommission = this.WithdrawValidatorCommission.bind(this);\n    this.FundCommunityPool = this.FundCommunityPool.bind(this);\n  }\n\n  _createClass(MsgClientImpl, [{\n    key: \"SetWithdrawAddress\",\n    value: function SetWithdrawAddress(request) {\n      var data = exports.MsgSetWithdrawAddress.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"SetWithdrawAddress\", data);\n      return promise.then(function (data) {\n        return exports.MsgSetWithdrawAddressResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"WithdrawDelegatorReward\",\n    value: function WithdrawDelegatorReward(request) {\n      var data = exports.MsgWithdrawDelegatorReward.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawDelegatorReward\", data);\n      return promise.then(function (data) {\n        return exports.MsgWithdrawDelegatorRewardResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"WithdrawValidatorCommission\",\n    value: function WithdrawValidatorCommission(request) {\n      var data = exports.MsgWithdrawValidatorCommission.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawValidatorCommission\", data);\n      return promise.then(function (data) {\n        return exports.MsgWithdrawValidatorCommissionResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"FundCommunityPool\",\n    value: function FundCommunityPool(request) {\n      var data = exports.MsgFundCommunityPool.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"FundCommunityPool\", data);\n      return promise.then(function (data) {\n        return exports.MsgFundCommunityPoolResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }]);\n\n  return MsgClientImpl;\n}();\n\nexports.MsgClientImpl = MsgClientImpl;\n\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":null,"metadata":{},"sourceType":"script"}