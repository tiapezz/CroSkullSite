{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"F:\\\\Mattia\\\\Visual studio\\\\ProjectCroSkull\\\\croskull-nft-marketplace\\\\src\\\\components\\\\MetricContainer\\\\MetricContainer.jsx\";\n\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\n\nvar MetricContainer = function MetricContainer(_ref) {\n  var value = _ref.value,\n      icon = _ref.icon,\n      label = _ref.label,\n      tooltip = _ref.tooltip,\n      addClass = _ref.addClass,\n      _ref$vertical = _ref.vertical,\n      vertical = _ref$vertical === void 0 ? false : _ref$vertical,\n      usdValue = _ref.usdValue;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-container \".concat(vertical ? 'vertical' : ''),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, label, tooltip ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"tooltip-toggle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faQuestionCircle,\n    className: \"tooltip-icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sk-tooltip\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 29\n    }\n  }, tooltip)) : ''), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"metric-icon \".concat(addClass ? addClass : ''),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, value), icon ? /*#__PURE__*/React.createElement(\"img\", {\n    className: \"skull-icon\",\n    src: icon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }) : ''), usdValue ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"metric-usd-value\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"$\", parseFloat(usdValue).toFixed(2)) : '');\n};\n\nexport default MetricContainer;","map":{"version":3,"sources":["F:/Mattia/Visual studio/ProjectCroSkull/croskull-nft-marketplace/src/components/MetricContainer/MetricContainer.jsx"],"names":["React","useState","FontAwesomeIcon","faQuestionCircle","MetricContainer","value","icon","label","tooltip","addClass","vertical","usdValue","parseFloat","toFixed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,gBAAT,QAAiC,mCAAjC;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAQlB;AAAA,MAPFC,KAOE,QAPFA,KAOE;AAAA,MANFC,IAME,QANFA,IAME;AAAA,MALFC,KAKE,QALFA,KAKE;AAAA,MAJFC,OAIE,QAJFA,OAIE;AAAA,MAHFC,QAGE,QAHFA,QAGE;AAAA,2BAFFC,QAEE;AAAA,MAFFA,QAEE,8BAFS,KAET;AAAA,MADFC,QACE,QADFA,QACE;AACF,sBACI;AAAK,IAAA,SAAS,6BAAsBD,QAAQ,GAAG,UAAH,GAAgB,EAA9C,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KADL,EAGQC,OAAO,gBACH;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AACI,IAAA,IAAI,EAAEL,gBADV;AAEI,IAAA,SAAS,EAAC,cAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAKI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKK,OADL,CALJ,CADG,GAWH,EAdZ,CADJ,eAmBI;AACI,IAAA,SAAS,wBAAkBC,QAAQ,GAAGA,QAAH,GAAc,EAAxC,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,KAAL,CAHJ,EAKQC,IAAI,gBACA;AACI,IAAA,SAAS,EAAC,YADd;AAEI,IAAA,GAAG,EAAEA,IAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,GAKC,EAVb,CAnBJ,EAgCMK,QAAQ,gBACN;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACMC,UAAU,CAACD,QAAD,CAAV,CAAqBE,OAArB,CAA6B,CAA7B,CADN,CADM,GAIJ,EApCV,CADJ;AAyCH,CAlDD;;AAoDA,eAAeT,eAAf","sourcesContent":["import React , { useState } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\r\nconst MetricContainer = ({\r\n    value,\r\n    icon,\r\n    label,\r\n    tooltip,\r\n    addClass,\r\n    vertical = false,\r\n    usdValue,\r\n}) => {\r\n    return (\r\n        <div className={`metric-container ${vertical ? 'vertical' : ''}`}>\r\n            <span>\r\n                {label}\r\n                {\r\n                    tooltip ? (\r\n                        <span className=\"tooltip-toggle\">\r\n                            <FontAwesomeIcon \r\n                                icon={faQuestionCircle} \r\n                                className=\"tooltip-icon\"\r\n                            /> \r\n                            <span className=\"sk-tooltip\">\r\n                                {tooltip}\r\n                            </span>\r\n                        </span>\r\n                    ) : (\r\n                        ''\r\n                    )\r\n                }\r\n            </span>\r\n            <span \r\n                className={`metric-icon ${ addClass ? addClass : ''}`}\r\n            >\r\n                <b>{ value }</b>\r\n                {\r\n                    icon ? (\r\n                        <img \r\n                            className=\"skull-icon\"\r\n                            src={icon} \r\n                        />\r\n                    ) : ('')\r\n                }\r\n            </span>\r\n            { usdValue ? (\r\n                <span className=\"metric-usd-value\">\r\n                    ${parseFloat(usdValue).toFixed(2)}\r\n                </span>\r\n             ) : ('')\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MetricContainer;"]},"metadata":{},"sourceType":"module"}