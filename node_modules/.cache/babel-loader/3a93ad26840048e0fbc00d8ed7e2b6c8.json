{"ast":null,"code":"import _objectSpread from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\src\\\\components\\\\Marketplace\\\\Marketplace.jsx\";\n\nimport { ethers } from 'ethers';\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport store from \"../../redux/store\";\nimport { loadEbisusData, loadEbisusSkulls, loadEbisusBlue, loadEbisusRed, purchaseItem, loadEbisusSkullsNew, getAttribute } from \"../../redux/marketplace/marketplaceActions\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDungeon } from '@fortawesome/free-solid-svg-icons';\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport './marketplace.css';\nimport { sendNotification } from '../../redux/data/dataActions';\nimport { faAngleUp, faAngleDown, faQuestionCircle, faExternalLink } from '@fortawesome/free-solid-svg-icons';\nvar ipfsUri480 = \"https://croskull.mypinata.cloud/ipfs/QmWu9bKunKbv8Kkq8wEWGpCaW47oMBbH6ep4ZWBzAxHtgj/\";\nvar ipfsUri128 = \"https://croskull.mypinata.cloud/ipfs/QmZn1HvYE1o1J8LhNpxFTj5k8LQb2bWT49YvbrhB3r19Xx/\";\nvar blueImage = \"https://croskull.mypinata.cloud/ipfs/QmPvie22kUv9A7PcXFLbGtGBYuNiFdvQdUvVZZLNA59tbG/bluepotion.gif\";\nvar redImage = \"https://croskull.mypinata.cloud/ipfs/QmRdN5CQTpogBtjtnXq3PLrF7A4LezZ1TPt3ynXybcNNZP/redpotion.gif\";\n\nvar Marketplace = function Marketplace() {\n  var dispatch = useDispatch();\n\n  var _store$getState = store.getState(),\n      blockchain = _store$getState.blockchain,\n      marketplace = _store$getState.marketplace;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalData = _useState2[0],\n      setModalData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      viewInventory = _useState4[0],\n      toggleInventory = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      hasData = _useState6[0],\n      toggleData = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      sort = _useState8[0],\n      setSort = _useState8[1];\n\n  var _useState9 = useState([{\n    name: 'Background',\n    value: []\n  }, {\n    name: 'Skull',\n    value: []\n  }, {\n    name: 'Body',\n    value: []\n  }, {\n    name: 'Nose',\n    value: []\n  }, {\n    name: 'Eyes',\n    value: []\n  }, {\n    name: 'Hat',\n    value: []\n  }, {\n    name: 'Trait',\n    value: []\n  }]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      filter = _useState10[0],\n      setFilter = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      angleIconFilter = _useState12[0],\n      setAngleIconFilter = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      filterModal = _useState14[0],\n      setFilterModal = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      skullModal = _useState16[0],\n      setSkullModal = _useState16[1];\n\n  var _useState17 = useState(true),\n      _useState18 = _slicedToArray(_useState17, 2),\n      spinner = _useState18[0],\n      setSpinner = _useState18[1];\n\n  var _useState19 = useState(),\n      _useState20 = _slicedToArray(_useState19, 2),\n      skullArr = _useState20[0],\n      setSkullArr = _useState20[1];\n\n  var accountAddress = blockchain.accountAddress,\n      contractDetected = blockchain.contractDetected;\n  var saleSkulls = marketplace.saleSkulls,\n      saleBlue = marketplace.saleBlue,\n      saleRed = marketplace.saleRed,\n      blueForSales = marketplace.blueForSales,\n      redForSales = marketplace.redForSales,\n      skullAvgPrice = marketplace.skullAvgPrice,\n      skullFloorPrice = marketplace.skullFloorPrice,\n      skullForSales = marketplace.skullForSales,\n      skullSolds = marketplace.skullSolds,\n      skullTotalVolume = marketplace.skullTotalVolume,\n      loading = marketplace.loading,\n      skullList = marketplace.skullList,\n      attributesList = marketplace.attributesList;\n  useEffect(function () {\n    if (hasData) return;\n    dispatch(loadEbisusData(sort));\n    dispatch(getAttribute());\n    toggleData(true);\n  }, []);\n\n  var handlePurchase = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id, type) {\n      var contractDetected, ebisusMarketplace, accountBalance, saleSkulls, saleBlue, saleRed, items, _items$id, price, nftId, listingId, formattedPrice, formattedBalance;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              contractDetected = blockchain.contractDetected, ebisusMarketplace = blockchain.ebisusMarketplace, accountBalance = blockchain.accountBalance;\n              saleSkulls = marketplace.saleSkulls, saleBlue = marketplace.saleBlue, saleRed = marketplace.saleRed;\n              _context.t0 = type;\n              _context.next = _context.t0 === 'skull' ? 5 : _context.t0 === 'blue' ? 7 : _context.t0 === 'red' ? 9 : 11;\n              break;\n\n            case 5:\n              items = saleSkulls;\n              return _context.abrupt(\"break\", 11);\n\n            case 7:\n              items = saleBlue;\n              return _context.abrupt(\"break\", 11);\n\n            case 9:\n              items = saleRed;\n              return _context.abrupt(\"break\", 11);\n\n            case 11:\n              console.log(id, type, items[id]);\n\n              if (items && items[id]) {\n                _items$id = items[id], price = _items$id.price, nftId = _items$id.nftId, listingId = _items$id.listingId;\n                formattedPrice = ethers.utils.parseUnits(price, 18);\n                formattedBalance = accountBalance ? ethers.utils.parseUnits(accountBalance, 0) : false;\n\n                if (formattedBalance && formattedBalance.gte(formattedPrice)) {\n                  dispatch(purchaseItem({\n                    _listingId: listingId,\n                    _cost: formattedPrice,\n                    _skullId: nftId\n                  }));\n                } else {\n                  console.log(false);\n                  dispatch(sendNotification({\n                    title: \"Insufficient balance\",\n                    type: \"info\",\n                    tx: '',\n                    message: \"You need \".concat(price, \" CRO\")\n                  }));\n                }\n              }\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handlePurchase(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var _useState21 = useState({\n    currentView: 'croskull',\n    //croskull, bluepotion, redpotion, petegg,\n    selectedSkulls: [],\n    selectedStakeSkulls: []\n  }),\n      _useState22 = _slicedToArray(_useState21, 2),\n      viewState = _useState22[0],\n      setViewState = _useState22[1];\n\n  function openSkullModal(croskull) {\n    setModalData(croskull);\n    setSkullModal(true);\n  }\n\n  function closeSkullModal() {\n    setSkullModal(false);\n  }\n\n  function selectSort(event) {\n    var select = document.getElementById('sortBy');\n    var value = select.selectedIndex;\n    sort = value;\n    loadSkullFilter();\n  }\n\n  function openFilterModal() {\n    document.getElementById('filter-modal').style.visibility = 'visible';\n    setFilterModal(true);\n  }\n\n  var setFilterAngleState = function setFilterAngleState(i) {\n    var ids = _toConsumableArray(angleIconFilter);\n\n    ids[i] = !ids[i];\n    setAngleIconFilter(ids);\n  };\n\n  var ShowCheckbox = function ShowCheckbox(i) {\n    setFilterAngleState(i);\n    var d = document.getElementById(\"filter-checkbox-\" + i);\n    d.style.height = 'auto';\n  };\n\n  function closeFilterModal() {\n    document.getElementById('filter-modal').style.visibility = 'hidden';\n  }\n\n  function loadSkullFilter() {\n    dispatch(loadEbisusSkullsNew(6));\n    dispatch(loadEbisusSkullsNew(sort));\n  }\n\n  function addFilter(name, value) {\n    switch (name) {\n      case 'Background':\n        if (!filter[0].value.includes(value)) filter[0].value.push(value);else {\n          var index = filter[0].value.indexOf(value);\n          filter[0].value.splice(index, 1);\n        }\n        break;\n\n      case 'Skull':\n        if (!filter[1].value.includes(value)) filter[1].value.push(value);else {\n          var _index = filter[1].value.indexOf(value);\n\n          filter[1].value.splice(_index, 1);\n        }\n        break;\n\n      case 'Body':\n        if (!filter[2].value.includes(value)) filter[2].value.push(value);else {\n          var _index2 = filter[2].value.indexOf(value);\n\n          filter[2].value.splice(_index2, 1);\n        }\n        break;\n\n      case 'Nose':\n        if (!filter[3].value.includes(value)) filter[3].value.push(value);else {\n          var _index3 = filter[3].value.indexOf(value);\n\n          filter[3].value.splice(_index3, 1);\n        }\n        break;\n\n      case 'Eyes':\n        if (!filter[4].value.includes(value)) filter[4].value.push(value);else {\n          var _index4 = filter[4].value.indexOf(value);\n\n          filter[4].value.splice(_index4, 1);\n        }\n        break;\n\n      case 'Hat':\n        if (!filter[5].value.includes(value)) filter[5].value.push(value);else {\n          var _index5 = filter[5].value.indexOf(value);\n\n          filter[5].value.splice(_index5, 1);\n        }\n\n      case 'Trait':\n        if (!filter[6].value.includes(value)) filter[6].value.push(value);else {\n          var _index6 = filter[6].value.indexOf(value);\n\n          filter[6].value.splice(_index6, 1);\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    dispatch(loadEbisusSkullsNew(sort));\n  }\n\n  function checkFilter(cr) {\n    var flag = true;\n    filter.map(function (f) {\n      if (f.value.length > 0 && flag) {\n        cr.nft.attributes.map(function (at) {\n          if (at.trait_type == f.name && flag) {\n            console.log('secondo if');\n            if (f.value.includes(at.value)) flag = true;else {\n              flag = false;\n            }\n          }\n        });\n      }\n    });\n    console.log(flag);\n    return flag;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"skull-modal\",\n    hidden: !skullModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mSkull-container sk-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }, modalData != null ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"close-btn\",\n    onClick: function onClick() {\n      closeSkullModal();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 33\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-row sk-flex skull-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"skull-details\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 41\n    }\n  }, modalData.nft.name), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 41\n    }\n  }, \"Seller: \", modalData.seller.substr(0, 4), \"...\", modalData.seller.substr(39, 41)), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 41\n    }\n  }, \"Price: \", modalData.price, \"CRO\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 41\n    }\n  }, \"Rank: \", modalData.nft.rank)), /*#__PURE__*/React.createElement(\"img\", {\n    src: ipfsUri480 + modalData.nft.edition + '.webp',\n    className: \"img-modal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"attribute-container row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 33\n    }\n  }, modalData.nft.attributes.map(function (at) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"attribute\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 49\n      }\n    }, at.trait_type), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 49\n      }\n    }, at.value), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 49\n      }\n    }, (at.occurrence * 100).toFixed(0) + '%'));\n  }))) : '')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-flex sk-row \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-container wd-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-head sk-row sk-flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"sk-row view-list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"skull-button view-button \".concat(viewState.currentView === 'croskull' ? 'active' : ''),\n    onClick: function onClick() {\n      setViewState(_objectSpread({}, viewState, {\n        currentView: 'croskull'\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 33\n    }\n  }, saleSkulls && skullForSales > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"floating-counter\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 45\n    }\n  }, skullForSales) : '', \"CroSkulls\"), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"skull-button view-button \".concat(viewState.currentView === 'bluepotion' ? 'active' : ''),\n    onClick: function onClick() {\n      setViewState(_objectSpread({}, viewState, {\n        currentView: 'bluepotion'\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 33\n    }\n  }, saleBlue.length && blueForSales > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"floating-counter\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 45\n    }\n  }, blueForSales) : '', \"Blue Potions\"), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"skull-button view-button \".concat(viewState.currentView === 'redpotion' ? 'active' : ''),\n    onClick: function onClick() {\n      setViewState(_objectSpread({}, viewState, {\n        currentView: 'redpotion'\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 33\n    }\n  }, saleRed.length && redForSales > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"floating-counter\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 45\n    }\n  }, redForSales) : '', \"Red Potions\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box-content sk-column \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \" sk-row sk-flex\",\n    hidden: viewState.currentView.includes('croskull') ? false : true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-column filter-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sort-container sk-row sk-flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"sortBy\",\n    id: \"sortBy\",\n    onChange: selectSort,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"optgroup\", {\n    label: \"Sort By\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    selected: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 49\n    }\n  }, \"None\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1\",\n    onClick: selectSort,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 49\n    }\n  }, \"Latest Listing\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2\",\n    onClick: selectSort,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 49\n    }\n  }, \"Price (Lowest)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"3\",\n    onClick: selectSort,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 49\n    }\n  }, \"Price (Highest)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"4\",\n    onClick: selectSort,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 49\n    }\n  }, \"Rank (Lowest)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"5\",\n    onClick: selectSort,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 49\n    }\n  }, \"Rank (Highest)\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-clear\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"skull-button clear-button\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 41\n    }\n  }, \"Clear\"))), attributesList ? attributesList.map(function (attribute, i) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-box\",\n      key: 'filter-box-' + i,\n      id: 'filter-box-' + i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-header\",\n      onClick: function onClick() {\n        return ShowCheckbox(i);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 65\n      }\n    }, attribute.name, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 65\n      }\n    }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: angleIconFilter[i] ? faAngleUp : faAngleDown,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 72\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-checkbox\",\n      id: 'filter-checkbox-' + i,\n      hidden: !angleIconFilter[i],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 61\n      }\n    }, attribute.value.map(function (value, i) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"checkbox\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: attribute.name + '-' + value,\n        name: attribute.name + '-' + value,\n        onChange: function onChange() {\n          return addFilter(attribute.name, value);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 81\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        for: attribute.name + '-' + value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 81\n        }\n      }, \" \", value));\n    })));\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-row skull-grid skull-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 33\n    }\n  }, skullList ? skullList.map(function (cr, index) {\n    if (checkFilter(cr)) return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"skull-item\",\n      onClick: function onClick() {\n        return openSkullModal(cr);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(LazyLoadImage, {\n      src: \"\".concat(ipfsUri480).concat(cr.nftId, \".webp\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 65\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"floating-badges-container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge id\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 69\n      }\n    }, cr.nftId), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge rank\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 69\n      }\n    }, \"Price \", cr.price)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bottom-actions\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"skull-button mission-button\",\n      onClick: function onClick() {\n        handlePurchase(index, 'skull');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faDungeon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 73\n      }\n    }), \"Purchase\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rank-container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge id\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 69\n      }\n    }, \"Rank: \", cr.nft.rank))));\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 49\n    }\n  }, \"Loading...\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \" \",\n    hidden: viewState.currentView.includes('bluepotion') ? false : true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-row skull-grid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 33\n    }\n  }, saleBlue.length > 0 ? saleBlue.map(function (cr, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"skull-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(LazyLoadImage, {\n      src: \"\".concat(blueImage),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"floating-badges-container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge id\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 65\n      }\n    }, cr.nftId), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge rank\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 65\n      }\n    }, \"Price \", cr.price)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bottom-actions\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"skull-button mission-button\",\n      onClick: function onClick() {\n        handlePurchase(index, 'blue');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faDungeon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 69\n      }\n    }), \"Purchase\"))));\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-flex sk-column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 53\n    }\n  }, loading ? \"Loading...\" : '')), saleSkulls.length < skullForSales ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"skull-button load-more\",\n    onClick: function onClick() {\n      dispatch(loadEbisusBlue());\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 45\n    }\n  }, \"Load More\") : '')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    hidden: viewState.currentView.includes('redpotion') ? false : true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-row skull-grid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 33\n    }\n  }, saleRed.length > 0 ? saleRed.map(function (cr, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"skull-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(LazyLoadImage, {\n      src: \"\".concat(redImage),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"floating-badges-container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge id\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 65\n      }\n    }, cr.nftId), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge rank\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 65\n      }\n    }, \"Price \", cr.price)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bottom-actions\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"skull-button mission-button\",\n      onClick: function onClick() {\n        handlePurchase(index, 'red');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faDungeon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 69\n      }\n    }), \"Purchase\"))));\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-flex sk-column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 53\n    }\n  }, loading ? \"Loading...\" : '')), saleSkulls.length < skullForSales ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"skull-button load-more\",\n    onClick: function onClick() {\n      dispatch(loadEbisusRed());\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 45\n    }\n  }, \"Load More\") : '')))))), false ? '' : '');\n};\n\nexport default Marketplace;\nvar filters = [{\n  type: 'background',\n  value: ['blue', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red']\n}, {\n  type: 'Body',\n  value: ['blue', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red']\n}, {\n  type: 'Eyes',\n  value: ['blue', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red']\n}, {\n  type: 'hat',\n  value: ['blue', 'greeb', 'red', 'greeb', 'red']\n}, {\n  type: 'Nose',\n  value: ['blue', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red']\n}, {\n  type: 'Skull',\n  value: ['blue', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red']\n}, {\n  type: 'Trait',\n  value: [5, 6]\n}];","map":{"version":3,"sources":["F:/Mattia/Visual studio/AppCroskull/croskull-nft-marketplace/src/components/Marketplace/Marketplace.jsx"],"names":["ethers","React","useEffect","useState","useDispatch","store","loadEbisusData","loadEbisusSkulls","loadEbisusBlue","loadEbisusRed","purchaseItem","loadEbisusSkullsNew","getAttribute","FontAwesomeIcon","faDungeon","LazyLoadImage","sendNotification","faAngleUp","faAngleDown","faQuestionCircle","faExternalLink","ipfsUri480","ipfsUri128","blueImage","redImage","Marketplace","dispatch","getState","blockchain","marketplace","modalData","setModalData","viewInventory","toggleInventory","hasData","toggleData","sort","setSort","name","value","filter","setFilter","angleIconFilter","setAngleIconFilter","filterModal","setFilterModal","skullModal","setSkullModal","spinner","setSpinner","skullArr","setSkullArr","accountAddress","contractDetected","saleSkulls","saleBlue","saleRed","blueForSales","redForSales","skullAvgPrice","skullFloorPrice","skullForSales","skullSolds","skullTotalVolume","loading","skullList","attributesList","handlePurchase","id","type","ebisusMarketplace","accountBalance","items","console","log","price","nftId","listingId","formattedPrice","utils","parseUnits","formattedBalance","gte","_listingId","_cost","_skullId","title","tx","message","currentView","selectedSkulls","selectedStakeSkulls","viewState","setViewState","openSkullModal","croskull","closeSkullModal","selectSort","event","select","document","getElementById","selectedIndex","loadSkullFilter","openFilterModal","style","visibility","setFilterAngleState","i","ids","ShowCheckbox","d","height","closeFilterModal","addFilter","includes","push","index","indexOf","splice","checkFilter","cr","flag","map","f","length","nft","attributes","at","trait_type","seller","substr","rank","edition","occurrence","toFixed","attribute","filters"],"mappings":"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","sourcesContent":["import { ethers } from 'ethers';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport store from \"../../redux/store\";\r\nimport { loadEbisusData, loadEbisusSkulls, loadEbisusBlue, loadEbisusRed, purchaseItem, loadEbisusSkullsNew, getAttribute } from \"../../redux/marketplace/marketplaceActions\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faDungeon } from '@fortawesome/free-solid-svg-icons';\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport './marketplace.css';\r\nimport { sendNotification } from '../../redux/data/dataActions';\r\nimport { faAngleUp, faAngleDown, faQuestionCircle, faExternalLink } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ipfsUri480 = \"https://croskull.mypinata.cloud/ipfs/QmWu9bKunKbv8Kkq8wEWGpCaW47oMBbH6ep4ZWBzAxHtgj/\"\r\nconst ipfsUri128 = \"https://croskull.mypinata.cloud/ipfs/QmZn1HvYE1o1J8LhNpxFTj5k8LQb2bWT49YvbrhB3r19Xx/\"\r\nconst blueImage = \"https://croskull.mypinata.cloud/ipfs/QmPvie22kUv9A7PcXFLbGtGBYuNiFdvQdUvVZZLNA59tbG/bluepotion.gif\";\r\nconst redImage = \"https://croskull.mypinata.cloud/ipfs/QmRdN5CQTpogBtjtnXq3PLrF7A4LezZ1TPt3ynXybcNNZP/redpotion.gif\";\r\nconst Marketplace = () => {\r\n    let dispatch = useDispatch()\r\n    let { blockchain, marketplace } = store.getState()\r\n    let [modalData, setModalData] = useState()\r\n    const [viewInventory, toggleInventory] = useState(false)\r\n    const [hasData, toggleData] = useState(false)\r\n    let [sort, setSort] = useState(0);\r\n    let [filter, setFilter] = useState([\r\n        { name: 'Background', value: [] },\r\n        { name: 'Skull', value: [] },\r\n        { name: 'Body', value: [] },\r\n        { name: 'Nose', value: [] },\r\n        { name: 'Eyes', value: [] },\r\n        { name: 'Hat', value: [] },\r\n        { name: 'Trait', value: [] }\r\n    ]);\r\n    let [angleIconFilter, setAngleIconFilter] = useState([]);\r\n    let [filterModal, setFilterModal] = useState(false);\r\n    let [skullModal, setSkullModal] = useState(false);\r\n    let [spinner, setSpinner] = useState(true);\r\n    let [skullArr, setSkullArr] = useState();\r\n    let { accountAddress, contractDetected } = blockchain\r\n    let { saleSkulls, saleBlue, saleRed, blueForSales, redForSales, skullAvgPrice, skullFloorPrice, skullForSales, skullSolds, skullTotalVolume, loading, skullList, attributesList } = marketplace\r\n\r\n    useEffect(() => {\r\n        if (hasData) return\r\n        dispatch(loadEbisusData(sort))\r\n        dispatch(getAttribute())\r\n        toggleData(true)\r\n    }, [])\r\n\r\n    const handlePurchase = async (id, type) => {\r\n        let { contractDetected, ebisusMarketplace, accountBalance } = blockchain\r\n        let { saleSkulls, saleBlue, saleRed } = marketplace\r\n        let items;\r\n        switch (type) {\r\n            case 'skull': {\r\n                items = saleSkulls\r\n                break;\r\n            }\r\n            case 'blue': {\r\n                items = saleBlue\r\n                break;\r\n            }\r\n            case 'red': {\r\n                items = saleRed\r\n                break;\r\n            }\r\n        }\r\n        console.log(id, type, items[id])\r\n        if (items && items[id]) {\r\n            let { price, nftId, listingId } = items[id]\r\n            let formattedPrice = ethers.utils.parseUnits(price, 18)\r\n            let formattedBalance = accountBalance ? ethers.utils.parseUnits(accountBalance, 0) : false;\r\n            if (formattedBalance && formattedBalance.gte(formattedPrice)) {\r\n                dispatch(purchaseItem({\r\n                    _listingId: listingId,\r\n                    _cost: formattedPrice,\r\n                    _skullId: nftId\r\n                }))\r\n            } else {\r\n                console.log(false)\r\n                dispatch(sendNotification({\r\n                    title: `Insufficient balance`,\r\n                    type: \"info\",\r\n                    tx: '',\r\n                    message: `You need ${price} CRO`\r\n                }))\r\n            }\r\n        }\r\n    }\r\n\r\n    const [viewState, setViewState] = useState({\r\n        currentView: 'croskull', //croskull, bluepotion, redpotion, petegg,\r\n        selectedSkulls: [],\r\n        selectedStakeSkulls: []\r\n    })\r\n\r\n    function openSkullModal(croskull) {\r\n        setModalData(croskull);\r\n        setSkullModal(true);\r\n    }\r\n\r\n    function closeSkullModal() {\r\n        setSkullModal(false);\r\n    }\r\n\r\n    function selectSort(event) {\r\n        const select = document.getElementById('sortBy');\r\n        let value = select.selectedIndex;\r\n        sort = value;\r\n\r\n        loadSkullFilter();\r\n\r\n    }\r\n    function openFilterModal() {\r\n        document.getElementById('filter-modal').style.visibility = 'visible';\r\n        setFilterModal(true);\r\n\r\n    }\r\n\r\n    const setFilterAngleState = (i) => {\r\n        let ids = [...angleIconFilter];\r\n        ids[i] = !ids[i];\r\n        setAngleIconFilter(ids);\r\n    }\r\n\r\n    const ShowCheckbox = (i) => {\r\n        setFilterAngleState(i);\r\n        let d = document.getElementById(\"filter-checkbox-\" + i);\r\n        d.style.height = 'auto';\r\n\r\n    }\r\n\r\n\r\n    function closeFilterModal() {\r\n        document.getElementById('filter-modal').style.visibility = 'hidden';\r\n    }\r\n\r\n    function loadSkullFilter() {\r\n        dispatch(loadEbisusSkullsNew(6));\r\n        dispatch(loadEbisusSkullsNew(sort));\r\n    }\r\n\r\n    function addFilter(name, value) {\r\n        switch (name) {\r\n            case 'Background':\r\n                if (!filter[0].value.includes(value))\r\n                    filter[0].value.push(value);\r\n                else {\r\n                    const index = filter[0].value.indexOf(value);\r\n                    filter[0].value.splice(index, 1);\r\n                }\r\n                break;\r\n            case 'Skull':\r\n                if (!filter[1].value.includes(value))\r\n                    filter[1].value.push(value);\r\n                else {\r\n                    const index = filter[1].value.indexOf(value);\r\n                    filter[1].value.splice(index, 1);\r\n                }\r\n                break;\r\n            case 'Body':\r\n                if (!filter[2].value.includes(value))\r\n                    filter[2].value.push(value);\r\n                else {\r\n                    const index = filter[2].value.indexOf(value);\r\n                    filter[2].value.splice(index, 1);\r\n                }\r\n                break;\r\n            case 'Nose':\r\n                if (!filter[3].value.includes(value))\r\n                    filter[3].value.push(value);\r\n                else {\r\n                    const index = filter[3].value.indexOf(value);\r\n                    filter[3].value.splice(index, 1);\r\n                }\r\n                break;\r\n            case 'Eyes':\r\n                if (!filter[4].value.includes(value))\r\n                    filter[4].value.push(value);\r\n                else {\r\n                    const index = filter[4].value.indexOf(value);\r\n                    filter[4].value.splice(index, 1);\r\n                }\r\n                break;\r\n            case 'Hat':\r\n                if (!filter[5].value.includes(value))\r\n                    filter[5].value.push(value);\r\n                else {\r\n                    const index = filter[5].value.indexOf(value);\r\n                    filter[5].value.splice(index, 1);\r\n                }\r\n            case 'Trait':\r\n                if (!filter[6].value.includes(value))\r\n                    filter[6].value.push(value);\r\n                else {\r\n                    const index = filter[6].value.indexOf(value);\r\n                    filter[6].value.splice(index, 1);\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        dispatch(loadEbisusSkullsNew(sort));\r\n    }\r\n\r\n    function checkFilter(cr) {\r\n        let flag = true;\r\n        filter.map(f => {\r\n            if (f.value.length > 0 && flag) {\r\n                cr.nft.attributes.map(at => {\r\n                    if (at.trait_type == f.name && flag) {\r\n                        console.log('secondo if')\r\n                        if (f.value.includes(at.value))\r\n                            flag = true\r\n                        else {\r\n                            flag = false;\r\n                        }\r\n                    }\r\n                })\r\n\r\n            }\r\n        })\r\n        console.log(flag);\r\n        return flag;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div id='skull-modal' hidden={!skullModal}>\r\n                <div className='mSkull-container sk-box'>\r\n                    {\r\n                        modalData != null ?\r\n                            <>\r\n                                <span class=\"close-btn\" onClick={() => { closeSkullModal() }}>\r\n                                    &times;\r\n                                </span>\r\n                                <div className='sk-row sk-flex skull-box'>\r\n                                    <div className='skull-details'>\r\n                                        <h1>{modalData.nft.name}</h1>\r\n                                        <h1>Seller: {modalData.seller.substr(0, 4)}...{modalData.seller.substr(39, 41)}</h1>\r\n                                        <h1>Price: {modalData.price}CRO</h1>\r\n                                        <h1>Rank: {modalData.nft.rank}</h1>\r\n                                    </div>\r\n                                    <img src={ipfsUri480 + modalData.nft.edition + '.webp'} className='img-modal'></img>\r\n                                </div>\r\n                                <div className='attribute-container row'>\r\n                                    {modalData.nft.attributes.map(at => {\r\n                                        return (\r\n                                            <div className='attribute'>\r\n                                                <p>{at.trait_type}</p>\r\n                                                <p>{at.value}</p>\r\n                                                <p>{(at.occurrence * 100).toFixed(0) + '%'}</p>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                            </>\r\n                            :\r\n                            ''\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"sk-flex sk-row \">\r\n                <div className=\"sk-container wd-100\">\r\n                    <div className=\"sk-box\">\r\n                        <div className=\"tab-head sk-row sk-flex\">\r\n                            <ul className=\"sk-row view-list\">\r\n                                <li className={`skull-button view-button ${viewState.currentView === 'croskull' ? 'active' : ''}`}\r\n                                    onClick={() => {\r\n                                        setViewState({\r\n                                            ...viewState,\r\n                                            currentView: 'croskull'\r\n                                        })\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        saleSkulls && skullForSales > 0 ? (\r\n                                            <span className=\"floating-counter\">{skullForSales}</span>\r\n                                        ) :\r\n                                            ''\r\n                                    }\r\n                                    CroSkulls\r\n                                </li>\r\n                                <li\r\n                                    className={`skull-button view-button ${viewState.currentView === 'bluepotion' ? 'active' : ''}`}\r\n                                    onClick={() => {\r\n                                        setViewState({\r\n                                            ...viewState,\r\n                                            currentView: 'bluepotion'\r\n                                        })\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        saleBlue.length && blueForSales > 0 ? (\r\n                                            <span className=\"floating-counter\">{blueForSales}</span>\r\n                                        ) :\r\n                                            ''\r\n                                    }\r\n                                    Blue Potions\r\n                                </li>\r\n                                <li\r\n                                    className={`skull-button view-button ${viewState.currentView === 'redpotion' ? 'active' : ''}`}\r\n                                    onClick={() => {\r\n                                        setViewState({\r\n                                            ...viewState,\r\n                                            currentView: 'redpotion'\r\n                                        })\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        saleRed.length && redForSales > 0 ? (\r\n                                            <span className=\"floating-counter\">{redForSales}</span>\r\n                                        ) :\r\n                                            ''\r\n                                    }\r\n                                    Red Potions\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"sk-box-content sk-column \">\r\n                            <div className=' sk-row sk-flex' hidden={viewState.currentView.includes('croskull') ? false : true}>\r\n                                <div className='sk-column filter-container'>\r\n                                    <div className='sort-container sk-row sk-flex'>\r\n                                        <select name=\"sortBy\" id=\"sortBy\" onChange={selectSort} >\r\n                                            <optgroup label=\"Sort By\">\r\n                                                <option value='0' selected>None</option>\r\n                                                <option value=\"1\" onClick={selectSort}>Latest Listing</option>\r\n                                                <option value=\"2\" onClick={selectSort}>Price (Lowest)</option>\r\n                                                <option value=\"3\" onClick={selectSort}>Price (Highest)</option>\r\n                                                <option value=\"4\" onClick={selectSort}>Rank (Lowest)</option>\r\n                                                <option value=\"5\" onClick={selectSort}>Rank (Highest)</option>\r\n                                            </optgroup>\r\n                                        </select>\r\n                                        <div className='button-clear'>\r\n                                        <button className='skull-button clear-button' >Clear</button>\r\n                                        </div>\r\n                                    </div>\r\n                                        {\r\n                                            attributesList ?\r\n                                                attributesList.map((attribute, i) => {\r\n                                                    return (\r\n                                                        <div className='filter-box' key={'filter-box-' + i} id={'filter-box-' + i}>\r\n                                                            <div className='filter-header' onClick={() => ShowCheckbox(i)}>\r\n                                                                <h1>{attribute.name}\r\n                                                                <span> <FontAwesomeIcon icon={angleIconFilter[i] ? faAngleUp : faAngleDown} /></span></h1>\r\n                                                            </div>\r\n                                                            <div className='filter-checkbox' id={'filter-checkbox-' + i} hidden={!angleIconFilter[i]}>\r\n                                                                {\r\n                                                                    attribute.value.map((value, i) => {\r\n                                                                        return (\r\n                                                                            <div className='checkbox'>\r\n                                                                                <input type=\"checkbox\" id={attribute.name + '-' + value} name={attribute.name + '-' + value} onChange={() => addFilter(attribute.name, value)} />\r\n                                                                                <label for={attribute.name + '-' + value}> {value}</label>\r\n                                                                            </div>\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    )\r\n                                                }) : (<></>)\r\n                                        }\r\n                                </div>\r\n                                <div className=\"sk-row skull-grid skull-box\">\r\n                                    {\r\n                                        skullList ?\r\n                                            (skullList).map((cr, index) => {\r\n                                                if (checkFilter(cr))\r\n                                                    return (\r\n                                                        <div key={index} className=\"skull-item\" onClick={() => openSkullModal(cr)}>\r\n                                                            <div\r\n                                                                className=\"card\"\r\n                                                            >\r\n                                                                <LazyLoadImage\r\n                                                                    src={`${ipfsUri480}${cr.nftId}.webp`}\r\n                                                                />\r\n                                                                <div className=\"floating-badges-container\">\r\n                                                                    <span className=\"badge id\">{cr.nftId}</span>\r\n                                                                    <span className=\"badge rank\">Price {cr.price}</span>\r\n                                                                </div>\r\n                                                                <div className=\"bottom-actions\">\r\n                                                                    <button\r\n                                                                        className=\"skull-button mission-button\"\r\n                                                                        onClick={() => {\r\n                                                                            handlePurchase(index, 'skull')\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <FontAwesomeIcon icon={faDungeon} />\r\n                                                                        Purchase\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                                <div className='rank-container'>\r\n                                                                    <span className=\"badge id\">Rank: {cr.nft.rank}</span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    );\r\n                                            })\r\n                                            : (\r\n                                                <div>\r\n                                                    Loading...\r\n                                                </div>\r\n                                            )\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className={` `} hidden={viewState.currentView.includes('bluepotion') ? false : true}>\r\n                                <div className=\"sk-row skull-grid\">\r\n                                    {\r\n                                        saleBlue.length > 0 ?\r\n                                            (saleBlue).map((cr, index) => {\r\n                                                return (\r\n                                                    <div key={index} className=\"skull-item\" >\r\n                                                        <div\r\n                                                            className=\"card\"\r\n                                                        >\r\n                                                            <LazyLoadImage\r\n                                                                src={`${blueImage}`}\r\n                                                            />\r\n                                                            <div className=\"floating-badges-container\">\r\n                                                                <span className=\"badge id\">{cr.nftId}</span>\r\n                                                                <span className=\"badge rank\">Price {cr.price}</span>\r\n                                                            </div>\r\n                                                            <div className=\"bottom-actions\">\r\n                                                                <button\r\n                                                                    className=\"skull-button mission-button\"\r\n                                                                    onClick={() => {\r\n                                                                        handlePurchase(index, 'blue')\r\n                                                                    }}\r\n                                                                >\r\n                                                                    <FontAwesomeIcon icon={faDungeon} />\r\n                                                                    Purchase\r\n                                                                </button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                );\r\n                                            })\r\n                                            : (\r\n                                                <div className=\"sk-flex sk-column\">\r\n                                                    <span>{loading ? `Loading...` : ''}</span>\r\n                                                </div>\r\n                                            )\r\n                                    }\r\n                                    {\r\n                                        saleSkulls.length < skullForSales ? (\r\n                                            <button\r\n                                                className=\"skull-button load-more\"\r\n                                                onClick={() => {\r\n                                                    dispatch(loadEbisusBlue())\r\n                                                }}\r\n                                            >\r\n                                                Load More\r\n                                            </button>\r\n                                        ) : (\r\n                                            ''\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className={``} hidden={viewState.currentView.includes('redpotion') ? false : true}>\r\n                                <div className=\"sk-row skull-grid\">\r\n                                    {\r\n                                        saleRed.length > 0 ?\r\n                                            (saleRed).map((cr, index) => {\r\n                                                return (\r\n                                                    <div key={index} className=\"skull-item\" >\r\n                                                        <div\r\n                                                            className=\"card\"\r\n                                                        >\r\n                                                            <LazyLoadImage\r\n                                                                src={`${redImage}`}\r\n                                                            />\r\n                                                            <div className=\"floating-badges-container\">\r\n                                                                <span className=\"badge id\">{cr.nftId}</span>\r\n                                                                <span className=\"badge rank\">Price {cr.price}</span>\r\n                                                            </div>\r\n                                                            <div className=\"bottom-actions\">\r\n                                                                <button\r\n                                                                    className=\"skull-button mission-button\"\r\n                                                                    onClick={() => {\r\n                                                                        handlePurchase(index, 'red')\r\n                                                                    }}\r\n                                                                >\r\n                                                                    <FontAwesomeIcon icon={faDungeon} />\r\n                                                                    Purchase\r\n                                                                </button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                );\r\n                                            })\r\n                                            : (\r\n                                                <div className=\"sk-flex sk-column\">\r\n                                                    <span>{loading ? `Loading...` : ''}</span>\r\n                                                </div>\r\n                                            )\r\n                                    }\r\n                                    {\r\n                                        saleSkulls.length < skullForSales ? (\r\n                                            <button\r\n                                                className=\"skull-button load-more\"\r\n                                                onClick={() => {\r\n                                                    dispatch(loadEbisusRed())\r\n                                                }}\r\n                                            >\r\n                                                Load More\r\n                                            </button>\r\n                                        ) : (\r\n                                            ''\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {false ? (\r\n                '') : ('')}\r\n\r\n        </ >\r\n    )\r\n}\r\n\r\nexport default Marketplace;\r\n\r\nconst filters =\r\n    [\r\n        {\r\n            type: 'background',\r\n            value: ['blue', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red']\r\n        },\r\n        {\r\n            type: 'Body',\r\n            value: ['blue', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red']\r\n        },\r\n        {\r\n            type: 'Eyes',\r\n            value: ['blue', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red']\r\n        },\r\n        {\r\n            type: 'hat',\r\n            value: ['blue', 'greeb', 'red', 'greeb', 'red']\r\n        },\r\n        {\r\n            type: 'Nose',\r\n            value: ['blue', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red']\r\n        },\r\n        {\r\n            type: 'Skull',\r\n            value: ['blue', 'greeb', 'red', 'greeb', 'red', 'greeb', 'red']\r\n        },\r\n        {\r\n            type: 'Trait',\r\n            value: [5, 6]\r\n        },\r\n    ];\r\n\r\n"]},"metadata":{},"sourceType":"module"}