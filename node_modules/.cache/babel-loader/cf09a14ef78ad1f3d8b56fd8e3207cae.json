{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"F:\\\\Mattia\\\\Visual studio\\\\ProjectCroSkull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"F:\\\\Mattia\\\\Visual studio\\\\ProjectCroSkull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgClientImpl = exports.MsgDepositResponse = exports.MsgDeposit = exports.MsgVoteResponse = exports.MsgVote = exports.MsgSubmitProposalResponse = exports.MsgSubmitProposal = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nvar long_1 = __importDefault(require(\"long\"));\n\nvar minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nvar any_1 = require(\"../../../google/protobuf/any\");\n\nvar gov_1 = require(\"../../../cosmos/gov/v1beta1/gov\");\n\nvar coin_1 = require(\"../../../cosmos/base/v1beta1/coin\");\n\nexports.protobufPackage = \"cosmos.gov.v1beta1\";\nvar baseMsgSubmitProposal = {\n  proposer: \"\"\n};\nexports.MsgSubmitProposal = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.content !== undefined) {\n      any_1.Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n    }\n\n    var _iterator = _createForOfIteratorHelper(message.initialDeposit),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        coin_1.Coin.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    if (message.proposer !== \"\") {\n      writer.uint32(26).string(message.proposer);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgSubmitProposal);\n    message.initialDeposit = [];\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.content = any_1.Any.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.initialDeposit.push(coin_1.Coin.decode(reader, reader.uint32()));\n          break;\n\n        case 3:\n          message.proposer = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseMsgSubmitProposal);\n    message.initialDeposit = [];\n\n    if (object.content !== undefined && object.content !== null) {\n      message.content = any_1.Any.fromJSON(object.content);\n    } else {\n      message.content = undefined;\n    }\n\n    if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n      var _iterator2 = _createForOfIteratorHelper(object.initialDeposit),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var e = _step2.value;\n          message.initialDeposit.push(coin_1.Coin.fromJSON(e));\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n\n    if (object.proposer !== undefined && object.proposer !== null) {\n      message.proposer = String(object.proposer);\n    } else {\n      message.proposer = \"\";\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.content !== undefined && (obj.content = message.content ? any_1.Any.toJSON(message.content) : undefined);\n\n    if (message.initialDeposit) {\n      obj.initialDeposit = message.initialDeposit.map(function (e) {\n        return e ? coin_1.Coin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.initialDeposit = [];\n    }\n\n    message.proposer !== undefined && (obj.proposer = message.proposer);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n\n    var message = Object.assign({}, baseMsgSubmitProposal);\n\n    if (object.content !== undefined && object.content !== null) {\n      message.content = any_1.Any.fromPartial(object.content);\n    } else {\n      message.content = undefined;\n    }\n\n    message.initialDeposit = [];\n\n    if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n      var _iterator3 = _createForOfIteratorHelper(object.initialDeposit),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var e = _step3.value;\n          message.initialDeposit.push(coin_1.Coin.fromPartial(e));\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n\n    message.proposer = (_a = object.proposer) !== null && _a !== void 0 ? _a : \"\";\n    return message;\n  }\n};\nvar baseMsgSubmitProposalResponse = {\n  proposalId: long_1.default.UZERO\n};\nexports.MsgSubmitProposalResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (!message.proposalId.isZero()) {\n      writer.uint32(8).uint64(message.proposalId);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgSubmitProposalResponse);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.proposalId = reader.uint64();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseMsgSubmitProposalResponse);\n\n    if (object.proposalId !== undefined && object.proposalId !== null) {\n      message.proposalId = long_1.default.fromString(object.proposalId);\n    } else {\n      message.proposalId = long_1.default.UZERO;\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.proposalId !== undefined && (obj.proposalId = (message.proposalId || long_1.default.UZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseMsgSubmitProposalResponse);\n\n    if (object.proposalId !== undefined && object.proposalId !== null) {\n      message.proposalId = object.proposalId;\n    } else {\n      message.proposalId = long_1.default.UZERO;\n    }\n\n    return message;\n  }\n};\nvar baseMsgVote = {\n  proposalId: long_1.default.UZERO,\n  voter: \"\",\n  option: 0\n};\nexports.MsgVote = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (!message.proposalId.isZero()) {\n      writer.uint32(8).uint64(message.proposalId);\n    }\n\n    if (message.voter !== \"\") {\n      writer.uint32(18).string(message.voter);\n    }\n\n    if (message.option !== 0) {\n      writer.uint32(24).int32(message.option);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgVote);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.proposalId = reader.uint64();\n          break;\n\n        case 2:\n          message.voter = reader.string();\n          break;\n\n        case 3:\n          message.option = reader.int32();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseMsgVote);\n\n    if (object.proposalId !== undefined && object.proposalId !== null) {\n      message.proposalId = long_1.default.fromString(object.proposalId);\n    } else {\n      message.proposalId = long_1.default.UZERO;\n    }\n\n    if (object.voter !== undefined && object.voter !== null) {\n      message.voter = String(object.voter);\n    } else {\n      message.voter = \"\";\n    }\n\n    if (object.option !== undefined && object.option !== null) {\n      message.option = gov_1.voteOptionFromJSON(object.option);\n    } else {\n      message.option = 0;\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.proposalId !== undefined && (obj.proposalId = (message.proposalId || long_1.default.UZERO).toString());\n    message.voter !== undefined && (obj.voter = message.voter);\n    message.option !== undefined && (obj.option = gov_1.voteOptionToJSON(message.option));\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n\n    var message = Object.assign({}, baseMsgVote);\n\n    if (object.proposalId !== undefined && object.proposalId !== null) {\n      message.proposalId = object.proposalId;\n    } else {\n      message.proposalId = long_1.default.UZERO;\n    }\n\n    message.voter = (_a = object.voter) !== null && _a !== void 0 ? _a : \"\";\n    message.option = (_b = object.option) !== null && _b !== void 0 ? _b : 0;\n    return message;\n  }\n};\nvar baseMsgVoteResponse = {};\nexports.MsgVoteResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgVoteResponse);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(_) {\n    var message = Object.assign({}, baseMsgVoteResponse);\n    return message;\n  },\n  toJSON: function toJSON(_) {\n    var obj = {};\n    return obj;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = Object.assign({}, baseMsgVoteResponse);\n    return message;\n  }\n};\nvar baseMsgDeposit = {\n  proposalId: long_1.default.UZERO,\n  depositor: \"\"\n};\nexports.MsgDeposit = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (!message.proposalId.isZero()) {\n      writer.uint32(8).uint64(message.proposalId);\n    }\n\n    if (message.depositor !== \"\") {\n      writer.uint32(18).string(message.depositor);\n    }\n\n    var _iterator4 = _createForOfIteratorHelper(message.amount),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var v = _step4.value;\n        coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgDeposit);\n    message.amount = [];\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.proposalId = reader.uint64();\n          break;\n\n        case 2:\n          message.depositor = reader.string();\n          break;\n\n        case 3:\n          message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseMsgDeposit);\n    message.amount = [];\n\n    if (object.proposalId !== undefined && object.proposalId !== null) {\n      message.proposalId = long_1.default.fromString(object.proposalId);\n    } else {\n      message.proposalId = long_1.default.UZERO;\n    }\n\n    if (object.depositor !== undefined && object.depositor !== null) {\n      message.depositor = String(object.depositor);\n    } else {\n      message.depositor = \"\";\n    }\n\n    if (object.amount !== undefined && object.amount !== null) {\n      var _iterator5 = _createForOfIteratorHelper(object.amount),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var e = _step5.value;\n          message.amount.push(coin_1.Coin.fromJSON(e));\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.proposalId !== undefined && (obj.proposalId = (message.proposalId || long_1.default.UZERO).toString());\n    message.depositor !== undefined && (obj.depositor = message.depositor);\n\n    if (message.amount) {\n      obj.amount = message.amount.map(function (e) {\n        return e ? coin_1.Coin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.amount = [];\n    }\n\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n\n    var message = Object.assign({}, baseMsgDeposit);\n\n    if (object.proposalId !== undefined && object.proposalId !== null) {\n      message.proposalId = object.proposalId;\n    } else {\n      message.proposalId = long_1.default.UZERO;\n    }\n\n    message.depositor = (_a = object.depositor) !== null && _a !== void 0 ? _a : \"\";\n    message.amount = [];\n\n    if (object.amount !== undefined && object.amount !== null) {\n      var _iterator6 = _createForOfIteratorHelper(object.amount),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var e = _step6.value;\n          message.amount.push(coin_1.Coin.fromPartial(e));\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n\n    return message;\n  }\n};\nvar baseMsgDepositResponse = {};\nexports.MsgDepositResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgDepositResponse);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(_) {\n    var message = Object.assign({}, baseMsgDepositResponse);\n    return message;\n  },\n  toJSON: function toJSON(_) {\n    var obj = {};\n    return obj;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = Object.assign({}, baseMsgDepositResponse);\n    return message;\n  }\n};\n\nvar MsgClientImpl = /*#__PURE__*/function () {\n  function MsgClientImpl(rpc) {\n    _classCallCheck(this, MsgClientImpl);\n\n    this.rpc = rpc;\n    this.SubmitProposal = this.SubmitProposal.bind(this);\n    this.Vote = this.Vote.bind(this);\n    this.Deposit = this.Deposit.bind(this);\n  }\n\n  _createClass(MsgClientImpl, [{\n    key: \"SubmitProposal\",\n    value: function SubmitProposal(request) {\n      var data = exports.MsgSubmitProposal.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"SubmitProposal\", data);\n      return promise.then(function (data) {\n        return exports.MsgSubmitProposalResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"Vote\",\n    value: function Vote(request) {\n      var data = exports.MsgVote.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Vote\", data);\n      return promise.then(function (data) {\n        return exports.MsgVoteResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"Deposit\",\n    value: function Deposit(request) {\n      var data = exports.MsgDeposit.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Deposit\", data);\n      return promise.then(function (data) {\n        return exports.MsgDepositResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }]);\n\n  return MsgClientImpl;\n}();\n\nexports.MsgClientImpl = MsgClientImpl;\n\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":null,"metadata":{},"sourceType":"script"}