{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createMultisigThresholdPubkey = exports.compareArrays = void 0;\n\nvar encoding_1 = require(\"@cosmjs/encoding\");\n\nvar math_1 = require(\"@cosmjs/math\");\n\nvar addresses_1 = require(\"./addresses\");\n/**\n * Compare arrays lexicographically.\n *\n * Returns value < 0 if `a < b`.\n * Returns value > 0 if `a > b`.\n * Returns 0 if `a === b`.\n */\n\n\nfunction compareArrays(a, b) {\n  var aHex = encoding_1.toHex(a);\n  var bHex = encoding_1.toHex(b);\n  return aHex === bHex ? 0 : aHex < bHex ? -1 : 1;\n}\n\nexports.compareArrays = compareArrays;\n\nfunction createMultisigThresholdPubkey(pubkeys, threshold) {\n  var nosort = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var uintThreshold = new math_1.Uint53(threshold);\n\n  if (uintThreshold.toNumber() > pubkeys.length) {\n    throw new Error(\"Threshold k = \".concat(uintThreshold.toNumber(), \" exceeds number of keys n = \").concat(pubkeys.length));\n  }\n\n  var outPubkeys = nosort ? pubkeys : Array.from(pubkeys).sort(function (lhs, rhs) {\n    // https://github.com/cosmos/cosmos-sdk/blob/v0.42.2/client/keys/add.go#L172-L174\n    var addressLhs = addresses_1.pubkeyToRawAddress(lhs);\n    var addressRhs = addresses_1.pubkeyToRawAddress(rhs);\n    return compareArrays(addressLhs, addressRhs);\n  });\n  return {\n    type: \"tendermint/PubKeyMultisigThreshold\",\n    value: {\n      threshold: uintThreshold.toString(),\n      pubkeys: outPubkeys\n    }\n  };\n}\n\nexports.createMultisigThresholdPubkey = createMultisigThresholdPubkey;","map":null,"metadata":{},"sourceType":"script"}