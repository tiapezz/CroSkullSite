{"ast":null,"code":"import _defineProperty from \"F:\\\\Mattia\\\\Visual studio\\\\ProjectCroSkull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"F:\\\\Mattia\\\\Visual studio\\\\ProjectCroSkull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  loading: false,\n  //croskull\n  croSkullsContractOwner: null,\n  croSkulls: [],\n  croSkullsCount: 0,\n  croSkullsMaxSupply: 0,\n  advancedMetadata: [],\n  rarities: [],\n  //grave\n  userGraveBalance: 0,\n  graveTotalSupply: 0,\n  //soul\n  soulsBalance: 0,\n  //staking\n  approval: false,\n  alreadyClaimed: 0,\n  blockTimestamp: false,\n  cyclesLastWithdraw: 0,\n  croSkullsStaked: [],\n  lastBlock: false,\n  malusFee: 0,\n  daysLastWithdraw: 0,\n  owner: \"\",\n  rewards: 0,\n  rewardPlusMalus: 0,\n  soulsGenerated: 0,\n  startStakeTimestamp: 0,\n  stakingStarted: false,\n  totalSkullsStaked: 0,\n  totalWithdrawedGraves: 0,\n  totalWithdrawedSouls: 0,\n  lastWithdrawTimestamp: 0,\n  //pets\n  petEggsLimit: 0,\n  petEggsMintedByUser: 0,\n  petEggsSupply: 0,\n  petEggsMaxSupply: 0,\n  petEggsCost: 0,\n  approvedEggs: false,\n  //blue potion\n  blueCount: 0,\n  //red potion\n  redCount: 0,\n  //stories\n  storyAllowance: false,\n  skullsStories: [],\n  storiesLoading: false,\n  storyLastBlock: 0,\n  //ebisus\n  ebisusData: [],\n  //notifier\n  title: \"\",\n  message: \"\",\n  type: \"info\",\n  // success, danger, info, warning\n  tx: \"\",\n  error: false,\n  errorMsg: \"\" //audioplayer\n\n};\n\nvar dataReducer = function dataReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var payload = action.payload;\n\n  switch (action.type) {\n    case \"PLAY_SOUND\":\n      return _objectSpread({}, state, {\n        audioSrc: payload.audioSrc,\n        isPlaying: payload.isPlaying\n      });\n\n    case \"CHECK_DATA_REQUEST\":\n      return _objectSpread({}, state, {\n        loading: true,\n        error: false,\n        errorMsg: \"\"\n      });\n\n    case \"CHECK_DATA_SUCCESS\":\n      return _objectSpread({}, state, {\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\"\n      });\n\n    case \"SET_STORY_ALLOWANCE\":\n      {\n        return _objectSpread({}, state, {\n          loading: false,\n          storyAllowance: payload.storyAllowance\n        });\n      }\n\n    case \"CHECK_DATA_FAILED\":\n      return _objectSpread({}, initialState, {\n        loading: false,\n        error: true,\n        errorMsg: action.payload\n      });\n\n    case \"SKULLS_REQUEST\":\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case \"SKULLS_SUCCESS\":\n      return _objectSpread({}, state, {\n        loading: false,\n        croSkulls: payload.croSkulls,\n        croSkullsStaked: payload.croSkullsStaked,\n        advancedMetadata: payload.advancedMetadata,\n        ebisusData: payload.ebisusData\n      });\n\n    case \"FETCH_STAKING_SUCCESS\":\n      return _objectSpread({}, state, {\n        loading: false,\n        approval: true,\n        stakingStarted: true,\n        owner: payload.owner,\n        malusFee: payload.malusFee,\n        rewardPlusMalus: payload.rewardPlusMalus,\n        rewards: payload.rewards,\n        startStakeTimestamp: payload.startStakeTimestamp,\n        cyclesLastWithdraw: payload.cyclesLastWithdraw,\n        lastBlock: payload.lastBlock,\n        blockTimestamp: payload.blockTimestamp,\n        alreadyClaimed: payload.alreadyClaimed,\n        soulsGenerated: payload.soulsGenerated,\n        rarityIndex: payload.rarityIndex,\n        rarities: payload.rarities,\n        totalSkullsStaked: payload.totalSkullsStaked,\n        totalWithdrawedGraves: payload.totalWithdrawedGraves,\n        totalWithdrawedSouls: payload.totalWithdrawedSouls,\n        lastWithdrawTimestamp: payload.lastWithdrawTimestamp,\n        soulsBalance: payload.soulsBalance,\n        daysLastWithdraw: payload.daysLastWithdraw,\n        burnedGraves: payload.burnedGraves,\n        graveTotalSupply: payload.graveTotalSupply\n      });\n\n    case \"UPDATE_STATE\":\n      return _objectSpread({}, state, _defineProperty({}, payload.key, payload.value));\n\n    case \"STAKING_DISABLED\":\n      return _objectSpread({}, state, {\n        loading: false,\n        approval: false,\n        stakingStarted: false\n      });\n\n    case \"NOTIFICATION_REQUEST\":\n      return _objectSpread({}, state, {\n        message: payload.message,\n        title: payload.title,\n        tx: payload.tx,\n        type: payload.type\n      });\n\n    case \"FETCH_STORIES\":\n      return _objectSpread({}, state, {\n        storiesLoading: true\n      });\n\n    case \"SET_SKULLS_STORIES\":\n      return _objectSpread({}, state, {\n        skullsStories: payload.skullsStories,\n        storiesLoading: false\n      });\n\n    case \"SET_POTIONS\":\n      return _objectSpread({}, state, {\n        redCount: payload.redCount,\n        blueCount: payload.blueCount\n      });\n\n    case \"CLEAN_DATA\":\n      return {\n        loading: false,\n        croSkullsContractOwner: null,\n        croSkulls: [],\n        croSkullsStaked: [],\n        croSkullsCount: 0,\n        croSkullsMaxSupply: 0,\n        approval: false,\n        stakingStarted: false,\n        startStakeTimestamp: 0,\n        lastBlock: false,\n        blockTimestamp: false,\n        alreadyClaimed: 0,\n        owner: \"\",\n        malusFee: 0,\n        rewardPlusMalus: 0,\n        rewards: 0,\n        cyclesLastWithdraw: 0,\n        soulsGenerated: 0,\n        userGraveBalance: 0,\n        rarities: [],\n        title: \"\",\n        message: \"\",\n        type: \"info\",\n        // success, danger, info, warning\n        tx: \"\",\n        skullsStories: [],\n        error: false,\n        errorMsg: \"\",\n        petEggsLimit: 0,\n        petEggsMintedByUser: 0,\n        petEggsSupply: 0,\n        petEggsMaxSupply: 0,\n        petEggsCost: 0,\n        approvedEggs: false,\n        totalSkullsStaked: 0,\n        totalWithdrawedGraves: 0,\n        totalWithdrawedSouls: 0,\n        lastWithdrawTimestamp: 0,\n        soulsBalance: 0,\n        redCount: 0,\n        blueCount: 0,\n        storyAllowance: false,\n        daysLastWithdraw: 0,\n        graveTotalSupply: 0\n      };\n\n    case \"UPDATE_MERCHANT\":\n      return _objectSpread({}, state, {\n        petEggsLimit: payload.petEggsLimit,\n        petEggsMintedByUser: payload.petEggsMintedByUser,\n        petEggsSupply: payload.petEggsSupply,\n        petEggsMaxSupply: payload.petEggsMaxSupply,\n        petEggsCost: payload.petEggsCost,\n        approvedEggs: payload.approvedEggs,\n        userGraveBalance: payload.userGraveBalance\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;","map":{"version":3,"sources":["F:/Mattia/Visual studio/ProjectCroSkull/croskull-nft-marketplace/src/redux/data/dataReducer.js"],"names":["initialState","loading","croSkullsContractOwner","croSkulls","croSkullsCount","croSkullsMaxSupply","advancedMetadata","rarities","userGraveBalance","graveTotalSupply","soulsBalance","approval","alreadyClaimed","blockTimestamp","cyclesLastWithdraw","croSkullsStaked","lastBlock","malusFee","daysLastWithdraw","owner","rewards","rewardPlusMalus","soulsGenerated","startStakeTimestamp","stakingStarted","totalSkullsStaked","totalWithdrawedGraves","totalWithdrawedSouls","lastWithdrawTimestamp","petEggsLimit","petEggsMintedByUser","petEggsSupply","petEggsMaxSupply","petEggsCost","approvedEggs","blueCount","redCount","storyAllowance","skullsStories","storiesLoading","storyLastBlock","ebisusData","title","message","type","tx","error","errorMsg","dataReducer","state","action","payload","audioSrc","isPlaying","totalSupply","rarityIndex","burnedGraves","key","value"],"mappings":"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","sourcesContent":["const initialState = {\r\n    loading: false,\r\n    //croskull\r\n    croSkullsContractOwner: null,\r\n    croSkulls: [],\r\n    croSkullsCount: 0,\r\n    croSkullsMaxSupply: 0,\r\n    advancedMetadata: [],\r\n    rarities: [],\r\n    //grave\r\n    userGraveBalance: 0,\r\n    graveTotalSupply: 0,\r\n    //soul\r\n    soulsBalance: 0,\r\n    //staking\r\n    approval: false,\r\n    alreadyClaimed: 0,\r\n    blockTimestamp: false,\r\n    cyclesLastWithdraw: 0,\r\n    croSkullsStaked: [],\r\n    lastBlock: false,\r\n    malusFee: 0,\r\n    daysLastWithdraw: 0,\r\n    owner: \"\",\r\n    rewards: 0,\r\n    rewardPlusMalus: 0,\r\n    soulsGenerated: 0,\r\n    startStakeTimestamp: 0,\r\n    stakingStarted: false,\r\n    totalSkullsStaked: 0,\r\n    totalWithdrawedGraves: 0,\r\n    totalWithdrawedSouls: 0,\r\n    lastWithdrawTimestamp: 0,\r\n    //pets\r\n    petEggsLimit: 0,\r\n    petEggsMintedByUser: 0,\r\n    petEggsSupply: 0,\r\n    petEggsMaxSupply: 0,\r\n    petEggsCost: 0,\r\n    approvedEggs: false,\r\n    //blue potion\r\n    blueCount: 0,\r\n    //red potion\r\n    redCount: 0,\r\n    //stories\r\n    storyAllowance: false,\r\n    skullsStories: [],\r\n    storiesLoading: false,\r\n    storyLastBlock: 0,\r\n    //ebisus\r\n    ebisusData: [],\r\n    //notifier\r\n    title: \"\",\r\n    message: \"\",\r\n    type: \"info\", // success, danger, info, warning\r\n    tx: \"\",\r\n    error: false,\r\n    errorMsg: \"\",\r\n    //audioplayer\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n    let payload = action.payload\r\n    switch (action.type) {\r\n        case \"PLAY_SOUND\":\r\n            return {\r\n                ...state,\r\n                audioSrc: payload.audioSrc,\r\n                isPlaying: payload.isPlaying\r\n            }\r\n        case \"CHECK_DATA_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: false,\r\n                errorMsg: \"\",\r\n            };\r\n        case \"CHECK_DATA_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                totalSupply: action.payload.totalSupply,\r\n                // cost: action.payload.cost,\r\n                error: false,\r\n                errorMsg: \"\",\r\n            };\r\n        case \"SET_STORY_ALLOWANCE\": {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                storyAllowance: payload.storyAllowance\r\n            }\r\n        }\r\n        case \"CHECK_DATA_FAILED\":\r\n            return {\r\n                ...initialState,\r\n                loading: false,\r\n                error: true,\r\n                errorMsg: action.payload,\r\n            };\r\n        case \"SKULLS_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case \"SKULLS_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                croSkulls: payload.croSkulls,\r\n                croSkullsStaked: payload.croSkullsStaked,\r\n                advancedMetadata: payload.advancedMetadata,\r\n                ebisusData: payload.ebisusData\r\n            }\r\n        case \"FETCH_STAKING_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                approval: true,\r\n                stakingStarted: true,\r\n                owner: payload.owner,\r\n                malusFee: payload.malusFee,\r\n                rewardPlusMalus: payload.rewardPlusMalus,\r\n                rewards: payload.rewards,\r\n                startStakeTimestamp: payload.startStakeTimestamp,\r\n                cyclesLastWithdraw: payload.cyclesLastWithdraw,\r\n                lastBlock: payload.lastBlock,\r\n                blockTimestamp: payload.blockTimestamp,\r\n                alreadyClaimed: payload.alreadyClaimed,\r\n                soulsGenerated: payload.soulsGenerated,\r\n                rarityIndex: payload.rarityIndex,\r\n                rarities: payload.rarities,\r\n                totalSkullsStaked: payload.totalSkullsStaked,\r\n                totalWithdrawedGraves: payload.totalWithdrawedGraves,\r\n                totalWithdrawedSouls: payload.totalWithdrawedSouls,\r\n                lastWithdrawTimestamp: payload.lastWithdrawTimestamp,\r\n                soulsBalance: payload.soulsBalance,\r\n                daysLastWithdraw: payload.daysLastWithdraw,\r\n                burnedGraves: payload.burnedGraves,\r\n                graveTotalSupply: payload.graveTotalSupply\r\n            }\r\n        case \"UPDATE_STATE\":\r\n            return {\r\n                ...state,\r\n                [payload.key]: payload.value\r\n            }\r\n        case \"STAKING_DISABLED\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                approval: false,\r\n                stakingStarted: false\r\n            }\r\n        case \"NOTIFICATION_REQUEST\":\r\n            return {\r\n                ...state,\r\n                message: payload.message,\r\n                title: payload.title,\r\n                tx: payload.tx,\r\n                type: payload.type\r\n            }\r\n        case \"FETCH_STORIES\":\r\n            return {\r\n                ...state,\r\n                storiesLoading: true\r\n            }\r\n        case \"SET_SKULLS_STORIES\":\r\n            return {\r\n                ...state,\r\n                skullsStories: payload.skullsStories,\r\n                storiesLoading: false\r\n            }\r\n        case \"SET_POTIONS\":\r\n            return {\r\n                ...state,\r\n                redCount: payload.redCount,\r\n                blueCount: payload.blueCount\r\n            }\r\n        case \"CLEAN_DATA\":\r\n            return {\r\n                loading: false,\r\n                croSkullsContractOwner: null,\r\n                croSkulls: [],\r\n                croSkullsStaked: [],\r\n                croSkullsCount: 0,\r\n                croSkullsMaxSupply: 0,\r\n                approval: false,\r\n                stakingStarted: false,\r\n                startStakeTimestamp: 0,\r\n                lastBlock: false,\r\n                blockTimestamp: false,\r\n                alreadyClaimed: 0,\r\n                owner: \"\",\r\n                malusFee: 0,\r\n                rewardPlusMalus: 0,\r\n                rewards: 0,\r\n                cyclesLastWithdraw: 0,\r\n                soulsGenerated: 0,\r\n                userGraveBalance: 0,\r\n                rarities: [],\r\n                title: \"\",\r\n                message: \"\",\r\n                type: \"info\", // success, danger, info, warning\r\n                tx: \"\",\r\n                skullsStories: [],\r\n                error: false,\r\n                errorMsg: \"\",\r\n                petEggsLimit: 0,\r\n                petEggsMintedByUser: 0,\r\n                petEggsSupply: 0,\r\n                petEggsMaxSupply: 0,\r\n                petEggsCost: 0,\r\n                approvedEggs: false,\r\n                totalSkullsStaked: 0,\r\n                totalWithdrawedGraves: 0,\r\n                totalWithdrawedSouls: 0,\r\n                lastWithdrawTimestamp: 0,\r\n                soulsBalance: 0,\r\n                redCount: 0,\r\n                blueCount: 0,\r\n                storyAllowance: false,\r\n                daysLastWithdraw: 0,\r\n                graveTotalSupply: 0\r\n            }\r\n        case \"UPDATE_MERCHANT\":\r\n            return {\r\n                ...state,\r\n                petEggsLimit: payload.petEggsLimit,\r\n                petEggsMintedByUser: payload.petEggsMintedByUser,\r\n                petEggsSupply: payload.petEggsSupply,\r\n                petEggsMaxSupply: payload.petEggsMaxSupply, \r\n                petEggsCost: payload.petEggsCost,\r\n                approvedEggs: payload.approvedEggs,\r\n                userGraveBalance: payload.userGraveBalance,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default dataReducer;"]},"metadata":{},"sourceType":"module"}