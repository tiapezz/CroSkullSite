{"ast":null,"code":"import _objectSpread from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\src\\\\components\\\\FilterBar\\\\FilterBar.jsx\";\n\nimport React from \"react\";\nimport Select from \"react-select\";\n\nvar FilterBar = function FilterBar(_ref) {\n  var traits = _ref.traits,\n      traitsTypes = _ref.traitsTypes,\n      handleFilterBar = _ref.handleFilterBar,\n      handleStatusNFTFilter = _ref.handleStatusNFTFilter;\n  var nftStatusOptions = [{\n    value: \"all\",\n    label: \"All\"\n  }, {\n    value: \"inSale\",\n    label: \"In Sale\"\n  }, {\n    value: \"notInSale\",\n    label: \"Not in Sale\"\n  }, {\n    value: \"owned\",\n    label: \"Owned\"\n  }];\n  var customStyle = {\n    option: function option(provided) {\n      return _objectSpread({}, provided, {\n        color: 'black'\n      });\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filterBar align-items-right d-flex justify-content-right spaced\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, traitsTypes.length > 0 ? traitsTypes.map(function (type, i) {\n    var items = [];\n    traits[traitsTypes[i]].forEach(function (value, key) {\n      var valueKey = type + '_' + value.replace(' ', '-');\n      if (!key) items.push({\n        value: type + '_none',\n        label: 'None'\n      });\n      items.push({\n        value: valueKey,\n        label: value\n      });\n    });\n    return items && /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }\n    }, type), /*#__PURE__*/React.createElement(Select, {\n      options: items,\n      onChange: handleFilterBar,\n      key: i,\n      placeholder: \"None\",\n      styles: customStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }));\n  }) : 'Loading Skulls traits...', /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"NFT Status\"), /*#__PURE__*/React.createElement(Select, {\n    options: nftStatusOptions,\n    onChange: handleStatusNFTFilter,\n    placeholder: \"all\",\n    styles: customStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport default FilterBar;\n/**\r\n *        <FilterSelect\r\n                            traits={traits}\r\n                            type={type}\r\n                            key={i}\r\n                        />\r\n */","map":{"version":3,"sources":["F:/Mattia/Visual studio/AppCroskull/croskull-nft-marketplace/src/components/FilterBar/FilterBar.jsx"],"names":["React","Select","FilterBar","traits","traitsTypes","handleFilterBar","handleStatusNFTFilter","nftStatusOptions","value","label","customStyle","option","provided","color","length","map","type","i","items","forEach","key","valueKey","replace","push"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAKP;AAAA,MAJPC,MAIO,QAJPA,MAIO;AAAA,MAHPC,WAGO,QAHPA,WAGO;AAAA,MAFPC,eAEO,QAFPA,eAEO;AAAA,MADPC,qBACO,QADPA,qBACO;AACP,MAAMC,gBAAgB,GAAG,CAAC;AACtBC,IAAAA,KAAK,EAAE,KADe;AACRC,IAAAA,KAAK,EAAE;AADC,GAAD,EAEvB;AACED,IAAAA,KAAK,EAAE,QADT;AACmBC,IAAAA,KAAK,EAAE;AAD1B,GAFuB,EAIvB;AACED,IAAAA,KAAK,EAAE,WADT;AACsBC,IAAAA,KAAK,EAAE;AAD7B,GAJuB,EAMvB;AACED,IAAAA,KAAK,EAAE,OADT;AACkBC,IAAAA,KAAK,EAAE;AADzB,GANuB,CAAzB;AAUA,MAAIC,WAAW,GAAG;AACdC,IAAAA,MAAM,EAAE,gBAACC,QAAD;AAAA,+BACHA,QADG;AAENC,QAAAA,KAAK,EAAE;AAFD;AAAA;AADM,GAAlB;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,iEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACOT,WAAW,CAACU,MAAZ,GAAqB,CAArB,GACCV,WAAW,CAACW,GAAZ,CAAiB,UAACC,IAAD,EAAOC,CAAP,EAAc;AAC3B,QAAIC,KAAK,GAAG,EAAZ;AACAf,IAAAA,MAAM,CAACC,WAAW,CAACa,CAAD,CAAZ,CAAN,CAAuBE,OAAvB,CAAgC,UAACX,KAAD,EAAQY,GAAR,EAAgB;AAC5C,UAAIC,QAAQ,GAAGL,IAAI,GAAG,GAAP,GAAaR,KAAK,CAACc,OAAN,CAAc,GAAd,EAAmB,GAAnB,CAA5B;AACA,UAAI,CAAEF,GAAN,EACEF,KAAK,CAACK,IAAN,CAAY;AAAEf,QAAAA,KAAK,EAAEQ,IAAI,GAAG,OAAhB;AAAyBP,QAAAA,KAAK,EAAE;AAAhC,OAAZ;AAEFS,MAAAA,KAAK,CAACK,IAAN,CAAY;AAAEf,QAAAA,KAAK,EAAEa,QAAT;AAAmBZ,QAAAA,KAAK,EAAED;AAA1B,OAAZ;AACH,KAND;AAOA,WACIU,KAAK,iBACL;AAAK,MAAA,GAAG,EAAED,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOD,IAAP,CADJ,eAEI,oBAAC,MAAD;AACI,MAAA,OAAO,EAAEE,KADb;AAEI,MAAA,QAAQ,EAAEb,eAFd;AAGI,MAAA,GAAG,EAAEY,CAHT;AAII,MAAA,WAAW,EAAC,MAJhB;AAKI,MAAA,MAAM,EAAEP,WALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ;AAcH,GAvBD,CADD,GAyBG,0BA1BV,eA2BQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAEH,gBADb;AAEI,IAAA,QAAQ,EAAED,qBAFd;AAGI,IAAA,WAAW,EAAC,KAHhB;AAII,IAAA,MAAM,EAAEI,WAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CA3BR,CADJ;AAuCH,CA9DD;;AAgEA,eAAeR,SAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\r\nimport Select from \"react-select\"\r\n\r\nconst FilterBar = ( { \r\n    traits, \r\n    traitsTypes,\r\n    handleFilterBar,\r\n    handleStatusNFTFilter\r\n    } ) => {\r\n    const nftStatusOptions = [{\r\n        value: \"all\", label: \"All\"\r\n    },{\r\n        value: \"inSale\", label: \"In Sale\"\r\n    },{\r\n        value: \"notInSale\", label: \"Not in Sale\"\r\n    },{\r\n        value: \"owned\", label: \"Owned\"\r\n    }]\r\n\r\n    let customStyle = {\r\n        option: (provided) => ({\r\n          ...provided,\r\n          color: 'black',\r\n        })\r\n      }\r\n      \r\n    return (\r\n        <div className=\"filterBar align-items-right d-flex justify-content-right spaced\">\r\n            {  traitsTypes.length > 0 ?\r\n                traitsTypes.map( (type, i ) => {\r\n                    let items = []\r\n                    traits[traitsTypes[i]].forEach( (value, key) => {\r\n                        let valueKey = type + '_' + value.replace(' ', '-');\r\n                        if( ! key )\r\n                          items.push( { value: type + '_none', label: 'None'} );\r\n\r\n                        items.push( { value: valueKey, label: value } );\r\n                    })\r\n                    return (\r\n                        items &&\r\n                        <div key={i}>\r\n                            <span>{type}</span>\r\n                            <Select \r\n                                options={items}\r\n                                onChange={handleFilterBar}\r\n                                key={i}\r\n                                placeholder=\"None\"\r\n                                styles={customStyle}\r\n                            />\r\n                        </div>\r\n                    )\r\n\r\n                })\r\n                : 'Loading Skulls traits...' }\r\n                <div>\r\n                    <span>NFT Status</span>\r\n                    <Select\r\n                        options={nftStatusOptions}\r\n                        onChange={handleStatusNFTFilter}\r\n                        placeholder=\"all\"\r\n                        styles={customStyle}\r\n                    ></Select>\r\n                </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FilterBar;\r\n/**\r\n *        <FilterSelect\r\n                            traits={traits}\r\n                            type={type}\r\n                            key={i}\r\n                        />\r\n */\r\n"]},"metadata":{},"sourceType":"module"}