{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Mattia\\\\Visual studio\\\\AppCroskull\\\\croskull-nft-marketplace\\\\src\\\\components\\\\Raffle\\\\Raffle.jsx\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from 'ethers';\nimport { useDispatch } from \"react-redux\";\nimport store from \"../../redux/store\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { loadRaffleData } from '../../redux/raffle/raffleActions';\nimport { faHourglassHalf } from '@fortawesome/free-solid-svg-icons';\nimport { sendNotification } from \"../../redux/data/dataActions\";\nimport IpfsHttpClient from \"ipfs-http-client\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport Coins from \"./coins.png\";\nimport Grave from \"../Navbar/grave.png\";\nimport Rune from \"../Navbar/grave-burn.png\";\nimport Soul from \"../Navbar/soul.png\";\nimport \"react-quill/dist/quill.snow.css\";\nimport './Raffle.css';\n\nvar Raffle = function Raffle(_ref) {\n  var accountAddress = _ref.accountAddress;\n  var dispatch = useDispatch();\n\n  var _store$getState = store.getState(),\n      blockchain = _store$getState.blockchain,\n      raffle = _store$getState.raffle;\n\n  var formatEther = blockchain.formatEther;\n  var isManager = raffle.isManager,\n      raffles = raffle.raffles;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasData = _useState2[0],\n      toggleData = _useState2[1];\n\n  useEffect(function () {\n    if (raffle.init) return;\n    dispatch(loadRaffleData());\n  }, [blockchain.croRaffle]);\n  var raf1 = {\n    type: 500,\n    image: 0,\n    title: \"Raffle Title\",\n    winnersCount: 5,\n    participants: 45,\n    maxParticipants: 0,\n    cost: 0,\n    collectionName: '',\n    collectionAddress: 0,\n    startTimestamp: new Date(2022, 1, 12),\n    endTimestamp: new Date(2022, 1, 21),\n    winners: [],\n    description: 'Join now this amazing raffle in partnership with MM.Finance.'\n  };\n  var raf2 = {\n    type: 0,\n    image: 0,\n    title: \"Raffle Title 2\",\n    winnersCount: 5,\n    participants: 45,\n    maxParticipants: 50,\n    cost: 0,\n    collectionName: '',\n    collectionAddress: 0,\n    startTimestamp: new Date(2022, 1, 12),\n    endTimestamp: new Date(2022, 3, 27),\n    winners: [],\n    description: 'Join now this amazing raffle in partnership with MM.Finance.'\n  };\n\n  var _useState3 = useState({\n    title: '',\n    winners: [],\n    prize: 1,\n    coin: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalState = _useState4[0],\n      setModalState = _useState4[1];\n\n  var _useState5 = useState({\n    display: false,\n    image: 0,\n    type: 0,\n    title: \"Thrid Raffle\",\n    winnersCount: 0,\n    maxParticipants: 0,\n    cost: 0,\n    collectionName: '',\n    collectionAddress: 0,\n    startTimestamp: 0,\n    endTimestamp: 0,\n    description: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      raffleCreator = _useState6[0],\n      setRaffleCreator = _useState6[1];\n\n  var handleFieldChange = function handleFieldChange(event) {\n    var value = event.target ? event.target.value.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\") : event;\n    var name = event.target ? event.target.id : \"description\";\n    var type = event.target ? event.target.type : \"description\";\n\n    if (type === 'date') {\n      value = parseInt(new Date(value).getTime() / 1000);\n    }\n\n    setRaffleCreator(_objectSpread({}, raffleCreator, _defineProperty({}, name, value)));\n  };\n\n  var openModal = function openModal(raf) {\n    setModalState({\n      title: raf.title,\n      winners: raf.winners,\n      prize: raf.win / raf.nWinners,\n      coin: raf.coin\n    });\n    var modal = document.getElementById(\"modal-winners\");\n    modal.style.display = \"block\";\n  };\n\n  var closeModal = function closeModal() {\n    var modal = document.getElementById(\"modal-winners\");\n    modal.style.display = \"none\";\n  };\n\n  var rafs = [raf1, raf2];\n  var DAY_IN_SEC = 60 * 60 * 24 * 1000;\n  var HUNDRED_DAYS_IN_SEC = 100 * DAY_IN_SEC; //100 * DAY_IN_SEC;\n\n  var formatDate = function formatDate(timestamp) {\n    var tsHours = timestamp / 60 / 60;\n    var days = parseInt(timestamp / DAY_IN_SEC);\n    var hoursDiff = tsHours - days * 24;\n    var hours = parseInt(hoursDiff);\n    var tsMinutes = hoursDiff * 60;\n    var minutes = parseInt(tsMinutes - hours * 60);\n    return {\n      days: days,\n      hours: hours,\n      minutes: minutes\n    };\n  };\n\n  var crazyDesc = 'A Crazy Raffle, every time someone join the time is reduced by 5%';\n  var normalDesc = 'A Normal raffle join to get a chance to win!';\n\n  var retrieveImage = function retrieveImage(e) {\n    var data = e.target.files[0];\n    var reader = new window.FileReader();\n    reader.readAsArrayBuffer(data);\n\n    reader.onloadend = function () {\n      setRaffleCreator(_objectSpread({}, raffleCreator, {\n        image: Buffer(reader.result)\n      }));\n    };\n\n    e.preventDefault();\n  };\n\n  var participateRaffle = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\");\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function participateRaffle() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var addRaffle = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var croRaffle, rafflefied, descriptionBuffer, client, ipfsImage, ipfsResponse, ipfsPath, addRaffleTx;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              croRaffle = blockchain.croRaffle;\n              setRaffleCreator(_objectSpread({}, raffleCreator, {\n                startTimestamp: parseInt(new Date().getTime() / 1000)\n              }));\n              rafflefied = JSON.stringify(raffleCreator);\n              descriptionBuffer = Buffer.from(rafflefied);\n              _context3.prev = 4;\n              client = IpfsHttpClient(new URL('https://ipfs.infura.io:5001/api/v0'));\n\n              if (!raffleCreator.image) {\n                _context3.next = 11;\n                break;\n              }\n\n              _context3.next = 9;\n              return client.add(raffleCreator.image);\n\n            case 9:\n              ipfsImage = _context3.sent;\n              setRaffleCreator(_objectSpread({}, raffleCreator, {\n                image: \"ipfs://\".concat(ipfsImage.path)\n              }));\n\n            case 11:\n              _context3.next = 13;\n              return client.add(descriptionBuffer);\n\n            case 13:\n              ipfsResponse = _context3.sent;\n\n              if (!(ipfsResponse.path !== \"\")) {\n                _context3.next = 19;\n                break;\n              }\n\n              ipfsPath = \"ipfs://\".concat(ipfsResponse.path);\n              addRaffleTx = croRaffle.addRaffle(raffleCreator.winnersCount, raffleCreator.collectionAddress, ethers.utils.parseEther(raffleCreator.cost), raffleCreator.endTimestamp, ipfsPath, raffleCreator.type * 100, raffleCreator.maxParticipants); //return;\n\n              _context3.next = 19;\n              return addRaffleTx.then( /*#__PURE__*/function () {\n                var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(tx) {\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          console.log(tx);\n                          dispatch(sendNotification({\n                            title: \"Transaction Sent\",\n                            message: 'Waiting for confirmation...',\n                            tx: tx,\n                            type: \"info\"\n                          }));\n                          _context2.next = 4;\n                          return tx.wait(2);\n\n                        case 4:\n                          dispatch(sendNotification({\n                            title: \"Raffle Created!\",\n                            message: \"Raffle Created Succesful\",\n                            tx: tx,\n                            type: \"success\"\n                          }));\n                          setRaffleCreator(_objectSpread({}, raffleCreator, {\n                            display: false\n                          }));\n                          dispatch(loadRaffleData());\n\n                        case 7:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n\n                return function (_x) {\n                  return _ref4.apply(this, arguments);\n                };\n              }());\n\n            case 19:\n              _context3.next = 24;\n              break;\n\n            case 21:\n              _context3.prev = 21;\n              _context3.t0 = _context3[\"catch\"](4);\n              console.log(_context3.t0.message);\n\n            case 24:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[4, 21]]);\n    }));\n\n    return function addRaffle() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal\",\n    id: \"modal-winners\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-w-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"close-btn\",\n    onClick: function onClick() {\n      closeModal();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, modalState.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  }, \"Prize\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, \"Address\")))))), raffleCreator.display && isManager ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"story-modal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"image\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  }, \"Raffle Image\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    onChange: retrieveImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"endTimestamp\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }\n  }, \"Finish date\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"endTimestamp\",\n    type: \"date\",\n    name: \"endTimestamp\",\n    onChange: handleFieldChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"type\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  }, \"Fast Raffle ( 0 = deactivated )\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"type\",\n    type: \"number\",\n    name: \"type\",\n    onChange: handleFieldChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"maxParticipants\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }\n  }, \"Max Participants ( 0 = deactivated )\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"maxParticipants\",\n    type: \"number\",\n    name: \"maxParticipants\",\n    onChange: handleFieldChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"maxParticipants\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 17\n    }\n  }, \"Ticket Cost\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"cost\",\n    type: \"number\",\n    name: \"cost\",\n    onChange: handleFieldChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"winnersCount\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 17\n    }\n  }, \"Winners ( max 10 )\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"winnersCount\",\n    type: \"number\",\n    name: \"winnersCount\",\n    onChange: handleFieldChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metadata\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"close-icon\",\n    onClick: function onClick() {\n      setRaffleCreator(_objectSpread({}, raffleCreator, {\n        display: false\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 19\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      fontSize: '18px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 19\n    }\n  }, \"Create a new Raffle\"), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"collectionName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 19\n    }\n  }, \"Collection Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"collectionName\",\n    type: \"text\",\n    name: \"collectionName\",\n    onChange: handleFieldChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"collectionAddress\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 19\n    }\n  }, \"Collection Address\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"collectionAddress\",\n    type: \"text\",\n    name: \"collectionAddress\",\n    onChange: handleFieldChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 19\n    }\n  }, \"Raffle Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"title\",\n    type: \"text\",\n    name: \"title\",\n    onChange: handleFieldChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"description\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 19\n    }\n  }, \"Raffle Description\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      overflowY: 'scroll'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ReactQuill, {\n    className: \"description-editor\",\n    modules: modules,\n    formats: formats,\n    value: raffleCreator.description,\n    onChange: handleFieldChange,\n    placeholder: \"Write something awesome...\",\n    name: \"description\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pay-action\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"skull-button save-grave\",\n    onClick: function onClick() {\n      return addRaffle();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 21\n    }\n  }, \"Add Raffle\"))))) : '', /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-container sk-row\",\n    style: {\n      overflow: 'hidden'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-box sk-column sk-raffle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }\n  }, \"Raffle Time!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 13\n    }\n  }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut eget urna ex. Etiam eleifend interdum lobortis. Morbi laoreet purus sed felis semper posuere.\"), isManager ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"skull-button\",\n    onClick: function onClick() {\n      return setRaffleCreator(_objectSpread({}, raffleCreator, {\n        display: true\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 15\n    }\n  }, \"Add Raffle\") : ''), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sk-raffle sk-flex sk-column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 11\n    }\n  }, raffles && raffles.length > 0 ? raffles.map(function (raf) {\n    var type = raf.type,\n        title = raf.title,\n        winnersCount = raf.winnersCount,\n        maxParticipants = raf.maxParticipants,\n        cost = raf.cost,\n        collectionName = raf.collectionName,\n        collectionAddress = raf.collectionAddress,\n        startTimestamp = raf.startTimestamp,\n        endTimestamp = raf.endTimestamp,\n        description = raf.description,\n        participants = raf.participants,\n        winners = raf.winners;\n    /*let raffleDuration = raf.finish - ( new Date() / 1000 );\r\n    let raffleStart = raf.start - ( new Date() / 1000 );\r\n    let raffleDurationDate = formatDate(raffleDuration);*/\n\n    var currentTimestamp = parseInt(new Date().getTime() / 1000);\n    var raffleDuration = currentTimestamp < endTimestamp ? endTimestamp - currentTimestamp : 0;\n    var raffleDurationFormatted = formatDate(raffleDuration);\n    console.log(currentTimestamp, raffleDuration, raffleDurationFormatted);\n    var raffleStart = 0;\n    var raffleDurationDate = 0;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sk-raffle-item sk-flex sk-row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wd-22\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: Coins,\n      className: \"img-raffle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"raffle-box-1 wd-44 sk-flex sk-column\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sk-raffle-details\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 25\n      }\n    }, \"\".concat(type > 0 ? \"Fast Raffle \".concat(type, \"%\") : 'Normal Raffle', \" | \").concat(winnersCount, \" Winners | \").concat(maxParticipants ? \"\".concat(participants, \"/\").concat(maxParticipants) : participants, \" Participants\")), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 25\n      }\n    }, title), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 25\n      }\n    }, description)), winners && winners.length ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"raffle-box-2 wd-33\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 29\n      }\n    }, \"Started: \", startTimestamp), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 29\n      }\n    }, \"Ended: \", endTimestamp), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"skull-button winners-button\",\n      onClick: function onClick() {\n        openModal(raf);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 29\n      }\n    }, \"View Winners\")) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"raffle-box-2 wd-33\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 29\n      }\n    }, \"Cost: \", cost, /*#__PURE__*/React.createElement(\"img\", {\n      src: Grave,\n      className: \"skull-icon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 46\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 29\n      }\n    }, \"Ending in: \", raffleDurationFormatted.days, \"d \", raffleDurationFormatted.hours, \"h \", raffleDurationFormatted.minutes, \"m \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faHourglassHalf,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 143\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"skull-button winners-button\",\n      onClick: function onClick() {\n        participateRaffle(raf.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 29\n      }\n    }, \"Participate\")));\n  }) : ''))));\n};\n\nvar modules = {\n  toolbar: [[{\n    'header': [1, 2, false]\n  }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n    'list': 'ordered'\n  }, {\n    'list': 'bullet'\n  }, {\n    'indent': '-1'\n  }, {\n    'indent': '+1'\n  }], ['clean']]\n};\nvar formats = ['header', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent'];\nexport default Raffle;","map":{"version":3,"sources":["F:/Mattia/Visual studio/AppCroskull/croskull-nft-marketplace/src/components/Raffle/Raffle.jsx"],"names":["React","useEffect","useState","ethers","useDispatch","store","FontAwesomeIcon","loadRaffleData","faHourglassHalf","sendNotification","IpfsHttpClient","ReactQuill","Coins","Grave","Rune","Soul","Raffle","accountAddress","dispatch","getState","blockchain","raffle","formatEther","isManager","raffles","hasData","toggleData","init","croRaffle","raf1","type","image","title","winnersCount","participants","maxParticipants","cost","collectionName","collectionAddress","startTimestamp","Date","endTimestamp","winners","description","raf2","prize","coin","modalState","setModalState","display","raffleCreator","setRaffleCreator","handleFieldChange","event","value","target","replace","name","id","parseInt","getTime","openModal","raf","win","nWinners","modal","document","getElementById","style","closeModal","rafs","DAY_IN_SEC","HUNDRED_DAYS_IN_SEC","formatDate","timestamp","tsHours","days","hoursDiff","hours","tsMinutes","minutes","crazyDesc","normalDesc","retrieveImage","e","data","files","reader","window","FileReader","readAsArrayBuffer","onloadend","Buffer","result","preventDefault","participateRaffle","addRaffle","rafflefied","JSON","stringify","descriptionBuffer","from","client","URL","add","ipfsImage","path","ipfsResponse","ipfsPath","addRaffleTx","utils","parseEther","then","tx","console","log","message","wait","fontSize","overflowY","modules","formats","overflow","length","map","currentTimestamp","raffleDuration","raffleDurationFormatted","raffleStart","raffleDurationDate","toolbar"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { ethers } from 'ethers';\r\nimport { useDispatch } from \"react-redux\";\r\nimport store from \"../../redux/store\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { loadRaffleData } from '../../redux/raffle/raffleActions';\r\nimport { faHourglassHalf } from '@fortawesome/free-solid-svg-icons';\r\nimport { sendNotification } from \"../../redux/data/dataActions\";\r\nimport IpfsHttpClient from \"ipfs-http-client\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport Coins from \"./coins.png\";\r\nimport Grave from \"../Navbar/grave.png\";\r\nimport Rune from \"../Navbar/grave-burn.png\";\r\nimport Soul from \"../Navbar/soul.png\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport './Raffle.css';\r\n\r\nconst Raffle = ({ accountAddress }) => {\r\n  let dispatch = useDispatch()\r\n  let { blockchain, raffle } = store.getState()\r\n  let { formatEther } = blockchain\r\n  let { isManager, raffles } = raffle;\r\n  const [hasData, toggleData] = useState(false)\r\n\r\n  useEffect( () => {\r\n      if( raffle.init ) return \r\n      dispatch(loadRaffleData())\r\n  }, [blockchain.croRaffle])\r\n\r\n  const raf1 = {\r\n    type: 500,\r\n    image: 0,\r\n    title: \"Raffle Title\",\r\n    winnersCount: 5,\r\n    participants: 45,\r\n    maxParticipants: 0,\r\n    cost: 0,\r\n    collectionName: '',\r\n    collectionAddress: 0,\r\n    startTimestamp: new Date(2022, 1, 12),\r\n    endTimestamp: new Date(2022, 1, 21),\r\n    winners: [],\r\n    description: 'Join now this amazing raffle in partnership with MM.Finance.',\r\n  }\r\n\r\n  const raf2 = {\r\n    type: 0,\r\n    image: 0,\r\n    title: \"Raffle Title 2\",\r\n    winnersCount: 5,\r\n    participants: 45,\r\n    maxParticipants: 50,\r\n    cost: 0,\r\n    collectionName: '',\r\n    collectionAddress: 0,\r\n    startTimestamp: new Date(2022, 1, 12),\r\n    endTimestamp: new Date(2022, 3, 27),\r\n    winners: [],\r\n    description: 'Join now this amazing raffle in partnership with MM.Finance.',\r\n  }\r\n\r\n  const [modalState, setModalState] = useState({\r\n    title: '',\r\n    winners: [],\r\n    prize: 1,\r\n    coin: ''\r\n  });\r\n\r\n  const [raffleCreator, setRaffleCreator] = useState( {\r\n    display: false,\r\n    image: 0,\r\n    type: 0,\r\n    title: \"Thrid Raffle\",\r\n    winnersCount: 0,\r\n    maxParticipants: 0,\r\n    cost: 0,\r\n    collectionName: '',\r\n    collectionAddress: 0,\r\n    startTimestamp: 0,\r\n    endTimestamp: 0,\r\n    description: '',\r\n  } )\r\n\r\n  const handleFieldChange = ( event ) => {\r\n    let value = event.target ? event.target.value.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\") : event\r\n    let name = event.target ? event.target.id : \"description\"\r\n    let type = event.target ? event.target.type : \"description\"\r\n    if( type === 'date' ){\r\n      value = parseInt( new Date( value ).getTime() / 1000 )\r\n    }\r\n    setRaffleCreator( {\r\n      ...raffleCreator,\r\n      [name]: value\r\n    } )\r\n  }\r\n\r\n\r\n  const openModal = (raf) => {\r\n    setModalState({\r\n      title: raf.title,\r\n      winners: raf.winners,\r\n      prize: raf.win / raf.nWinners,\r\n      coin: raf.coin\r\n    })\r\n    let modal = document.getElementById(\"modal-winners\");\r\n    modal.style.display = \"block\";\r\n\r\n  }\r\n  const closeModal = () => {\r\n    let modal = document.getElementById(\"modal-winners\");\r\n    modal.style.display = \"none\";\r\n  }\r\n  const rafs = [raf1, raf2];\r\n\r\n  const DAY_IN_SEC = 60 * 60 * 24 * 1000;\r\n  const HUNDRED_DAYS_IN_SEC = 100 * DAY_IN_SEC//100 * DAY_IN_SEC;\r\n  const formatDate = (timestamp) => {\r\n    let tsHours = timestamp / 60 / 60\r\n    let days = parseInt(timestamp / DAY_IN_SEC)\r\n    let hoursDiff = tsHours - (days * 24)\r\n    let hours = parseInt(hoursDiff)\r\n    let tsMinutes = hoursDiff * 60\r\n    let minutes = parseInt(tsMinutes - (hours * 60))\r\n    return {\r\n      days,\r\n      hours,\r\n      minutes\r\n    }\r\n  }\r\n\r\n  let crazyDesc = 'A Crazy Raffle, every time someone join the time is reduced by 5%';\r\n  let normalDesc = 'A Normal raffle join to get a chance to win!';\r\n\r\n  const retrieveImage = (e) => {\r\n    const data = e.target.files[0];\r\n    const reader = new window.FileReader();\r\n    reader.readAsArrayBuffer(data);\r\n    reader.onloadend = () => {\r\n      setRaffleCreator({\r\n        ...raffleCreator,\r\n        image: Buffer(reader.result)\r\n      });\r\n    }\r\n    e.preventDefault();  \r\n  }\r\n\r\n\r\n  const participateRaffle = async () => {\r\n    return\r\n  }\r\n\r\n  const addRaffle = async ( ) => {\r\n    let { croRaffle } = blockchain\r\n    setRaffleCreator({\r\n      ...raffleCreator,\r\n      startTimestamp: parseInt( new Date( ).getTime() / 1000 ),\r\n    })\r\n    let rafflefied = JSON.stringify(raffleCreator)\r\n    let descriptionBuffer = Buffer.from(rafflefied)\r\n    try {\r\n      const client = IpfsHttpClient(new URL('https://ipfs.infura.io:5001/api/v0'));\r\n      if( raffleCreator.image ){\r\n        const ipfsImage = await client.add(raffleCreator.image);\r\n        setRaffleCreator({\r\n          ...raffleCreator,\r\n          image: `ipfs://${ipfsImage.path}`\r\n        })\r\n      }\r\n      const ipfsResponse = await client.add(descriptionBuffer);\r\n      if( ipfsResponse.path !== \"\" ){\r\n          let ipfsPath = `ipfs://${ipfsResponse.path}`\r\n          let addRaffleTx = croRaffle.addRaffle(\r\n            raffleCreator.winnersCount,\r\n            raffleCreator.collectionAddress,\r\n            ethers.utils.parseEther(raffleCreator.cost),\r\n            raffleCreator.endTimestamp,\r\n            ipfsPath,\r\n            raffleCreator.type * 100,\r\n            raffleCreator.maxParticipants\r\n          )\r\n            //return;\r\n            await addRaffleTx.then(\r\n              async (tx) => {\r\n                console.log( tx )\r\n                dispatch(sendNotification({\r\n                  title: `Transaction Sent`,\r\n                  message: 'Waiting for confirmation...',\r\n                  tx,\r\n                  type: \"info\"\r\n                }))\r\n                await tx.wait(2)\r\n                dispatch(sendNotification({\r\n                  title: `Raffle Created!`,\r\n                  message: `Raffle Created Succesful`,\r\n                  tx,\r\n                  type: \"success\"\r\n                }))\r\n                setRaffleCreator({\r\n                  ...raffleCreator,\r\n                  display: false\r\n                })\r\n                dispatch(loadRaffleData())\r\n              }\r\n          )\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal\" id=\"modal-winners\">\r\n        <div className=\"modal-w-content\">\r\n          <div className=\"sk-box\">\r\n            <span class=\"close-btn\" onClick={() => { closeModal() }}>&times;</span>\r\n            <h1>{modalState.title}</h1>\r\n            <div className=\"modal-header\"> \r\n              <h3>Prize</h3>\r\n              <span>\r\n                <h3>Address</h3>\r\n              </span>\r\n            </div>\r\n            {\r\n              /*raffles && raffles.length > 0 ?\r\n                raffles.winners.map((winner,i) => {\r\n                  return (\r\n                    <div className=\"modal-header\">\r\n                      <h3>{i+1}</h3>\r\n                      <span className=\"address\">{winner}</span>\r\n                    </div>\r\n                  )\r\n                })\r\n              :\r\n              ('')*/\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n        {\r\n          raffleCreator.display && isManager ? (\r\n            <div className=\"story-modal\">\r\n              <div \r\n                className=\"sk-box container\" \r\n              >\r\n              <div className=\"image\">\r\n                <label for=\"image\">Raffle Image</label>\r\n                <input type=\"file\" name=\"image\" onChange={retrieveImage} />\r\n                <label for=\"endTimestamp\">Finish date</label>\r\n                <input\r\n                  id=\"endTimestamp\"\r\n                  type=\"date\"\r\n                  name=\"endTimestamp\"\r\n                  onChange={handleFieldChange}\r\n                />\r\n                <label htmlFor=\"type\">Fast Raffle ( 0 = deactivated )</label>\r\n                <input\r\n                  id=\"type\"\r\n                  type=\"number\"\r\n                  name=\"type\"\r\n                  onChange={handleFieldChange}\r\n                />\r\n                <label htmlFor=\"maxParticipants\">Max Participants ( 0 = deactivated )</label>\r\n                <input\r\n                  id=\"maxParticipants\"\r\n                  type=\"number\"\r\n                  name=\"maxParticipants\"\r\n                  onChange={handleFieldChange}\r\n                />\r\n                <label htmlFor=\"maxParticipants\">Ticket Cost</label>\r\n                <input\r\n                  id=\"cost\"\r\n                  type=\"number\"\r\n                  name=\"cost\"\r\n                  onChange={handleFieldChange}\r\n                />\r\n                <label htmlFor=\"winnersCount\">Winners ( max 10 )</label>\r\n                <input\r\n                  id=\"winnersCount\"\r\n                  type=\"number\"\r\n                  name=\"winnersCount\"\r\n                  onChange={handleFieldChange}\r\n                />\r\n              </div>\r\n                <div className=\"metadata\">\r\n                  <div\r\n                    className=\"close-icon\"\r\n                    onClick={ () => {\r\n                      setRaffleCreator({\r\n                        ...raffleCreator,\r\n                        display: false\r\n                      })\r\n                    }}\r\n                  >\r\n                    Back\r\n                  </div>\r\n                  <h2 style={{ fontSize: '18px' }}>Create a new Raffle</h2>\r\n                  <label for=\"collectionName\">Collection Name</label>\r\n                  <input\r\n                    id=\"collectionName\"\r\n                    type=\"text\"\r\n                    name=\"collectionName\"\r\n                    onChange={handleFieldChange}\r\n                  />\r\n                  <label for=\"collectionAddress\">Collection Address</label>\r\n                  <input\r\n                    id=\"collectionAddress\"\r\n                    type=\"text\"\r\n                    name=\"collectionAddress\"\r\n                    onChange={handleFieldChange}\r\n                  />\r\n                  <label for=\"title\">Raffle Title</label>\r\n                  <input\r\n                    id=\"title\"\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    onChange={handleFieldChange}\r\n                  />\r\n                  <label for=\"description\">Raffle Description</label>\r\n                  <div\r\n                    style={{ overflowY: 'scroll'}}\r\n                  >\r\n                    <ReactQuill\r\n                      className=\"description-editor\"\r\n                      modules={modules}\r\n                      formats={formats}\r\n                      value={raffleCreator.description}\r\n                      onChange={handleFieldChange}\r\n                      placeholder={\"Write something awesome...\"}\r\n                      name=\"description\"\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"pay-action\"\r\n                  >\r\n                    <button\r\n                      className=\"skull-button save-grave\"\r\n                      onClick={ () => addRaffle() }\r\n                    >\r\n                      Add Raffle\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : \r\n          ('')\r\n        }\r\n      <div className=\"sk-container sk-row\" style={{ overflow: 'hidden' }}>\r\n        <div className=\"sk-box sk-column sk-raffle\">\r\n          <div className=\"\">\r\n            <h3>Raffle Time!</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut eget urna ex. Etiam eleifend interdum lobortis. Morbi laoreet purus sed felis semper posuere.\r\n            </p>\r\n            {\r\n              isManager ? (\r\n              <button \r\n                className=\"skull-button\"\r\n                onClick={ () => \r\n                  setRaffleCreator({\r\n                    ...raffleCreator,\r\n                    display: true\r\n                  })\r\n                }\r\n              >\r\n                Add Raffle\r\n              </button>\r\n              ) : ('')\r\n            }\r\n          </div>\r\n          <div className=\"sk-raffle sk-flex sk-column\">\r\n            { raffles && raffles.length > 0 ?\r\n              raffles.map( raf => {\r\n                let {\r\n                  type, \r\n                  title, \r\n                  winnersCount, \r\n                  maxParticipants, \r\n                  cost, \r\n                  collectionName, \r\n                  collectionAddress, \r\n                  startTimestamp, \r\n                  endTimestamp, \r\n                  description,\r\n                  participants,\r\n                  winners\r\n                } = raf\r\n                /*let raffleDuration = raf.finish - ( new Date() / 1000 );\r\n                let raffleStart = raf.start - ( new Date() / 1000 );\r\n                let raffleDurationDate = formatDate(raffleDuration);*/\r\n                let currentTimestamp = parseInt( new Date( ).getTime() / 1000 )\r\n                let raffleDuration = currentTimestamp < endTimestamp ? endTimestamp - currentTimestamp : 0\r\n                let raffleDurationFormatted = formatDate(raffleDuration)\r\n                console.log(\r\n                  currentTimestamp,\r\n                  raffleDuration,\r\n                  raffleDurationFormatted\r\n                )\r\n                let raffleStart = 0;\r\n                let raffleDurationDate = 0;\r\n                \r\n                return (\r\n                  <div className=\"sk-raffle-item sk-flex sk-row\" >\r\n                    <div className=\"wd-22\">\r\n                      <img src={Coins} className=\"img-raffle\" />\r\n                    </div>\r\n                    <div className=\"raffle-box-1 wd-44 sk-flex sk-column\">\r\n                        <span className=\"sk-raffle-details\">\r\n                          { `${type > 0 ? `Fast Raffle ${type}%` : 'Normal Raffle'} | ${winnersCount} Winners | ${ maxParticipants ? `${participants}/${maxParticipants}` : participants } Participants` }\r\n                        </span>\r\n                        <h3>{title}</h3>\r\n                        <p>\r\n                          {description} \r\n                        </p>\r\n                    </div>\r\n                    {\r\n\r\n                      winners && winners.length ?\r\n                        (\r\n                          <div className=\"raffle-box-2 wd-33\">\r\n                            <p>Started: {startTimestamp}</p>\r\n                            <p>Ended: {endTimestamp}</p>\r\n                            <button \r\n                              className=\"skull-button winners-button\" \r\n                              onClick={ () => { openModal(raf) } } \r\n                            >\r\n                              View Winners\r\n                            </button>\r\n                          </div>\r\n                        ) : (\r\n                          <div className=\"raffle-box-2 wd-33\">\r\n                            <p>Cost: { cost }<img src={Grave} className=\"skull-icon\" /></p>\r\n                            <p>Ending in: {raffleDurationFormatted.days}d {raffleDurationFormatted.hours}h {raffleDurationFormatted.minutes}m <FontAwesomeIcon icon={faHourglassHalf} /></p>\r\n                            <button \r\n                              className=\"skull-button winners-button\" \r\n                              onClick={ () => { participateRaffle(raf.id) } }\r\n                            >\r\n                              Participate\r\n                            </button>\r\n                          </div>\r\n                        )\r\n                    }\r\n                  </div>\r\n                )\r\n              }) :\r\n                ('')\r\n              }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nlet modules = {\r\n  toolbar: [\r\n    [{ 'header': [1, 2, false] }],\r\n    ['bold', 'italic', 'underline','strike', 'blockquote'],\r\n    [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\r\n    ['clean']\r\n  ],\r\n};\r\n\r\nlet formats = [\r\n  'header',\r\n  'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n  'list', 'bullet', 'indent',\r\n];\r\n\r\nexport default Raffle;\r\n"]},"metadata":{},"sourceType":"module"}