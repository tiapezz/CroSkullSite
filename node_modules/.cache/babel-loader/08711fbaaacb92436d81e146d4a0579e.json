{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Params = exports.DenomTrace = exports.FungibleTokenPacketData = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nvar long_1 = __importDefault(require(\"long\"));\n\nvar minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nexports.protobufPackage = \"ibc.applications.transfer.v1\";\nvar baseFungibleTokenPacketData = {\n  denom: \"\",\n  amount: long_1.default.UZERO,\n  sender: \"\",\n  receiver: \"\"\n};\nexports.FungibleTokenPacketData = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.denom !== \"\") {\n      writer.uint32(10).string(message.denom);\n    }\n\n    if (!message.amount.isZero()) {\n      writer.uint32(16).uint64(message.amount);\n    }\n\n    if (message.sender !== \"\") {\n      writer.uint32(26).string(message.sender);\n    }\n\n    if (message.receiver !== \"\") {\n      writer.uint32(34).string(message.receiver);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseFungibleTokenPacketData);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.denom = reader.string();\n          break;\n\n        case 2:\n          message.amount = reader.uint64();\n          break;\n\n        case 3:\n          message.sender = reader.string();\n          break;\n\n        case 4:\n          message.receiver = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseFungibleTokenPacketData);\n\n    if (object.denom !== undefined && object.denom !== null) {\n      message.denom = String(object.denom);\n    } else {\n      message.denom = \"\";\n    }\n\n    if (object.amount !== undefined && object.amount !== null) {\n      message.amount = long_1.default.fromString(object.amount);\n    } else {\n      message.amount = long_1.default.UZERO;\n    }\n\n    if (object.sender !== undefined && object.sender !== null) {\n      message.sender = String(object.sender);\n    } else {\n      message.sender = \"\";\n    }\n\n    if (object.receiver !== undefined && object.receiver !== null) {\n      message.receiver = String(object.receiver);\n    } else {\n      message.receiver = \"\";\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.denom !== undefined && (obj.denom = message.denom);\n    message.amount !== undefined && (obj.amount = (message.amount || long_1.default.UZERO).toString());\n    message.sender !== undefined && (obj.sender = message.sender);\n    message.receiver !== undefined && (obj.receiver = message.receiver);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c;\n\n    var message = Object.assign({}, baseFungibleTokenPacketData);\n    message.denom = (_a = object.denom) !== null && _a !== void 0 ? _a : \"\";\n\n    if (object.amount !== undefined && object.amount !== null) {\n      message.amount = object.amount;\n    } else {\n      message.amount = long_1.default.UZERO;\n    }\n\n    message.sender = (_b = object.sender) !== null && _b !== void 0 ? _b : \"\";\n    message.receiver = (_c = object.receiver) !== null && _c !== void 0 ? _c : \"\";\n    return message;\n  }\n};\nvar baseDenomTrace = {\n  path: \"\",\n  baseDenom: \"\"\n};\nexports.DenomTrace = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.path !== \"\") {\n      writer.uint32(10).string(message.path);\n    }\n\n    if (message.baseDenom !== \"\") {\n      writer.uint32(18).string(message.baseDenom);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseDenomTrace);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.path = reader.string();\n          break;\n\n        case 2:\n          message.baseDenom = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseDenomTrace);\n\n    if (object.path !== undefined && object.path !== null) {\n      message.path = String(object.path);\n    } else {\n      message.path = \"\";\n    }\n\n    if (object.baseDenom !== undefined && object.baseDenom !== null) {\n      message.baseDenom = String(object.baseDenom);\n    } else {\n      message.baseDenom = \"\";\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.path !== undefined && (obj.path = message.path);\n    message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n\n    var message = Object.assign({}, baseDenomTrace);\n    message.path = (_a = object.path) !== null && _a !== void 0 ? _a : \"\";\n    message.baseDenom = (_b = object.baseDenom) !== null && _b !== void 0 ? _b : \"\";\n    return message;\n  }\n};\nvar baseParams = {\n  sendEnabled: false,\n  receiveEnabled: false\n};\nexports.Params = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.sendEnabled === true) {\n      writer.uint32(8).bool(message.sendEnabled);\n    }\n\n    if (message.receiveEnabled === true) {\n      writer.uint32(16).bool(message.receiveEnabled);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseParams);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.sendEnabled = reader.bool();\n          break;\n\n        case 2:\n          message.receiveEnabled = reader.bool();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseParams);\n\n    if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n      message.sendEnabled = Boolean(object.sendEnabled);\n    } else {\n      message.sendEnabled = false;\n    }\n\n    if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n      message.receiveEnabled = Boolean(object.receiveEnabled);\n    } else {\n      message.receiveEnabled = false;\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.sendEnabled !== undefined && (obj.sendEnabled = message.sendEnabled);\n    message.receiveEnabled !== undefined && (obj.receiveEnabled = message.receiveEnabled);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n\n    var message = Object.assign({}, baseParams);\n    message.sendEnabled = (_a = object.sendEnabled) !== null && _a !== void 0 ? _a : false;\n    message.receiveEnabled = (_b = object.receiveEnabled) !== null && _b !== void 0 ? _b : false;\n    return message;\n  }\n};\n\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":null,"metadata":{},"sourceType":"script"}