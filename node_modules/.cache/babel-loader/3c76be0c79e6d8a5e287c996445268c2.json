{"ast":null,"code":"import _objectSpread from \"F:\\\\Mattia\\\\Visual studio\\\\ProjectCroSkull\\\\croskull-nft-marketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  loading: false,\n  //grave related\n  allowance: 0,\n  //global bank state\n  maxApy: 0,\n  totalGraveVolume: 0,\n  totalWishbonesVolume: 0,\n  totalContractsVolume: 0,\n  depositedGrave: 0,\n  activeWishbones: 0,\n  activeContracts: 0,\n  wishboneCost: 0,\n  bankFee: 0,\n  //user state\n  userContractsCount: 0,\n  userActiveContracts: [],\n  userContracts: [],\n  //global farm state\n  lpPairAllowance: 0,\n  rewardPerBlock: 0,\n  paidOut: 0,\n  endBlock: 0,\n  stakedAmount: 0,\n  pendingRewards: 0,\n  totalLiquidity: 0,\n  lpPairBalance: 0,\n  totalPending: 0,\n  totalStakedCro: 0\n};\n\nvar bankReducer = function bankReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var payload = action.payload;\n\n  switch (action.type) {\n    case \"FETCH_BANK_REQUEST\":\n      return _objectSpread({}, initialState, {\n        loading: true\n      });\n\n    case \"FETCH_BANK_SUCCESS\":\n      return _objectSpread({}, state, {\n        loading: false,\n        allowance: payload.allowance,\n        maxApy: payload.maxApy,\n        totalGraveVolume: payload.totalGraveVolume,\n        totalWishbonesVolume: payload.totalWishbonesVolume,\n        totalContractsVolume: payload.totalContractsVolume,\n        depositedGrave: payload.depositedGrave,\n        activeWishbones: payload.activeWishbones,\n        activeContracts: payload.activeContracts,\n        wishboneCost: payload.wishboneCost,\n        bankFee: payload.bankFee,\n        //user state\n        userContractsCount: payload.userContractsCount,\n        userActiveContracts: payload.userActiveContracts,\n        userContracts: payload.userContracts\n      });\n\n    case \"FETCH_FARM_SUCCESS\":\n      return _objectSpread({}, state, {\n        rewardPerBlock: payload.rewardPerBlock,\n        paidOut: payload.paidOut,\n        endBlock: payload.endBlock,\n        lpPairAllowance: payload.lpPairAllowance,\n        stakedAmount: payload.stakedAmount,\n        totalLiquidity: payload.totalLiquidity,\n        pendingRewards: payload.pendingRewards,\n        lpPairBalance: payload.lpPairBalance,\n        totalPending: payload.totalPending,\n        totalStakedCro: payload.totalStakedCro\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default bankReducer;","map":{"version":3,"sources":["F:/Mattia/Visual studio/ProjectCroSkull/croskull-nft-marketplace/src/redux/bank/bankReducer.js"],"names":["initialState","loading","allowance","maxApy","totalGraveVolume","totalWishbonesVolume","totalContractsVolume","depositedGrave","activeWishbones","activeContracts","wishboneCost","bankFee","userContractsCount","userActiveContracts","userContracts","lpPairAllowance","rewardPerBlock","paidOut","endBlock","stakedAmount","pendingRewards","totalLiquidity","lpPairBalance","totalPending","totalStakedCro","bankReducer","state","action","payload","type"],"mappings":"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","sourcesContent":["const initialState = {\r\n    loading: false,\r\n    //grave related\r\n    allowance: 0,\r\n    //global bank state\r\n    maxApy: 0,\r\n    totalGraveVolume: 0,\r\n    totalWishbonesVolume: 0,\r\n    totalContractsVolume: 0,\r\n    depositedGrave: 0,\r\n    activeWishbones: 0,\r\n    activeContracts: 0,\r\n    wishboneCost: 0,\r\n    bankFee: 0,\r\n    //user state\r\n    userContractsCount: 0,\r\n    userActiveContracts: [],\r\n    userContracts: [],\r\n    //global farm state\r\n    lpPairAllowance: 0,\r\n    rewardPerBlock: 0,\r\n    paidOut: 0,\r\n    endBlock: 0,\r\n    stakedAmount: 0,\r\n    pendingRewards: 0,\r\n    totalLiquidity: 0,\r\n    lpPairBalance: 0,\r\n    totalPending: 0,\r\n    totalStakedCro: 0\r\n};\r\n\r\nconst bankReducer = (state = initialState, action) => {\r\n    let payload = action.payload\r\n    switch (action.type) {\r\n        case \"FETCH_BANK_REQUEST\":\r\n            return {\r\n                ...initialState,\r\n                loading: true\r\n            };\r\n        case \"FETCH_BANK_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                allowance: payload.allowance,\r\n                maxApy: payload.maxApy,\r\n                totalGraveVolume: payload.totalGraveVolume,\r\n                totalWishbonesVolume: payload.totalWishbonesVolume,\r\n                totalContractsVolume: payload.totalContractsVolume,\r\n                depositedGrave: payload.depositedGrave,\r\n                activeWishbones: payload.activeWishbones,\r\n                activeContracts: payload.activeContracts,\r\n                wishboneCost: payload.wishboneCost,\r\n                bankFee: payload.bankFee,\r\n                //user state\r\n                userContractsCount: payload.userContractsCount,\r\n                userActiveContracts: payload.userActiveContracts,\r\n                userContracts: payload.userContracts,\r\n            };\r\n        case \"FETCH_FARM_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                rewardPerBlock: payload.rewardPerBlock,\r\n                paidOut: payload.paidOut,\r\n                endBlock: payload.endBlock,\r\n                lpPairAllowance: payload.lpPairAllowance,\r\n                stakedAmount: payload.stakedAmount,\r\n                totalLiquidity: payload.totalLiquidity,\r\n                pendingRewards: payload.pendingRewards,\r\n                lpPairBalance: payload.lpPairBalance,\r\n                totalPending: payload.totalPending,\r\n                totalStakedCro: payload.totalStakedCro\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default bankReducer;"]},"metadata":{},"sourceType":"module"}